ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"GFX.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5cFontC2EPK7GFXfont,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN5cFontC2EPK7GFXfont
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5cFontC2EPK7GFXfont:
  27              	.LVL0:
  28              	.LFB2629:
  29              		.file 1 "GFX.cpp"
   1:GFX.cpp       **** //------------------------------------------------------------------------
   2:GFX.cpp       **** // Copyright(c) 2024 Dad Desing.
   3:GFX.cpp       **** //      Bibliothèque graphique
   4:GFX.cpp       **** //
   5:GFX.cpp       **** // Inspiré largement de :
   6:GFX.cpp       **** //    Adafruit-GFX-Library : https://github.com/adafruit/Adafruit-GFX-Library
   7:GFX.cpp       **** //    eSPI : https://github.com/Bodmer/TFT_eSPI
   8:GFX.cpp       **** //------------------------------------------------------------------------
   9:GFX.cpp       **** #include "Debug.h"
  10:GFX.cpp       **** #include "GFX.h"
  11:GFX.cpp       **** 
  12:GFX.cpp       **** //***********************************************************************************
  13:GFX.cpp       **** // CFont
  14:GFX.cpp       **** // Gestion des polices de caratères
  15:GFX.cpp       **** // Utilisation de la structuration des fonts de Adafruit-GFX-Library
  16:GFX.cpp       **** // Ce qui permet de profiter des outils de conversion (ex: https://rop.nl/truetype2gfx/)
  17:GFX.cpp       **** cFont::cFont(const GFXfont *pFont)
  30              		.loc 1 17 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LBB64:
  18:GFX.cpp       **** {
  19:GFX.cpp       ****     m_pFont = pFont;         // Pointe sur le descripteur de font
  35              		.loc 1 19 5 view .LVU1
  36              	.LBE64:
  17:GFX.cpp       **** {
  37              		.loc 1 17 1 is_stmt 0 view .LVU2
  38 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 2


  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              	.LBB68:
  20:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  21:GFX.cpp       **** 
  22:GFX.cpp       ****     // On parcours tous les caratères pour déterminer la hauteur max des caratères
  23:GFX.cpp       ****     // En sortie nous avons deux variables configurées :
  24:GFX.cpp       ****     //    m_NegHeight = hauteur sous la ligne du curseur;
  25:GFX.cpp       ****     //    m_PosHeight = hauteur au dessus de la ligne du curseur;
  26:GFX.cpp       ****     GFXglyph *pTable = m_pTable;
  27:GFX.cpp       ****     uint16_t SizeTable = 1 + pFont->last - pFont->first;
  43              		.loc 1 27 14 view .LVU3
  44 0002 B1F80AE0 		ldrh	lr, [r1, #10]
  28:GFX.cpp       ****     m_NegHeight = 0;
  29:GFX.cpp       ****     m_PosHeight = 0;
  45              		.loc 1 29 17 view .LVU4
  46 0006 4FF0000C 		mov	ip, #0
  27:GFX.cpp       ****     m_NegHeight = 0;
  47              		.loc 1 27 14 view .LVU5
  48 000a 0B89     		ldrh	r3, [r1, #8]
  49 000c 0EF1010E 		add	lr, lr, #1
  20:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  50              		.loc 1 20 23 view .LVU6
  51 0010 4A68     		ldr	r2, [r1, #4]
  19:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  52              		.loc 1 19 13 view .LVU7
  53 0012 0160     		str	r1, [r0]
  20:GFX.cpp       **** 
  54              		.loc 1 20 5 is_stmt 1 view .LVU8
  27:GFX.cpp       ****     m_NegHeight = 0;
  55              		.loc 1 27 14 is_stmt 0 view .LVU9
  56 0014 AEEB030E 		sub	lr, lr, r3
  20:GFX.cpp       **** 
  57              		.loc 1 20 14 view .LVU10
  58 0018 4260     		str	r2, [r0, #4]
  26:GFX.cpp       ****     uint16_t SizeTable = 1 + pFont->last - pFont->first;
  59              		.loc 1 26 5 is_stmt 1 view .LVU11
  60              	.LVL1:
  27:GFX.cpp       ****     m_NegHeight = 0;
  61              		.loc 1 27 5 view .LVU12
  62              		.loc 1 29 17 is_stmt 0 view .LVU13
  63 001a A0F808C0 		strh	ip, [r0, #8]	@ movhi
  27:GFX.cpp       ****     m_NegHeight = 0;
  64              		.loc 1 27 14 view .LVU14
  65 001e 1FFA8EF3 		uxth	r3, lr
  66              	.LVL2:
  28:GFX.cpp       ****     m_PosHeight = 0;
  67              		.loc 1 28 5 is_stmt 1 view .LVU15
  68              		.loc 1 29 5 view .LVU16
  30:GFX.cpp       ****     for (uint16_t index = 0; index < SizeTable; index++)
  69              		.loc 1 30 5 view .LVU17
  70              	.LBB65:
  71              		.loc 1 30 36 view .LVU18
  72 0022 B3B1     		cbz	r3, .L2
  73 0024 02EBC30E 		add	lr, r2, r3, lsl #3
  74 0028 6446     		mov	r4, ip
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 3


  75 002a 03E0     		b	.L5
  76              	.LVL3:
  77              	.L12:
  78              	.LBB66:
  31:GFX.cpp       ****     {
  32:GFX.cpp       ****         int8_t Offset = pTable->yOffset;
  33:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  34:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  79              		.loc 1 34 25 is_stmt 0 view .LVU19
  80 002c 90F90940 		ldrsb	r4, [r0, #9]
  35:GFX.cpp       ****         {
  36:GFX.cpp       ****             m_NegHeight = NegHeight;
  37:GFX.cpp       ****         }
  38:GFX.cpp       ****         if (Offset < m_PosHeight)
  81              		.loc 1 38 22 view .LVU20
  82 0030 90F908C0 		ldrsb	ip, [r0, #8]
  83              	.LVL4:
  84              	.L5:
  32:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  85              		.loc 1 32 9 is_stmt 1 view .LVU21
  36:GFX.cpp       ****         }
  86              		.loc 1 36 13 view .LVU22
  87              		.loc 1 38 9 view .LVU23
  39:GFX.cpp       ****         {
  40:GFX.cpp       ****             m_PosHeight = Offset;
  88              		.loc 1 40 13 view .LVU24
  41:GFX.cpp       ****         }
  42:GFX.cpp       ****         pTable++;
  89              		.loc 1 42 9 view .LVU25
  32:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  90              		.loc 1 32 16 is_stmt 0 view .LVU26
  91 0034 92F90610 		ldrsb	r1, [r2, #6]
  92              	.LVL5:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  93              		.loc 1 33 9 is_stmt 1 view .LVU27
  94              		.loc 1 42 15 is_stmt 0 view .LVU28
  95 0038 0832     		adds	r2, r2, #8
  96              	.LVL6:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  97              		.loc 1 33 43 view .LVU29
  98 003a 12F8053C 		ldrb	r3, [r2, #-5]	@ zero_extendqisi2
  99              	.LVL7:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 100              		.loc 1 33 43 view .LVU30
 101              	.LBE66:
  30:GFX.cpp       ****     {
 102              		.loc 1 30 5 is_stmt 1 view .LVU31
  30:GFX.cpp       ****     {
 103              		.loc 1 30 36 view .LVU32
 104              	.LBB67:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 105              		.loc 1 33 43 is_stmt 0 view .LVU33
 106 003e 0B44     		add	r3, r3, r1
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 107              		.loc 1 33 16 view .LVU34
 108 0040 5BB2     		sxtb	r3, r3
 109              	.LVL8:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 4


  34:GFX.cpp       ****         {
 110              		.loc 1 34 9 is_stmt 1 view .LVU35
 111 0042 A342     		cmp	r3, r4
  36:GFX.cpp       ****         }
 112              		.loc 1 36 25 is_stmt 0 view .LVU36
 113 0044 C8BF     		it	gt
 114 0046 4372     		strbgt	r3, [r0, #9]
  38:GFX.cpp       ****         {
 115              		.loc 1 38 9 view .LVU37
 116 0048 6145     		cmp	r1, ip
  40:GFX.cpp       ****         }
 117              		.loc 1 40 25 view .LVU38
 118 004a B8BF     		it	lt
 119 004c 0172     		strblt	r1, [r0, #8]
 120              	.LBE67:
  30:GFX.cpp       ****     {
 121              		.loc 1 30 36 view .LVU39
 122 004e 7245     		cmp	r2, lr
 123 0050 ECD1     		bne	.L12
 124              	.LVL9:
 125              	.L2:
  30:GFX.cpp       ****     {
 126              		.loc 1 30 36 view .LVU40
 127              	.LBE65:
 128              	.LBE68:
  43:GFX.cpp       ****     }
  44:GFX.cpp       **** }
 129              		.loc 1 44 1 view .LVU41
 130 0052 10BD     		pop	{r4, pc}
 131              		.cfi_endproc
 132              	.LFE2629:
 134              		.global	_ZN5cFontC1EPK7GFXfont
 135              		.thumb_set _ZN5cFontC1EPK7GFXfont,_ZN5cFontC2EPK7GFXfont
 136              		.section	.text._ZN4cGFX12drawFillRectEttss6cColor,"ax",%progbits
 137              		.align	1
 138              		.p2align 2,,3
 139              		.global	_ZN4cGFX12drawFillRectEttss6cColor
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-d16
 145              	_ZN4cGFX12drawFillRectEttss6cColor:
 146              	.LVL10:
 147              	.LFB2632:
  45:GFX.cpp       **** 
  46:GFX.cpp       **** //***********************************************************************************
  47:GFX.cpp       **** // cGFX
  48:GFX.cpp       **** //   Bibliothèque Graphique
  49:GFX.cpp       **** 
  50:GFX.cpp       **** //-----------------------------------------------------------------------------------
  51:GFX.cpp       **** // Tracer un rectange vide 
  52:GFX.cpp       **** void cGFX::drawRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color){
  53:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
  54:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
  55:GFX.cpp       **** 
  56:GFX.cpp       ****     drawLine(x, y, x+dx, y, Color);
  57:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 5


  58:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
  59:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
  60:GFX.cpp       **** }
  61:GFX.cpp       **** 
  62:GFX.cpp       **** //-----------------------------------------------------------------------------------
  63:GFX.cpp       **** // Tracer un rectangle plein
  64:GFX.cpp       **** void cGFX::drawFillRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color){
 148              		.loc 1 64 86 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 8, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
  65:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 152              		.loc 1 65 5 view .LVU43
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 153              		.loc 1 64 86 is_stmt 0 view .LVU44
 154 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 4, -36
 157              		.cfi_offset 5, -32
 158              		.cfi_offset 6, -28
 159              		.cfi_offset 7, -24
 160              		.cfi_offset 8, -20
 161              		.cfi_offset 9, -16
 162              		.cfi_offset 10, -12
 163              		.cfi_offset 11, -8
 164              		.cfi_offset 14, -4
 165              		.loc 1 65 5 view .LVU45
 166 0004 002B     		cmp	r3, #0
 167              	.LVL11:
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 168              		.loc 1 64 86 view .LVU46
 169 0006 83B0     		sub	sp, sp, #12
 170              		.cfi_def_cfa_offset 48
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 171              		.loc 1 64 86 view .LVU47
 172 0008 BDF93070 		ldrsh	r7, [sp, #48]
 173              		.loc 1 65 5 view .LVU48
 174 000c 04DA     		bge	.L14
 175              		.loc 1 65 17 is_stmt 1 discriminator 1 view .LVU49
 176              		.loc 1 65 19 is_stmt 0 discriminator 1 view .LVU50
 177 000e 9BB2     		uxth	r3, r3
 178 0010 1944     		add	r1, r1, r3
 179              	.LVL12:
 180              		.loc 1 65 29 discriminator 1 view .LVU51
 181 0012 5B42     		rsbs	r3, r3, #0
 182              		.loc 1 65 19 discriminator 1 view .LVU52
 183 0014 89B2     		uxth	r1, r1
 184              	.LVL13:
 185              		.loc 1 65 26 is_stmt 1 discriminator 1 view .LVU53
 186              		.loc 1 65 29 is_stmt 0 discriminator 1 view .LVU54
 187 0016 1BB2     		sxth	r3, r3
 188              	.LVL14:
 189              	.L14:
  66:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 190              		.loc 1 66 5 is_stmt 1 view .LVU55
 191 0018 002F     		cmp	r7, #0
 192 001a 04DA     		bge	.L15
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 6


 193              		.loc 1 66 17 discriminator 1 view .LVU56
 194              		.loc 1 66 19 is_stmt 0 discriminator 1 view .LVU57
 195 001c BFB2     		uxth	r7, r7
 196 001e 3A44     		add	r2, r2, r7
 197              	.LVL15:
 198              		.loc 1 66 29 discriminator 1 view .LVU58
 199 0020 7F42     		rsbs	r7, r7, #0
 200              		.loc 1 66 19 discriminator 1 view .LVU59
 201 0022 92B2     		uxth	r2, r2
 202              	.LVL16:
 203              		.loc 1 66 26 is_stmt 1 discriminator 1 view .LVU60
 204              		.loc 1 66 29 is_stmt 0 discriminator 1 view .LVU61
 205 0024 3FB2     		sxth	r7, r7
 206              	.LVL17:
 207              	.L15:
  67:GFX.cpp       **** 
  68:GFX.cpp       ****     RGB *pFrame;
 208              		.loc 1 68 5 is_stmt 1 view .LVU62
  69:GFX.cpp       ****     RGB *pEndLigne;
 209              		.loc 1 69 5 view .LVU63
  70:GFX.cpp       ****     
  71:GFX.cpp       ****     for (uint16_t PosY = y; PosY < (y+dy); PosY++){
 210              		.loc 1 71 5 view .LVU64
 211              	.LBB76:
 212              		.loc 1 71 34 view .LVU65
 213              		.loc 1 71 38 is_stmt 0 view .LVU66
 214 0026 1744     		add	r7, r7, r2
 215              	.LVL18:
 216              		.loc 1 71 34 view .LVU67
 217 0028 BA42     		cmp	r2, r7
 218 002a 45DA     		bge	.L13
 219              		.loc 1 71 34 view .LVU68
 220 002c B0F85C90 		ldrh	r9, [r0, #92]
  72:GFX.cpp       ****         pFrame = getPtr(x, PosY);
  73:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 221              		.loc 1 73 27 view .LVU69
 222 0030 0B44     		add	r3, r3, r1
 223              	.LVL19:
 224              		.loc 1 73 27 view .LVU70
 225 0032 B0F85EA0 		ldrh	r10, [r0, #94]
 226              	.LBB77:
 227              	.LBB78:
 228              		.file 2 "Frame.h"
   1:Frame.h       **** //------------------------------------------------------------------------
   2:Frame.h       **** // Copyright(c) 2024 Dad Desing.
   3:Frame.h       **** //      Gestion d'une frame de pixel
   4:Frame.h       **** //      Les pixels sont organisés en bloc de transmission
   5:Frame.h       **** //      pour une mise à jour optimisé de l'écran
   6:Frame.h       **** //------------------------------------------------------------------------
   7:Frame.h       **** #pragma once
   8:Frame.h       **** #include <stdint.h>
   9:Frame.h       **** #include "TFT_SPI.h"
  10:Frame.h       **** #include "Debug.h"
  11:Frame.h       **** 
  12:Frame.h       **** #define NB_BLOC (FRAME_GRILLE*FRAME_GRILLE)
  13:Frame.h       **** #if TFT_COLOR == 16
  14:Frame.h       ****     #define TAILLE_BLOC (TFT_WIDTH * TFT_HEIGHT * 2) / NB_BLOC
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 7


  15:Frame.h       **** #else
  16:Frame.h       ****     #define TAILLE_BLOC (TFT_WIDTH * TFT_HEIGHT * 3) / NB_BLOC
  17:Frame.h       **** #endif
  18:Frame.h       **** 
  19:Frame.h       **** //***********************************************************************************
  20:Frame.h       **** // Cmd_CASET
  21:Frame.h       **** //   Commande SPI de séléction des colones  
  22:Frame.h       **** //*********************************************************************************** 
  23:Frame.h       **** class Cmd_CASET {
  24:Frame.h       ****     public :
  25:Frame.h       ****     friend class cRBG_Frame;
  26:Frame.h       ****     // --------------------------------------------------------------------------
  27:Frame.h       ****     // Constructeur
  28:Frame.h       ****     Cmd_CASET(){
  29:Frame.h       ****         m_Commande = TFT_CASET;
  30:Frame.h       ****     }
  31:Frame.h       **** 
  32:Frame.h       ****     // --------------------------------------------------------------------------
  33:Frame.h       ****     // Définition de l'abcisse de la fenetre
  34:Frame.h       ****     void setData(uint16_t x, uint16_t dx){
  35:Frame.h       ****         m_Data[0] = x >> 8;
  36:Frame.h       ****         m_Data[1] = x & 0xFF;
  37:Frame.h       ****         m_Data[2] = dx >> 8;
  38:Frame.h       ****         m_Data[3] = dx & 0xFF;
  39:Frame.h       ****     }
  40:Frame.h       ****     
  41:Frame.h       ****     // --------------------------------------------------------------------------
  42:Frame.h       ****     // Données de la classe
  43:Frame.h       ****     protected :
  44:Frame.h       ****     uint8_t m_Commande;
  45:Frame.h       ****     uint8_t m_Data[4];
  46:Frame.h       **** };
  47:Frame.h       **** 
  48:Frame.h       **** //***********************************************************************************
  49:Frame.h       **** // Cmd_RASET
  50:Frame.h       **** //   Commande SPI de selection des rangées  
  51:Frame.h       **** //*********************************************************************************** 
  52:Frame.h       **** class Cmd_RASET {
  53:Frame.h       ****     public :
  54:Frame.h       ****     friend class cRBG_Frame;
  55:Frame.h       **** 
  56:Frame.h       ****     // --------------------------------------------------------------------------
  57:Frame.h       ****     // Constructeur
  58:Frame.h       ****     Cmd_RASET(){
  59:Frame.h       ****         m_Commande = TFT_RASET;
  60:Frame.h       ****     }
  61:Frame.h       ****     
  62:Frame.h       ****     // --------------------------------------------------------------------------
  63:Frame.h       ****     // Définition de l'ordonnée de la fenètre
  64:Frame.h       ****     void setData(uint16_t y, uint16_t dy){
  65:Frame.h       ****         m_Data[0] = y >> 8;
  66:Frame.h       ****         m_Data[1] = y & 0xFF;
  67:Frame.h       ****         m_Data[2] = dy >> 8;
  68:Frame.h       ****         m_Data[3] = dy & 0xFF;
  69:Frame.h       ****     }
  70:Frame.h       **** 
  71:Frame.h       ****     // --------------------------------------------------------------------------
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 8


  72:Frame.h       ****     // Données de la classe
  73:Frame.h       ****     protected :
  74:Frame.h       ****     uint8_t m_Commande;
  75:Frame.h       ****     uint8_t m_Data[4];
  76:Frame.h       **** };
  77:Frame.h       **** 
  78:Frame.h       **** //***********************************************************************************
  79:Frame.h       **** // Cmd_RAMWR
  80:Frame.h       **** //   Commande SPI d'ecriture des pixels 
  81:Frame.h       **** //***********************************************************************************
  82:Frame.h       **** class cRBG_Frame;
  83:Frame.h       **** class Cmd_RAMWR {
  84:Frame.h       ****     public :
  85:Frame.h       ****     friend class cRBG_Frame;
  86:Frame.h       **** 
  87:Frame.h       ****     // --------------------------------------------------------------------------
  88:Frame.h       ****     // Constructeur
  89:Frame.h       ****     Cmd_RAMWR(){
  90:Frame.h       ****         m_Commande = TFT_RAMWR;
  91:Frame.h       ****     }
  92:Frame.h       **** 
  93:Frame.h       ****     // --------------------------------------------------------------------------
  94:Frame.h       ****     // Définition des pixels de la frame à transférer
  95:Frame.h       ****     void setData(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, cRBG_Frame *pFrame);
  96:Frame.h       **** 
  97:Frame.h       ****     // --------------------------------------------------------------------------
  98:Frame.h       ****     // Données de la classe
  99:Frame.h       ****     protected :
 100:Frame.h       ****     uint8_t m_Commande;
 101:Frame.h       ****     uint8_t m_Data[TAILLE_BLOC];
 102:Frame.h       **** };
 103:Frame.h       **** 
 104:Frame.h       **** //***********************************************************************************
 105:Frame.h       **** // cColor 
 106:Frame.h       **** //*********************************************************************************** 
 107:Frame.h       **** struct cColor { 
 108:Frame.h       ****     // Constructeur
 109:Frame.h       ****     cColor(uint8_t R, uint8_t G, uint8_t B, uint8_t Trans=255){
 110:Frame.h       ****         m_R = R;
 111:Frame.h       ****         m_G = G;
 112:Frame.h       ****         m_B = B;
 113:Frame.h       ****         m_Trans = Trans;
 114:Frame.h       ****     }
 115:Frame.h       **** 
 116:Frame.h       ****     uint8_t m_R;
 117:Frame.h       ****     uint8_t m_G;
 118:Frame.h       ****     uint8_t m_B;
 119:Frame.h       ****     uint8_t m_Trans;
 120:Frame.h       **** };
 121:Frame.h       **** 
 122:Frame.h       **** //***********************************************************************************
 123:Frame.h       **** // RGB
 124:Frame.h       **** // Définition d'un pixel RGB 
 125:Frame.h       **** //*********************************************************************************** 
 126:Frame.h       **** struct RGB {
 127:Frame.h       ****     friend class cRBG_Frame;
 128:Frame.h       **** 	// --------------------------------------------------------------------------
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 9


 129:Frame.h       **** 	// Mise à jour d'un pixel et indication que le bloc a changé d'état
 130:Frame.h       ****     void inline set(cColor Color){
 131:Frame.h       ****         R = Color.m_R;
 132:Frame.h       ****         G = Color.m_G;
 133:Frame.h       ****         B = Color.m_B;
 134:Frame.h       ****         *m_pChange = true;
 135:Frame.h       ****     }
 136:Frame.h       **** 
 137:Frame.h       ****     // --------------------------------------------------------------------------
 138:Frame.h       **** 	// Lecture de la composante Rouge 
 139:Frame.h       ****     uint8_t inline getR(){
 140:Frame.h       ****         return R;
 141:Frame.h       ****     }
 142:Frame.h       ****     // --------------------------------------------------------------------------
 143:Frame.h       **** 	// Lecture de la composante Verte 
 144:Frame.h       ****     uint8_t inline getG(){
 145:Frame.h       ****         return G;
 146:Frame.h       ****     }
 147:Frame.h       **** 
 148:Frame.h       ****     // --------------------------------------------------------------------------
 149:Frame.h       **** 	// Lecture de la composante Bleue 
 150:Frame.h       ****     uint8_t inline getB(){
 151:Frame.h       ****         return B;
 152:Frame.h       ****     }
 153:Frame.h       **** 
 154:Frame.h       ****     // --------------------------------------------------------------------------
 155:Frame.h       ****     // Données de la classe
 156:Frame.h       ****     protected :
 157:Frame.h       ****     uint8_t R;          // Composante Rouge
 158:Frame.h       ****     uint8_t G;          // Composante Verte
 159:Frame.h       ****     uint8_t B;          // Composante Bleue
 160:Frame.h       ****     bool *m_pChange;    // Indicateur de changement d'état (pointe sur un tableau de bloc) 
 161:Frame.h       **** };
 162:Frame.h       **** 
 163:Frame.h       **** //***********************************************************************************
 164:Frame.h       **** // cRBG_Frame
 165:Frame.h       **** //  Gestion de la framme
 166:Frame.h       **** //*********************************************************************************** 
 167:Frame.h       **** 
 168:Frame.h       **** //   Pour le fonctionnement du DMA cette structure doit être instanciée dans la
 169:Frame.h       **** //   mémoire DMA_BUFFER_MEM_SECTION
 170:Frame.h       **** struct FIFO_Data {
 171:Frame.h       ****     Cmd_CASET m_CmdCASET[SIZE_FIFO];
 172:Frame.h       ****     Cmd_RASET m_CmdRASET[SIZE_FIFO];
 173:Frame.h       ****     Cmd_RAMWR m_CmdRAWWR[SIZE_FIFO];
 174:Frame.h       **** };
 175:Frame.h       **** 
 176:Frame.h       **** // ================================
 177:Frame.h       **** // cRBG_Frame
 178:Frame.h       **** class cRBG_Frame  : protected TFT_SPI {
 179:Frame.h       ****     public:
 180:Frame.h       ****     // --------------------------------------------------------------------------
 181:Frame.h       ****     // Constructeur 
 182:Frame.h       ****     // FIFO_Data doit être instanciée dans la mémoire DMA_BUFFER_MEM_SECTION
 183:Frame.h       ****     cRBG_Frame(){
 184:Frame.h       ****         m_FIFO_in = 0;
 185:Frame.h       ****         m_FIFO_out = 0;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 10


 186:Frame.h       ****         m_FIFO_NbElements = 0;
 187:Frame.h       ****         m_Busy = false;
 188:Frame.h       ****     }
 189:Frame.h       **** 
 190:Frame.h       ****     // ==========================================================================
 191:Frame.h       ****     // Configuration
 192:Frame.h       **** 
 193:Frame.h       ****     // --------------------------------------------------------------------------
 194:Frame.h       ****     // Initialisation de la classe.
 195:Frame.h       ****     // Doit être appelée avant toute utilisation (aucune vérification réalisée) 
 196:Frame.h       ****     void setFrame(RGB *pFrameBuff,  FIFO_Data *pFIFO_Data, uint16_t Width,  uint16_t Height);
 197:Frame.h       ****     
 198:Frame.h       ****     // --------------------------------------------------------------------------
 199:Frame.h       ****     // Configuration l'orientation de la frame et de l'écran
 200:Frame.h       ****     void setFrameRotation (Rotation r);
 201:Frame.h       **** 
 202:Frame.h       ****     // ==========================================================================
 203:Frame.h       ****     // Lecture / Ecriture
 204:Frame.h       **** 
 205:Frame.h       ****     // --------------------------------------------------------------------------
 206:Frame.h       ****     // Retourne l'adresse d'un pixel à partir de ses coordonnées         
 207:Frame.h       ****     inline RGB *getPtr(uint16_t x, uint16_t y){
 208:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 229              		.loc 2 208 26 view .LVU71
 230 0036 09F1FF38 		add	r8, r9, #-1
 231              	.LBE78:
 232              	.LBE77:
 233              		.loc 1 73 27 view .LVU72
 234 003a 9BB2     		uxth	r3, r3
 235 003c 466D     		ldr	r6, [r0, #84]
 236              	.LBB83:
 237              	.LBB79:
 238              		.loc 2 208 26 view .LVU73
 239 003e 1FFA88F8 		uxth	r8, r8
 240 0042 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 241 0046 9DF83540 		ldrb	r4, [sp, #53]	@ zero_extendqisi2
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 210:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 242              		.loc 2 210 26 view .LVU74
 243 004a 4945     		cmp	r1, r9
 244 004c 34BF     		ite	cc
 245 004e 8B46     		movcc	fp, r1
 246 0050 C346     		movcs	fp, r8
 247              	.LBE79:
 248              	.LBE83:
 249              	.LBB84:
 250              	.LBB85:
 251 0052 4B45     		cmp	r3, r9
 252 0054 38BF     		it	cc
 253 0056 9846     		movcc	r8, r3
 254              	.LBE85:
 255              	.LBE84:
 256              	.LBB88:
 257              	.LBB80:
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 258              		.loc 2 209 27 view .LVU75
 259 0058 0AF1FF33 		add	r3, r10, #-1
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 11


 260 005c 9DF836E0 		ldrb	lr, [sp, #54]	@ zero_extendqisi2
 261 0060 9BB2     		uxth	r3, r3
 262 0062 0193     		str	r3, [sp, #4]
 263              	.LVL20:
 264              	.L20:
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 265              		.loc 2 209 27 view .LVU76
 266              	.LBE80:
 267              	.LBE88:
  72:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 268              		.loc 1 72 9 is_stmt 1 view .LVU77
 269              	.LBB89:
 270              	.LBI77:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 271              		.loc 2 207 17 view .LVU78
 272              	.LBB81:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 273              		.loc 2 208 9 view .LVU79
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 274              		.loc 2 209 9 view .LVU80
 275 0064 019B     		ldr	r3, [sp, #4]
 276 0066 9245     		cmp	r10, r2
 277 0068 88BF     		it	hi
 278 006a 1346     		movhi	r3, r2
 279              	.LVL21:
 280              		.loc 2 210 9 view .LVU81
 281              		.loc 2 210 30 is_stmt 0 view .LVU82
 282 006c 09FB03F1 		mul	r1, r9, r3
 283              		.loc 2 210 27 view .LVU83
 284 0070 0BEB0103 		add	r3, fp, r1
 285              	.LBE81:
 286              	.LBE89:
 287              	.LBB90:
 288              	.LBB86:
 289 0074 4144     		add	r1, r1, r8
 290              	.LBE86:
 291              	.LBE90:
 292              	.LBB91:
 293              	.LBB82:
 294              		.loc 2 210 39 view .LVU84
 295 0076 06EBC303 		add	r3, r6, r3, lsl #3
 296              	.LVL22:
 297              		.loc 2 210 39 view .LVU85
 298              	.LBE82:
 299              	.LBE91:
 300              		.loc 1 73 9 is_stmt 1 view .LVU86
 301              	.LBB92:
 302              	.LBI84:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 303              		.loc 2 207 17 view .LVU87
 304              	.LBB87:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 305              		.loc 2 208 9 view .LVU88
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 306              		.loc 2 209 9 view .LVU89
 307              		.loc 2 210 9 view .LVU90
 308              		.loc 2 210 39 is_stmt 0 view .LVU91
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 12


 309 007a 06EBC101 		add	r1, r6, r1, lsl #3
 310              	.LVL23:
 311              		.loc 2 210 39 view .LVU92
 312              	.LBE87:
 313              	.LBE92:
  74:GFX.cpp       ****         while (pFrame < pEndLigne){
 314              		.loc 1 74 9 is_stmt 1 view .LVU93
 315              		.loc 1 74 23 view .LVU94
 316 007e 9942     		cmp	r1, r3
 317 0080 16D9     		bls	.L21
 318              		.loc 1 74 23 is_stmt 0 view .LVU95
 319 0082 0139     		subs	r1, r1, #1
 320              	.LVL24:
 321              		.loc 1 74 23 view .LVU96
 322 0084 03F11000 		add	r0, r3, #16
 323 0088 C91A     		subs	r1, r1, r3
 324              	.LVL25:
 325              		.loc 1 74 23 view .LVU97
 326 008a 0833     		adds	r3, r3, #8
 327              	.LVL26:
 328              		.loc 1 74 23 view .LVU98
 329 008c 21F00701 		bic	r1, r1, #7
 330 0090 0144     		add	r1, r1, r0
 331              	.LVL27:
 332              	.L22:
  75:GFX.cpp       ****             pFrame->set(Color);
 333              		.loc 1 75 13 is_stmt 1 view .LVU99
 334              	.LBB93:
 335              	.LBI93:
 130:Frame.h       ****         R = Color.m_R;
 336              		.loc 2 130 17 view .LVU100
 337              	.LBB94:
 131:Frame.h       ****         G = Color.m_G;
 338              		.loc 2 131 9 view .LVU101
 134:Frame.h       ****     }
 339              		.loc 2 134 20 is_stmt 0 view .LVU102
 340 0092 53F8040C 		ldr	r0, [r3, #-4]
 341              	.LBE94:
 342              	.LBE93:
  74:GFX.cpp       ****             pFrame->set(Color);
 343              		.loc 1 74 23 view .LVU103
 344 0096 0833     		adds	r3, r3, #8
 345              	.LVL28:
 346              	.LBB97:
 347              	.LBB95:
 131:Frame.h       ****         G = Color.m_G;
 348              		.loc 2 131 11 view .LVU104
 349 0098 03F8105C 		strb	r5, [r3, #-16]
 132:Frame.h       ****         B = Color.m_B;
 350              		.loc 2 132 9 is_stmt 1 view .LVU105
 134:Frame.h       ****     }
 351              		.loc 2 134 20 is_stmt 0 view .LVU106
 352 009c 4FF0010C 		mov	ip, #1
 132:Frame.h       ****         B = Color.m_B;
 353              		.loc 2 132 11 view .LVU107
 354 00a0 03F80F4C 		strb	r4, [r3, #-15]
 133:Frame.h       ****         *m_pChange = true;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 13


 355              		.loc 2 133 9 is_stmt 1 view .LVU108
 133:Frame.h       ****         *m_pChange = true;
 356              		.loc 2 133 11 is_stmt 0 view .LVU109
 357 00a4 03F80EEC 		strb	lr, [r3, #-14]
 134:Frame.h       ****     }
 358              		.loc 2 134 9 is_stmt 1 view .LVU110
 359              	.LBE95:
 360              	.LBE97:
  74:GFX.cpp       ****             pFrame->set(Color);
 361              		.loc 1 74 23 is_stmt 0 view .LVU111
 362 00a8 9942     		cmp	r1, r3
 363              	.LBB98:
 364              	.LBB96:
 134:Frame.h       ****     }
 365              		.loc 2 134 20 view .LVU112
 366 00aa 80F800C0 		strb	ip, [r0]
 367              	.LVL29:
 134:Frame.h       ****     }
 368              		.loc 2 134 20 view .LVU113
 369              	.LBE96:
 370              	.LBE98:
  76:GFX.cpp       ****             pFrame++;
 371              		.loc 1 76 13 is_stmt 1 view .LVU114
  74:GFX.cpp       ****             pFrame->set(Color);
 372              		.loc 1 74 9 view .LVU115
  74:GFX.cpp       ****             pFrame->set(Color);
 373              		.loc 1 74 23 view .LVU116
 374 00ae F0D1     		bne	.L22
 375              	.L21:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 376              		.loc 1 71 5 view .LVU117
 377 00b0 0132     		adds	r2, r2, #1
 378              	.LVL30:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 379              		.loc 1 71 5 is_stmt 0 view .LVU118
 380 00b2 92B2     		uxth	r2, r2
 381              	.LVL31:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 382              		.loc 1 71 34 is_stmt 1 view .LVU119
 383 00b4 BA42     		cmp	r2, r7
 384 00b6 D5DB     		blt	.L20
 385              	.L13:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 386              		.loc 1 71 34 is_stmt 0 view .LVU120
 387              	.LBE76:
  77:GFX.cpp       ****         }
  78:GFX.cpp       ****     }
  79:GFX.cpp       **** }
 388              		.loc 1 79 1 view .LVU121
 389 00b8 03B0     		add	sp, sp, #12
 390              		.cfi_def_cfa_offset 36
 391              		@ sp needed
 392 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 393              		.cfi_endproc
 394              	.LFE2632:
 396 00be 00BF     		.section	.text._ZN4cGFX8drawLineEtttt6cColor,"ax",%progbits
 397              		.align	1
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 14


 398              		.p2align 2,,3
 399              		.global	_ZN4cGFX8drawLineEtttt6cColor
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-d16
 405              	_ZN4cGFX8drawLineEtttt6cColor:
 406              	.LVL32:
 407              	.LFB2633:
  80:GFX.cpp       **** //-----------------------------------------------------------------------------------
  81:GFX.cpp       **** // Dessin d'une ligne
  82:GFX.cpp       **** // Merci a Frédéric Goset http://fredericgoset.ovh/
  83:GFX.cpp       **** // L'algorithme de ligne de Bresenham 
  84:GFX.cpp       **** void cGFX::drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, cColor Color)
  85:GFX.cpp       **** {
 408              		.loc 1 85 1 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 8, pretend = 0, frame = 16
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		.loc 1 85 1 is_stmt 0 view .LVU123
 413 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 414              		.cfi_def_cfa_offset 36
 415              		.cfi_offset 4, -36
 416              		.cfi_offset 5, -32
 417              		.cfi_offset 6, -28
 418              		.cfi_offset 7, -24
 419              		.cfi_offset 8, -20
 420              		.cfi_offset 9, -16
 421              		.cfi_offset 10, -12
 422              		.cfi_offset 11, -8
 423              		.cfi_offset 14, -4
  86:GFX.cpp       ****     int16_t dx = x1 - x0;
 424              		.loc 1 86 21 view .LVU124
 425 0004 A3EB010E 		sub	lr, r3, r1
  85:GFX.cpp       ****     int16_t dx = x1 - x0;
 426              		.loc 1 85 1 view .LVU125
 427 0008 85B0     		sub	sp, sp, #20
 428              		.cfi_def_cfa_offset 56
 429              		.loc 1 86 13 view .LVU126
 430 000a 0FFA8EFE 		sxth	lr, lr
  85:GFX.cpp       ****     int16_t dx = x1 - x0;
 431              		.loc 1 85 1 view .LVU127
 432 000e BDF83890 		ldrh	r9, [sp, #56]
 433 0012 9DF83C60 		ldrb	r6, [sp, #60]	@ zero_extendqisi2
 434              	.LVL33:
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 435              		.loc 1 87 21 view .LVU128
 436 0016 A9EB020C 		sub	ip, r9, r2
  88:GFX.cpp       ****     
  89:GFX.cpp       ****     int incX = dx < 0 ? -1 : (dx > 0 ? 1 : 0);
 437              		.loc 1 89 23 view .LVU129
 438 001a BEF1000F 		cmp	lr, #0
 439 001e 9DF83D50 		ldrb	r5, [sp, #61]	@ zero_extendqisi2
 440              	.LVL34:
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 441              		.loc 1 87 13 view .LVU130
 442 0022 0FFA8CFC 		sxth	ip, ip
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 15


 443 0026 9DF83E40 		ldrb	r4, [sp, #62]	@ zero_extendqisi2
 444              	.LVL35:
  86:GFX.cpp       ****     int16_t dy = y1 - y0;
 445              		.loc 1 86 5 is_stmt 1 view .LVU131
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 446              		.loc 1 87 5 view .LVU132
 447              		.loc 1 89 5 view .LVU133
 448              		.loc 1 89 23 is_stmt 0 view .LVU134
 449 002a C0F28C80 		blt	.L27
 450              		.loc 1 89 38 discriminator 1 view .LVU135
 451 002e 14BF     		ite	ne
 452 0030 0127     		movne	r7, #1
 453 0032 0027     		moveq	r7, #0
 454              	.LVL36:
  90:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 455              		.loc 1 90 5 is_stmt 1 discriminator 1 view .LVU136
 456              		.loc 1 90 23 is_stmt 0 discriminator 1 view .LVU137
 457 0034 BCF1000F 		cmp	ip, #0
 458 0038 48DB     		blt	.L29
 459              		.loc 1 90 38 view .LVU138
 460 003a 14BF     		ite	ne
 461 003c 4FF00108 		movne	r8, #1
 462 0040 4FF00008 		moveq	r8, #0
 463              	.LVL37:
  91:GFX.cpp       ****     if(dx < 0) dx = -dx;
 464              		.loc 1 91 5 is_stmt 1 view .LVU139
 465              	.L31:
  92:GFX.cpp       ****     if(dy < 0) dy = -dy;
  93:GFX.cpp       **** 
  94:GFX.cpp       ****     RGB *pFrame;
 466              		.loc 1 94 5 view .LVU140
  95:GFX.cpp       ****     RGB *pEndLigne;
 467              		.loc 1 95 5 view .LVU141
  96:GFX.cpp       ****  
  97:GFX.cpp       ****     if (dy == 0){
 468              		.loc 1 97 5 view .LVU142
 469              	.LBB131:
 470 0044 BCF1000F 		cmp	ip, #0
 471 0048 49D1     		bne	.L32
 472              	.LVL38:
 473              	.L58:
 474              	.LBB132:
  98:GFX.cpp       ****         // horizontal line
  99:GFX.cpp       ****         uint16_t Temp;
 475              		.loc 1 99 9 view .LVU143
 100:GFX.cpp       ****         if(x1 < x0) {Temp = x1; x1 = x0 ; x0= Temp;}
 476              		.loc 1 100 9 view .LVU144
 477 004a 8B42     		cmp	r3, r1
 478 004c 02D2     		bcs	.L33
 479 004e 0F46     		mov	r7, r1
 480 0050 1946     		mov	r1, r3
 481              	.LVL39:
 482              		.loc 1 100 9 is_stmt 0 view .LVU145
 483 0052 3B46     		mov	r3, r7
 484              	.LVL40:
 485              	.L33:
 101:GFX.cpp       ****         pFrame = getPtr(x0,y0);
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 16


 486              		.loc 1 101 9 is_stmt 1 view .LVU146
 487 0054 B0F85CC0 		ldrh	ip, [r0, #92]
 488              	.LVL41:
 489              		.loc 1 101 9 is_stmt 0 view .LVU147
 490 0058 476D     		ldr	r7, [r0, #84]
 491              	.LBB133:
 492              	.LBB134:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 493              		.loc 2 208 9 view .LVU148
 494 005a 6145     		cmp	r1, ip
 495 005c B0F85E00 		ldrh	r0, [r0, #94]
 496              	.LVL42:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 497              		.loc 2 208 9 view .LVU149
 498              	.LBE134:
 499              	.LBI133:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 500              		.loc 2 207 17 is_stmt 1 view .LVU150
 501              	.LBB135:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 502              		.loc 2 208 9 view .LVU151
 503 0060 02D3     		bcc	.L34
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 504              		.loc 2 208 24 view .LVU152
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 505              		.loc 2 208 26 is_stmt 0 view .LVU153
 506 0062 0CF1FF31 		add	r1, ip, #-1
 507              	.LVL43:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 508              		.loc 2 208 26 view .LVU154
 509 0066 89B2     		uxth	r1, r1
 510              	.LVL44:
 511              	.L34:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 512              		.loc 2 209 9 is_stmt 1 view .LVU155
 513 0068 8242     		cmp	r2, r0
 514 006a 01D3     		bcc	.L35
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 515              		.loc 2 209 25 view .LVU156
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 516              		.loc 2 209 27 is_stmt 0 view .LVU157
 517 006c 421E     		subs	r2, r0, #1
 518              	.LVL45:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 519              		.loc 2 209 27 view .LVU158
 520 006e 92B2     		uxth	r2, r2
 521              	.LVL46:
 522              	.L35:
 523              		.loc 2 210 9 is_stmt 1 view .LVU159
 524              		.loc 2 210 27 is_stmt 0 view .LVU160
 525 0070 0CFB0212 		mla	r2, ip, r2, r1
 526              	.LBE135:
 527              	.LBE133:
 528              	.LBB137:
 529              	.LBB138:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 530              		.loc 2 208 9 view .LVU161
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 17


 531 0074 6345     		cmp	r3, ip
 532              	.LBE138:
 533              	.LBE137:
 534              	.LBB140:
 535              	.LBB136:
 536              		.loc 2 210 39 view .LVU162
 537 0076 07EBC202 		add	r2, r7, r2, lsl #3
 538              	.LVL47:
 539              		.loc 2 210 39 view .LVU163
 540              	.LBE136:
 541              	.LBE140:
 102:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 542              		.loc 1 102 9 is_stmt 1 view .LVU164
 543              	.LBB141:
 544              	.LBI137:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 545              		.loc 2 207 17 view .LVU165
 546              	.LBB139:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 547              		.loc 2 208 9 view .LVU166
 548 007a 02D3     		bcc	.L36
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 549              		.loc 2 208 24 view .LVU167
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 550              		.loc 2 208 26 is_stmt 0 view .LVU168
 551 007c 0CF1FF33 		add	r3, ip, #-1
 552              	.LVL48:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 553              		.loc 2 208 26 view .LVU169
 554 0080 9BB2     		uxth	r3, r3
 555              	.LVL49:
 556              	.L36:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 557              		.loc 2 209 9 is_stmt 1 view .LVU170
 558 0082 8145     		cmp	r9, r0
 559 0084 02D3     		bcc	.L37
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 560              		.loc 2 209 25 view .LVU171
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 561              		.loc 2 209 27 is_stmt 0 view .LVU172
 562 0086 0138     		subs	r0, r0, #1
 563 0088 1FFA80F9 		uxth	r9, r0
 564              	.LVL50:
 565              	.L37:
 566              		.loc 2 210 9 is_stmt 1 view .LVU173
 567              		.loc 2 210 27 is_stmt 0 view .LVU174
 568 008c 0CFB0933 		mla	r3, ip, r9, r3
 569              	.LVL51:
 570              		.loc 2 210 39 view .LVU175
 571 0090 07EBC307 		add	r7, r7, r3, lsl #3
 572              	.LVL52:
 573              		.loc 2 210 39 view .LVU176
 574              	.LBE139:
 575              	.LBE141:
 103:GFX.cpp       ****         while (pFrame < pEndLigne){
 576              		.loc 1 103 9 is_stmt 1 view .LVU177
 577              		.loc 1 103 23 view .LVU178
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 18


 578 0094 9742     		cmp	r7, r2
 579 0096 14D9     		bls	.L26
 580 0098 D343     		mvns	r3, r2
 581 009a 02F11001 		add	r1, r2, #16
 582 009e 0832     		adds	r2, r2, #8
 583              	.LVL53:
 584              		.loc 1 103 23 is_stmt 0 view .LVU179
 585 00a0 3B44     		add	r3, r3, r7
 586 00a2 23F00703 		bic	r3, r3, #7
 587 00a6 0B44     		add	r3, r3, r1
 588              	.LVL54:
 589              	.L39:
 104:GFX.cpp       ****             pFrame->set(Color);
 590              		.loc 1 104 13 is_stmt 1 view .LVU180
 591              	.LBB142:
 592              	.LBI142:
 130:Frame.h       ****         R = Color.m_R;
 593              		.loc 2 130 17 view .LVU181
 594              	.LBB143:
 131:Frame.h       ****         G = Color.m_G;
 595              		.loc 2 131 9 view .LVU182
 134:Frame.h       ****     }
 596              		.loc 2 134 20 is_stmt 0 view .LVU183
 597 00a8 52F8041C 		ldr	r1, [r2, #-4]
 598              	.LBE143:
 599              	.LBE142:
 103:GFX.cpp       ****             pFrame->set(Color);
 600              		.loc 1 103 23 view .LVU184
 601 00ac 0832     		adds	r2, r2, #8
 602              	.LVL55:
 603              	.LBB146:
 604              	.LBB144:
 131:Frame.h       ****         G = Color.m_G;
 605              		.loc 2 131 11 view .LVU185
 606 00ae 02F8106C 		strb	r6, [r2, #-16]
 132:Frame.h       ****         B = Color.m_B;
 607              		.loc 2 132 9 is_stmt 1 view .LVU186
 134:Frame.h       ****     }
 608              		.loc 2 134 20 is_stmt 0 view .LVU187
 609 00b2 0120     		movs	r0, #1
 132:Frame.h       ****         B = Color.m_B;
 610              		.loc 2 132 11 view .LVU188
 611 00b4 02F80F5C 		strb	r5, [r2, #-15]
 133:Frame.h       ****         *m_pChange = true;
 612              		.loc 2 133 9 is_stmt 1 view .LVU189
 133:Frame.h       ****         *m_pChange = true;
 613              		.loc 2 133 11 is_stmt 0 view .LVU190
 614 00b8 02F80E4C 		strb	r4, [r2, #-14]
 134:Frame.h       ****     }
 615              		.loc 2 134 9 is_stmt 1 view .LVU191
 616              	.LBE144:
 617              	.LBE146:
 103:GFX.cpp       ****             pFrame->set(Color);
 618              		.loc 1 103 23 is_stmt 0 view .LVU192
 619 00bc 9342     		cmp	r3, r2
 620              	.LBB147:
 621              	.LBB145:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 19


 134:Frame.h       ****     }
 622              		.loc 2 134 20 view .LVU193
 623 00be 0870     		strb	r0, [r1]
 624              	.LVL56:
 134:Frame.h       ****     }
 625              		.loc 2 134 20 view .LVU194
 626              	.LBE145:
 627              	.LBE147:
 105:GFX.cpp       ****             pFrame++;
 628              		.loc 1 105 13 is_stmt 1 view .LVU195
 103:GFX.cpp       ****             pFrame->set(Color);
 629              		.loc 1 103 9 view .LVU196
 103:GFX.cpp       ****             pFrame->set(Color);
 630              		.loc 1 103 23 view .LVU197
 631 00c0 F2D1     		bne	.L39
 632              	.LVL57:
 633              	.L26:
 103:GFX.cpp       ****             pFrame->set(Color);
 634              		.loc 1 103 23 is_stmt 0 view .LVU198
 635              	.LBE132:
 636              	.LBE131:
 106:GFX.cpp       ****         }
 107:GFX.cpp       **** 
 108:GFX.cpp       **** 
 109:GFX.cpp       ****     }else if (dx == 0){
 110:GFX.cpp       ****         uint16_t Temp;
 111:GFX.cpp       ****         if(y1 < y0) {Temp = y1; y1 = y0 ; y0= Temp;}
 112:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 113:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 114:GFX.cpp       ****         while (pFrame < pEndLigne){
 115:GFX.cpp       ****             pFrame->set(Color);
 116:GFX.cpp       ****             pFrame += getWidth();
 117:GFX.cpp       ****         }
 118:GFX.cpp       ****     
 119:GFX.cpp       ****     }else if (dx >= dy) {
 120:GFX.cpp       ****         // more horizontal than vertical
 121:GFX.cpp       ****         int slope = 2 * dy;
 122:GFX.cpp       ****         int error = -dx;
 123:GFX.cpp       ****         int errorInc = -2 * dx;
 124:GFX.cpp       ****         int y = y0;
 125:GFX.cpp       **** 
 126:GFX.cpp       ****         for (int x = x0; x != x1 + incX; x += incX)
 127:GFX.cpp       ****         {
 128:GFX.cpp       ****             setPixel(x,y, Color);
 129:GFX.cpp       ****             error += slope;
 130:GFX.cpp       **** 
 131:GFX.cpp       ****             if (error >= 0)
 132:GFX.cpp       ****             {
 133:GFX.cpp       ****                 y += incY;
 134:GFX.cpp       ****                 error += errorInc;
 135:GFX.cpp       ****             }
 136:GFX.cpp       ****         }
 137:GFX.cpp       ****     
 138:GFX.cpp       ****     }else{
 139:GFX.cpp       ****         // more vertical than horizontal
 140:GFX.cpp       ****         int slope = 2 * dx;
 141:GFX.cpp       ****         int error = -dy;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 20


 142:GFX.cpp       ****         int errorInc = -2 * dy;
 143:GFX.cpp       ****         int x = x0;
 144:GFX.cpp       **** 
 145:GFX.cpp       ****         for (int y = y0; y != y1 + incY; y += incY)
 146:GFX.cpp       ****         {
 147:GFX.cpp       ****             setPixel(x,y, Color);
 148:GFX.cpp       ****             error += slope;
 149:GFX.cpp       **** 
 150:GFX.cpp       ****             if (error >= 0)
 151:GFX.cpp       ****             {
 152:GFX.cpp       ****                 x += incX;
 153:GFX.cpp       ****                 error += errorInc;
 154:GFX.cpp       ****             }
 155:GFX.cpp       ****         }
 156:GFX.cpp       ****     }
 157:GFX.cpp       **** }
 637              		.loc 1 157 1 view .LVU199
 638 00c2 05B0     		add	sp, sp, #20
 639              		.cfi_remember_state
 640              		.cfi_def_cfa_offset 36
 641              		@ sp needed
 642 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 643              	.LVL58:
 644              	.L30:
 645              		.cfi_restore_state
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 646              		.loc 1 91 5 is_stmt 1 view .LVU200
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 647              		.loc 1 91 16 view .LVU201
  92:GFX.cpp       **** 
 648              		.loc 1 92 5 view .LVU202
  89:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 649              		.loc 1 89 23 is_stmt 0 view .LVU203
 650 00c8 4FF0FF37 		mov	r7, #-1
 651              	.LVL59:
 652              	.L29:
  92:GFX.cpp       **** 
 653              		.loc 1 92 16 is_stmt 1 discriminator 1 view .LVU204
  92:GFX.cpp       **** 
 654              		.loc 1 92 19 is_stmt 0 discriminator 1 view .LVU205
 655 00cc A2EB090C 		sub	ip, r2, r9
 656              	.LVL60:
  92:GFX.cpp       **** 
 657              		.loc 1 92 19 discriminator 1 view .LVU206
 658 00d0 4FF0FF38 		mov	r8, #-1
 659 00d4 0FFA8CFC 		sxth	ip, ip
 660              	.LVL61:
  94:GFX.cpp       ****     RGB *pEndLigne;
 661              		.loc 1 94 5 is_stmt 1 discriminator 1 view .LVU207
  95:GFX.cpp       ****  
 662              		.loc 1 95 5 discriminator 1 view .LVU208
  97:GFX.cpp       ****         // horizontal line
 663              		.loc 1 97 5 discriminator 1 view .LVU209
 664              	.LBB204:
 665 00d8 BCF1000F 		cmp	ip, #0
 666 00dc B5D0     		beq	.L58
 667              	.L32:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 21


  97:GFX.cpp       ****         // horizontal line
 668              		.loc 1 97 5 is_stmt 0 discriminator 1 view .LVU210
 669              	.LBE204:
 109:GFX.cpp       ****         uint16_t Temp;
 670              		.loc 1 109 11 is_stmt 1 view .LVU211
 671              	.LBB205:
 672              	.LBB148:
 673 00de BEF1000F 		cmp	lr, #0
 674 00e2 3FD1     		bne	.L40
 675              	.LBB149:
 110:GFX.cpp       ****         if(y1 < y0) {Temp = y1; y1 = y0 ; y0= Temp;}
 676              		.loc 1 110 9 view .LVU212
 111:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 677              		.loc 1 111 9 view .LVU213
 678 00e4 9145     		cmp	r9, r2
 679 00e6 02D2     		bcs	.L41
 680 00e8 1746     		mov	r7, r2
 681 00ea 4A46     		mov	r2, r9
 682              	.LVL62:
 111:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 683              		.loc 1 111 9 is_stmt 0 view .LVU214
 684 00ec B946     		mov	r9, r7
 685              	.L41:
 686              	.LVL63:
 112:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 687              		.loc 1 112 9 is_stmt 1 view .LVU215
 688 00ee B0F85C70 		ldrh	r7, [r0, #92]
 689 00f2 D0F854C0 		ldr	ip, [r0, #84]
 690              	.LVL64:
 691              	.LBB150:
 692              	.LBB151:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 693              		.loc 2 208 9 is_stmt 0 view .LVU216
 694 00f6 B942     		cmp	r1, r7
 695 00f8 B0F85E00 		ldrh	r0, [r0, #94]
 696              	.LVL65:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 697              		.loc 2 208 9 view .LVU217
 698              	.LBE151:
 699              	.LBI150:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 700              		.loc 2 207 17 is_stmt 1 view .LVU218
 701              	.LBB152:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 702              		.loc 2 208 9 view .LVU219
 703 00fc 01D3     		bcc	.L42
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 704              		.loc 2 208 24 view .LVU220
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 705              		.loc 2 208 26 is_stmt 0 view .LVU221
 706 00fe 791E     		subs	r1, r7, #1
 707              	.LVL66:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 708              		.loc 2 208 26 view .LVU222
 709 0100 89B2     		uxth	r1, r1
 710              	.LVL67:
 711              	.L42:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 22


 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 712              		.loc 2 209 9 is_stmt 1 view .LVU223
 713 0102 8242     		cmp	r2, r0
 714 0104 01D3     		bcc	.L43
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 715              		.loc 2 209 25 view .LVU224
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 716              		.loc 2 209 27 is_stmt 0 view .LVU225
 717 0106 421E     		subs	r2, r0, #1
 718              	.LVL68:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 719              		.loc 2 209 27 view .LVU226
 720 0108 92B2     		uxth	r2, r2
 721              	.LVL69:
 722              	.L43:
 723              		.loc 2 210 9 is_stmt 1 view .LVU227
 724              		.loc 2 210 27 is_stmt 0 view .LVU228
 725 010a 07FB0212 		mla	r2, r7, r2, r1
 726              	.LBE152:
 727              	.LBE150:
 728              	.LBB154:
 729              	.LBB155:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 730              		.loc 2 208 9 view .LVU229
 731 010e BB42     		cmp	r3, r7
 732              	.LBE155:
 733              	.LBE154:
 734              	.LBB158:
 735              	.LBB153:
 736              		.loc 2 210 39 view .LVU230
 737 0110 0CEBC202 		add	r2, ip, r2, lsl #3
 738              	.LVL70:
 739              		.loc 2 210 39 view .LVU231
 740              	.LBE153:
 741              	.LBE158:
 113:GFX.cpp       ****         while (pFrame < pEndLigne){
 742              		.loc 1 113 9 is_stmt 1 view .LVU232
 743              	.LBB159:
 744              	.LBI154:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 745              		.loc 2 207 17 view .LVU233
 746              	.LBB156:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 747              		.loc 2 208 9 view .LVU234
 748 0114 01D3     		bcc	.L44
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 749              		.loc 2 208 24 view .LVU235
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 750              		.loc 2 208 26 is_stmt 0 view .LVU236
 751 0116 7B1E     		subs	r3, r7, #1
 752              	.LVL71:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 753              		.loc 2 208 26 view .LVU237
 754 0118 9BB2     		uxth	r3, r3
 755              	.LVL72:
 756              	.L44:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 23


 757              		.loc 2 209 9 is_stmt 1 view .LVU238
 758 011a 8145     		cmp	r9, r0
 759 011c 80F09A80 		bcs	.L59
 760              	.LVL73:
 761              	.L45:
 762              		.loc 2 210 9 view .LVU239
 763              		.loc 2 210 27 is_stmt 0 view .LVU240
 764 0120 07FB0939 		mla	r9, r7, r9, r3
 765              	.LVL74:
 766              		.loc 2 210 39 view .LVU241
 767 0124 0CEBC909 		add	r9, ip, r9, lsl #3
 768              	.LVL75:
 769              		.loc 2 210 39 view .LVU242
 770              	.LBE156:
 771              	.LBE159:
 114:GFX.cpp       ****             pFrame->set(Color);
 772              		.loc 1 114 9 is_stmt 1 view .LVU243
 114:GFX.cpp       ****             pFrame->set(Color);
 773              		.loc 1 114 23 view .LVU244
 774 0128 9145     		cmp	r9, r2
 775 012a CAD9     		bls	.L26
 116:GFX.cpp       ****         }
 776              		.loc 1 116 20 is_stmt 0 view .LVU245
 777 012c F800     		lsls	r0, r7, #3
 778              	.L46:
 115:GFX.cpp       ****             pFrame += getWidth();
 779              		.loc 1 115 13 is_stmt 1 view .LVU246
 780              	.LVL76:
 781              	.LBB160:
 782              	.LBI160:
 130:Frame.h       ****         R = Color.m_R;
 783              		.loc 2 130 17 view .LVU247
 784              	.LBB161:
 131:Frame.h       ****         G = Color.m_G;
 785              		.loc 2 131 9 view .LVU248
 134:Frame.h       ****     }
 786              		.loc 2 134 20 is_stmt 0 view .LVU249
 787 012e 5368     		ldr	r3, [r2, #4]
 788 0130 0121     		movs	r1, #1
 131:Frame.h       ****         G = Color.m_G;
 789              		.loc 2 131 11 view .LVU250
 790 0132 1670     		strb	r6, [r2]
 132:Frame.h       ****         B = Color.m_B;
 791              		.loc 2 132 9 is_stmt 1 view .LVU251
 132:Frame.h       ****         B = Color.m_B;
 792              		.loc 2 132 11 is_stmt 0 view .LVU252
 793 0134 5570     		strb	r5, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 794              		.loc 2 133 9 is_stmt 1 view .LVU253
 133:Frame.h       ****         *m_pChange = true;
 795              		.loc 2 133 11 is_stmt 0 view .LVU254
 796 0136 9470     		strb	r4, [r2, #2]
 134:Frame.h       ****     }
 797              		.loc 2 134 9 is_stmt 1 view .LVU255
 798              	.LBE161:
 799              	.LBE160:
 116:GFX.cpp       ****         }
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 24


 800              		.loc 1 116 20 is_stmt 0 view .LVU256
 801 0138 0244     		add	r2, r2, r0
 802              	.LVL77:
 803              	.LBB163:
 804              	.LBB162:
 134:Frame.h       ****     }
 805              		.loc 2 134 20 view .LVU257
 806 013a 1970     		strb	r1, [r3]
 807              	.LVL78:
 134:Frame.h       ****     }
 808              		.loc 2 134 20 view .LVU258
 809              	.LBE162:
 810              	.LBE163:
 116:GFX.cpp       ****         }
 811              		.loc 1 116 13 is_stmt 1 view .LVU259
 116:GFX.cpp       ****         }
 812              		.loc 1 116 13 is_stmt 0 view .LVU260
 813              	.LBE149:
 814              	.LBE148:
 815              	.LBE205:
 816              		.file 3 "GFX.h"
   1:GFX.h         **** //------------------------------------------------------------------------
   2:GFX.h         **** // Copyright(c) 2024 Dad Desing.
   3:GFX.h         **** //      Bibliothèque graphique
   4:GFX.h         **** //
   5:GFX.h         **** // Inspiré largement de :
   6:GFX.h         **** //    Adafruit-GFX-Library : https://github.com/adafruit/Adafruit-GFX-Library
   7:GFX.h         **** //    eSPI : https://github.com/Bodmer/TFT_eSPI
   8:GFX.h         **** //------------------------------------------------------------------------
   9:GFX.h         **** #pragma once
  10:GFX.h         **** #include "Frame.h"
  11:GFX.h         **** #define PROGMEM
  12:GFX.h         **** 
  13:GFX.h         **** //***********************************************************************************
  14:GFX.h         **** // CFont
  15:GFX.h         **** // Gestion des polices de caratères
  16:GFX.h         **** // Utilisation de la structuration des fonts de Adafruit-GFX-Library
  17:GFX.h         **** // Ce qui permet de profiter des outils de conversion (ex: https://rop.nl/truetype2gfx/)
  18:GFX.h         **** 
  19:GFX.h         **** // Table ds descripteurs de caratères
  20:GFX.h         **** typedef struct
  21:GFX.h         **** {
  22:GFX.h         ****     uint16_t bitmapOffset; ///< Pointer into GFXfont->bitmap
  23:GFX.h         ****     uint8_t width;         ///< Bitmap dimensions in pixels
  24:GFX.h         ****     uint8_t height;        ///< Bitmap dimensions in pixels
  25:GFX.h         ****     uint8_t xAdvance;      ///< Distance to advance cursor (x axis)
  26:GFX.h         ****     int8_t xOffset;        ///< X dist from cursor pos to UL corner
  27:GFX.h         ****     int8_t yOffset;         ///< Y dist from cursor pos to UL corner
  28:GFX.h         **** } GFXglyph;
  29:GFX.h         **** 
  30:GFX.h         **** // Descripteur de la Font
  31:GFX.h         **** typedef struct
  32:GFX.h         **** {
  33:GFX.h         ****     uint8_t *bitmap;  ///< Glyph bitmaps, concatenated
  34:GFX.h         ****     GFXglyph *glyph;  ///< Glyph array
  35:GFX.h         ****     uint16_t first;   ///< ASCII extents (first char)
  36:GFX.h         ****     uint16_t last;    ///< ASCII extents (last char)
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 25


  37:GFX.h         ****     uint8_t yAdvance; ///< Newline distance (y axis)
  38:GFX.h         **** } GFXfont;
  39:GFX.h         **** 
  40:GFX.h         **** // cFont
  41:GFX.h         **** class cFont
  42:GFX.h         **** {
  43:GFX.h         **** public:
  44:GFX.h         ****     // --------------------------------------------------------------------------
  45:GFX.h         ****     // Constructeur
  46:GFX.h         ****     cFont(const GFXfont *pFont);
  47:GFX.h         **** 
  48:GFX.h         ****     // --------------------------------------------------------------------------
  49:GFX.h         ****     // Lecture le la largueur du caratère c
  50:GFX.h         ****     uint8_t getCharWidth(char c)
  51:GFX.h         ****     {
  52:GFX.h         ****         return ((m_pFont->glyph) + (c - m_pFont->first))->xAdvance;
  53:GFX.h         ****     }
  54:GFX.h         **** 
  55:GFX.h         ****     // --------------------------------------------------------------------------
  56:GFX.h         ****     // Lecture le la largueur de la chaine de caratère.
  57:GFX.h         ****     uint16_t getTextWidth(const char *Text)
  58:GFX.h         ****     {
  59:GFX.h         ****         const char *pText = Text;
  60:GFX.h         ****         uint16_t result = 0;
  61:GFX.h         ****         while (*pText != '\0')
  62:GFX.h         ****         {
  63:GFX.h         ****             result += getCharWidth(*pText++);
  64:GFX.h         ****         }
  65:GFX.h         ****         return result;
  66:GFX.h         ****     }
  67:GFX.h         **** 
  68:GFX.h         ****     // --------------------------------------------------------------------------
  69:GFX.h         ****     // Lecture de la hauteur max de la font
  70:GFX.h         ****     inline uint8_t getHeight()
  71:GFX.h         ****     {
  72:GFX.h         ****         return m_NegHeight - m_PosHeight;
  73:GFX.h         ****     }
  74:GFX.h         **** 
  75:GFX.h         ****     // --------------------------------------------------------------------------
  76:GFX.h         ****     // Lecture de la hauteur max de la font au dessus la ligne du curseur
  77:GFX.h         ****     inline uint8_t getPosHeight()
  78:GFX.h         ****     {
  79:GFX.h         ****         return -m_PosHeight;
  80:GFX.h         ****     }
  81:GFX.h         **** 
  82:GFX.h         ****     // --------------------------------------------------------------------------
  83:GFX.h         ****     // Lecture de la hauteur max de la font sous la ligne du curseur
  84:GFX.h         ****     inline uint8_t getNegHeight()
  85:GFX.h         ****     {
  86:GFX.h         ****         return m_NegHeight;
  87:GFX.h         ****     }
  88:GFX.h         **** 
  89:GFX.h         ****     // --------------------------------------------------------------------------
  90:GFX.h         ****     // Lecture de l'adresse du descripteur de font
  91:GFX.h         ****     inline const GFXfont *getGFXfont() { return m_pFont; }
  92:GFX.h         **** 
  93:GFX.h         ****     // --------------------------------------------------------------------------
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 26


  94:GFX.h         ****     // Lecture de l'adresse de la table des decripteurs de caratères
  95:GFX.h         ****     inline const GFXglyph *getGFXglyph() { return m_pTable; }
  96:GFX.h         **** 
  97:GFX.h         ****     // --------------------------------------------------------------------------
  98:GFX.h         ****     // Lecture de l'adresse du descripteur du caratère c
  99:GFX.h         ****     inline const GFXglyph *getGFXglyph(char c)
 100:GFX.h         ****     {
 101:GFX.h         ****         return m_pTable + (c - m_pFont->first);
 102:GFX.h         ****     }
 103:GFX.h         **** 
 104:GFX.h         ****     // --------------------------------------------------------------------------
 105:GFX.h         ****     // Lecteur de l'adresse du bitmap représentant c
 106:GFX.h         ****     inline const uint8_t *getBitmap(char c)
 107:GFX.h         ****     {
 108:GFX.h         ****         return &m_pFont->bitmap[m_pTable[c - m_pFont->first].bitmapOffset];
 109:GFX.h         ****     }
 110:GFX.h         **** 
 111:GFX.h         ****     // --------------------------------------------------------------------------
 112:GFX.h         ****     // Données de la classe
 113:GFX.h         **** protected:
 114:GFX.h         ****     const GFXfont *m_pFont; // Descripteur de la font
 115:GFX.h         ****     GFXglyph *m_pTable;     // Table des descripteurs de caratères
 116:GFX.h         **** 
 117:GFX.h         ****     int8_t m_PosHeight; // Hauteur au dessus de la ligne du curseur
 118:GFX.h         ****     int8_t m_NegHeight; // Hauteur sous la ligne du curseur
 119:GFX.h         **** };
 120:GFX.h         **** 
 121:GFX.h         **** //***********************************************************************************
 122:GFX.h         **** // cGFX
 123:GFX.h         **** //   Bibliothèque Graphique
 124:GFX.h         **** class cGFX : protected cRBG_Frame
 125:GFX.h         **** {
 126:GFX.h         **** public:
 127:GFX.h         ****     // --------------------------------------------------------------------------
 128:GFX.h         ****     // Constructeur
 129:GFX.h         ****     cGFX() {}
 130:GFX.h         **** 
 131:GFX.h         ****     // --------------------------------------------------------------------------
 132:GFX.h         ****     // Initialisation de la classe
 133:GFX.h         ****     // Doit être appelée avant toute utilisation (aucune vérification réalisée) 
 134:GFX.h         ****     //   pFrameBuff pointe sur la mémoire de frame à instancier de préférence dans la SDRAM  
 135:GFX.h         ****     //   pFIFO_Data pointe sur la mémoire du FIFO DMA utilisé pour les transfers SPI 
 136:GFX.h         ****     //              doit etre obligatoirement instancié dans la SDRAM D1 (DMA_BUFFER_MEM_SECTION)
 137:GFX.h         ****     //   Width, Height taille de l'écran
 138:GFX.h         ****     //
 139:GFX.h         ****     void Init(RGB *pFrameBuff, FIFO_Data *pFIFO_Data, uint16_t Width, uint16_t Height)
 140:GFX.h         ****     {
 141:GFX.h         ****         setFrame(pFrameBuff, pFIFO_Data, Width, Height);
 142:GFX.h         ****     }
 143:GFX.h         ****     
 144:GFX.h         ****     // --------------------------------------------------------------------------
 145:GFX.h         ****     // Changer l'orientation de l'écran
 146:GFX.h         ****     void setRotation(Rotation r)
 147:GFX.h         ****     {
 148:GFX.h         ****         setFrameRotation(r);
 149:GFX.h         ****     }
 150:GFX.h         ****     
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 27


 151:GFX.h         ****     // --------------------------------------------------------------------------
 152:GFX.h         ****     // Transmette les modifications de la frame à l'écran
 153:GFX.h         ****     inline void FlushFrame() { cRBG_Frame::FlushFrame();}
 154:GFX.h         **** 
 155:GFX.h         ****     // ==========================================================================
 156:GFX.h         ****     // Dessiner des formes
 157:GFX.h         ****     // ==========================================================================
 158:GFX.h         ****     // Tracer un rectange vide 
 159:GFX.h         ****     void drawRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color);
 160:GFX.h         ****     // Tracer un rectangle plein
 161:GFX.h         ****     void drawFillRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color);
 162:GFX.h         ****     // Trace une ligne
 163:GFX.h         ****     void drawLine(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, cColor Color);
 164:GFX.h         ****     // Tracer un cercle vide
 165:GFX.h         ****     void drawCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color);
 166:GFX.h         ****     // Tracer un cercle plein
 167:GFX.h         ****     void drawFillCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color);
 168:GFX.h         ****     // Tracer une image 8bits par couleurs
 169:GFX.h         ****     void drawR8G8B8Image(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, const uint8_t *pImg);
 170:GFX.h         **** 
 171:GFX.h         ****     // ==========================================================================
 172:GFX.h         ****     // Dessiner du texte
 173:GFX.h         ****     // ==========================================================================
 174:GFX.h         ****     // Positionnement du cuseur
 175:GFX.h         ****     inline void setCursor(uint16_t x, uint16_t y){
 176:GFX.h         ****         m_xCursor = x;
 177:GFX.h         ****         m_yCursor = y;
 178:GFX.h         ****     };
 179:GFX.h         ****     
 180:GFX.h         ****     // Configuration de la fonte
 181:GFX.h         ****     inline void setFont(cFont *pFont){ m_pFont = pFont; };
 182:GFX.h         **** 
 183:GFX.h         ****     // Configuration de la couleur du texte
 184:GFX.h         ****     inline void setTextFrontColor(cColor Color) { m_TextFrontColor = Color;}
 185:GFX.h         ****     
 186:GFX.h         ****     // Configuration de la couleur de l'arrière plan du texte
 187:GFX.h         ****     inline void setTextBackColor(cColor Color) { m_TextBackColor = Color; }
 188:GFX.h         ****     
 189:GFX.h         ****     // Dessiner le caractère c
 190:GFX.h         ****     void drawChar(const char c, bool Erase = false);
 191:GFX.h         ****     
 192:GFX.h         ****     // Dessiner le texte sans couleur d'arriere plan
 193:GFX.h         ****     void drawTransText(const char *Text, bool Erase = false);
 194:GFX.h         ****     
 195:GFX.h         ****     // Dessiner le texte
 196:GFX.h         ****     void drawText(const char *Text, bool Erase = false);
 197:GFX.h         **** 
 198:GFX.h         ****     // Lire la position du curseur en X
 199:GFX.h         ****     inline uint8_t getXCursor() { return m_xCursor; }
 200:GFX.h         **** 
 201:GFX.h         ****     // Lire la position du curseur en Y
 202:GFX.h         ****     inline uint8_t getYCursor() { return m_xCursor; }
 203:GFX.h         **** 
 204:GFX.h         ****     // Lire la fonte courante
 205:GFX.h         ****     inline cFont *getFont() { return m_pFont; }
 206:GFX.h         ****     
 207:GFX.h         ****     // Lire la hauteur de la frame
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 28


 208:GFX.h         ****     inline uint16_t getWidth() { return cRBG_Frame::getWidth(); }
 817              		.loc 3 208 34 is_stmt 1 view .LVU261
 211:Frame.h       ****     } 
 212:Frame.h       **** 
 213:Frame.h       ****     // --------------------------------------------------------------------------
 214:Frame.h       ****     // Ecriture d'un pixel 
 215:Frame.h       ****     inline void setPixel(uint16_t x, uint16_t y, cColor Color){
 216:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 217:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 218:Frame.h       ****         }
 219:Frame.h       ****     }
 220:Frame.h       ****     
 221:Frame.h       ****     // ==========================================================================
 222:Frame.h       ****     // Hauteur / Largeur
 223:Frame.h       ****     // --------------------------------------------------------------------------
 224:Frame.h       ****     // Lecture de la largeur de la frame
 225:Frame.h       ****     inline uint16_t getWidth() {
 226:Frame.h       ****         return m_Width ;
 818              		.loc 2 226 9 view .LVU262
 819              	.LBB206:
 820              	.LBB200:
 821              	.LBB165:
 114:GFX.cpp       ****             pFrame->set(Color);
 822              		.loc 1 114 9 view .LVU263
 114:GFX.cpp       ****             pFrame->set(Color);
 823              		.loc 1 114 23 view .LVU264
 824 013c 4A45     		cmp	r2, r9
 825 013e F6D3     		bcc	.L46
 826              	.LBE165:
 827              	.LBE200:
 828              	.LBE206:
 829              		.loc 1 157 1 is_stmt 0 view .LVU265
 830 0140 05B0     		add	sp, sp, #20
 831              		.cfi_remember_state
 832              		.cfi_def_cfa_offset 36
 833              		@ sp needed
 834 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 835              	.LVL79:
 836              	.L27:
 837              		.cfi_restore_state
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 838              		.loc 1 90 5 is_stmt 1 discriminator 8 view .LVU266
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 839              		.loc 1 91 19 is_stmt 0 discriminator 8 view .LVU267
 840 0146 A1EB030E 		sub	lr, r1, r3
 841              	.LVL80:
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 842              		.loc 1 90 23 discriminator 8 view .LVU268
 843 014a BCF1000F 		cmp	ip, #0
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 844              		.loc 1 91 19 discriminator 8 view .LVU269
 845 014e 0FFA8EFE 		sxth	lr, lr
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 846              		.loc 1 90 23 discriminator 8 view .LVU270
 847 0152 B9DB     		blt	.L30
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 848              		.loc 1 90 38 discriminator 1 view .LVU271
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 29


 849 0154 14BF     		ite	ne
 850 0156 4FF00108 		movne	r8, #1
 851 015a 4FF00008 		moveq	r8, #0
 852              	.LVL81:
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 853              		.loc 1 91 5 is_stmt 1 discriminator 1 view .LVU272
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 854              		.loc 1 91 16 discriminator 1 view .LVU273
  92:GFX.cpp       **** 
 855              		.loc 1 92 5 discriminator 1 view .LVU274
  89:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 856              		.loc 1 89 23 is_stmt 0 discriminator 1 view .LVU275
 857 015e 4FF0FF37 		mov	r7, #-1
 858 0162 6FE7     		b	.L31
 859              	.LVL82:
 860              	.L40:
 119:GFX.cpp       ****         // more horizontal than vertical
 861              		.loc 1 119 11 is_stmt 1 view .LVU276
 862              	.LBB207:
 863              	.LBB201:
 864              	.LBB166:
 865 0164 F445     		cmp	ip, lr
 866 0166 3CDC     		bgt	.L47
 867              	.LBB167:
 121:GFX.cpp       ****         int error = -dx;
 868              		.loc 1 121 9 view .LVU277
 123:GFX.cpp       ****         int y = y0;
 869              		.loc 1 123 13 is_stmt 0 view .LVU278
 870 0168 CEEBCE79 		rsb	r9, lr, lr, lsl #31
 124:GFX.cpp       **** 
 871              		.loc 1 124 13 view .LVU279
 872 016c 9246     		mov	r10, r2
 121:GFX.cpp       ****         int error = -dx;
 873              		.loc 1 121 13 view .LVU280
 874 016e 4FEA4C0C 		lsl	ip, ip, #1
 875              	.LVL83:
 122:GFX.cpp       ****         int errorInc = -2 * dx;
 876              		.loc 1 122 9 is_stmt 1 view .LVU281
 122:GFX.cpp       ****         int errorInc = -2 * dx;
 877              		.loc 1 122 13 is_stmt 0 view .LVU282
 878 0172 CEF1000E 		rsb	lr, lr, #0
 879              	.LVL84:
 123:GFX.cpp       ****         int y = y0;
 880              		.loc 1 123 9 is_stmt 1 view .LVU283
 124:GFX.cpp       **** 
 881              		.loc 1 124 9 view .LVU284
 126:GFX.cpp       ****         {
 882              		.loc 1 126 9 view .LVU285
 883              	.LBB168:
 126:GFX.cpp       ****         {
 884              		.loc 1 126 28 view .LVU286
 885              	.LBE168:
 123:GFX.cpp       ****         int y = y0;
 886              		.loc 1 123 13 is_stmt 0 view .LVU287
 887 0176 4FEA4902 		lsl	r2, r9, #1
 888              	.LVL85:
 889              	.LBB181:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 30


 126:GFX.cpp       ****         {
 890              		.loc 1 126 34 view .LVU288
 891 017a 07EB0309 		add	r9, r7, r3
 126:GFX.cpp       ****         {
 892              		.loc 1 126 28 view .LVU289
 893 017e 4945     		cmp	r1, r9
 894              	.LBE181:
 123:GFX.cpp       ****         int y = y0;
 895              		.loc 1 123 13 view .LVU290
 896 0180 0392     		str	r2, [sp, #12]
 897              	.LVL86:
 898              	.LBB182:
 126:GFX.cpp       ****         {
 899              		.loc 1 126 28 view .LVU291
 900 0182 9ED0     		beq	.L26
 901              	.LBB169:
 902              	.LBB170:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 903              		.loc 2 216 15 view .LVU292
 904 0184 5246     		mov	r2, r10
 905 0186 B0F85CB0 		ldrh	fp, [r0, #92]
 906 018a 9A46     		mov	r10, r3
 907              	.LVL87:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 908              		.loc 2 216 15 view .LVU293
 909 018c CDE90145 		strd	r4, r5, [sp, #4]
 910 0190 039C     		ldr	r4, [sp, #12]
 911              	.LVL88:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 912              		.loc 2 216 15 view .LVU294
 913 0192 00E0     		b	.L50
 914              	.LVL89:
 915              	.L60:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 916              		.loc 2 216 15 view .LVU295
 917              	.LBE170:
 918              	.LBE169:
 126:GFX.cpp       ****         {
 919              		.loc 1 126 44 view .LVU296
 920 0194 1946     		mov	r1, r3
 921              	.LVL90:
 922              	.L50:
 128:GFX.cpp       ****             error += slope;
 923              		.loc 1 128 13 is_stmt 1 view .LVU297
 924              	.LBB179:
 925              	.LBI169:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 926              		.loc 2 215 17 view .LVU298
 927              	.LBB177:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 928              		.loc 2 216 9 view .LVU299
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 929              		.loc 2 216 9 is_stmt 0 view .LVU300
 930              	.LBE177:
 931              	.LBE179:
 129:GFX.cpp       **** 
 932              		.loc 1 129 13 is_stmt 1 view .LVU301
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 31


 131:GFX.cpp       ****             {
 933              		.loc 1 131 13 view .LVU302
 133:GFX.cpp       ****                 error += errorInc;
 934              		.loc 1 133 17 view .LVU303
 935              	.LBB180:
 936              	.LBB178:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 937              		.loc 2 216 9 is_stmt 0 view .LVU304
 938 0196 8BB2     		uxth	r3, r1
 939 0198 5B45     		cmp	r3, fp
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 940              		.loc 2 216 24 view .LVU305
 941 019a 93B2     		uxth	r3, r2
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 942              		.loc 2 216 9 view .LVU306
 943 019c 15D2     		bcs	.L48
 217:Frame.h       ****         }
 944              		.loc 2 217 13 is_stmt 1 view .LVU307
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 945              		.loc 2 216 24 is_stmt 0 view .LVU308
 946 019e B0F85E90 		ldrh	r9, [r0, #94]
 947 01a2 9945     		cmp	r9, r3
 948 01a4 11D9     		bls	.L48
 217:Frame.h       ****         }
 949              		.loc 2 217 26 view .LVU309
 950 01a6 9946     		mov	r9, r3
 217:Frame.h       ****         }
 951              		.loc 2 217 23 view .LVU310
 952 01a8 8BB2     		uxth	r3, r1
 953              	.LBB171:
 954              	.LBB172:
 132:Frame.h       ****         B = Color.m_B;
 955              		.loc 2 132 11 view .LVU311
 956 01aa 029D     		ldr	r5, [sp, #8]
 957              	.LBE172:
 958              	.LBE171:
 217:Frame.h       ****         }
 959              		.loc 2 217 23 view .LVU312
 960 01ac 0BFB0939 		mla	r9, fp, r9, r3
 217:Frame.h       ****         }
 961              		.loc 2 217 40 view .LVU313
 962 01b0 436D     		ldr	r3, [r0, #84]
 963              	.LBB175:
 964              	.LBB173:
 131:Frame.h       ****         G = Color.m_G;
 965              		.loc 2 131 11 view .LVU314
 966 01b2 03F83960 		strb	r6, [r3, r9, lsl #3]
 967              	.LBE173:
 968              	.LBE175:
 217:Frame.h       ****         }
 969              		.loc 2 217 40 view .LVU315
 970 01b6 03EBC903 		add	r3, r3, r9, lsl #3
 971              	.LVL91:
 972              	.LBB176:
 973              	.LBI171:
 130:Frame.h       ****         R = Color.m_R;
 974              		.loc 2 130 17 is_stmt 1 view .LVU316
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 32


 975              	.LBB174:
 131:Frame.h       ****         G = Color.m_G;
 976              		.loc 2 131 9 view .LVU317
 132:Frame.h       ****         B = Color.m_B;
 977              		.loc 2 132 9 view .LVU318
 134:Frame.h       ****     }
 978              		.loc 2 134 20 is_stmt 0 view .LVU319
 979 01ba 4FF00109 		mov	r9, #1
 132:Frame.h       ****         B = Color.m_B;
 980              		.loc 2 132 11 view .LVU320
 981 01be 5D70     		strb	r5, [r3, #1]
 133:Frame.h       ****         *m_pChange = true;
 982              		.loc 2 133 9 is_stmt 1 view .LVU321
 133:Frame.h       ****         *m_pChange = true;
 983              		.loc 2 133 11 is_stmt 0 view .LVU322
 984 01c0 019D     		ldr	r5, [sp, #4]
 985 01c2 9D70     		strb	r5, [r3, #2]
 134:Frame.h       ****     }
 986              		.loc 2 134 9 is_stmt 1 view .LVU323
 134:Frame.h       ****     }
 987              		.loc 2 134 20 is_stmt 0 view .LVU324
 988 01c4 5B68     		ldr	r3, [r3, #4]
 989              	.LVL92:
 134:Frame.h       ****     }
 990              		.loc 2 134 20 view .LVU325
 991 01c6 83F80090 		strb	r9, [r3]
 992              	.LVL93:
 993              	.L48:
 134:Frame.h       ****     }
 994              		.loc 2 134 20 view .LVU326
 995              	.LBE174:
 996              	.LBE176:
 997              	.LBE178:
 998              	.LBE180:
 131:GFX.cpp       ****             {
 999              		.loc 1 131 13 view .LVU327
 1000 01ca 1EEB0C0E 		adds	lr, lr, ip
 1001              	.LVL94:
 131:GFX.cpp       ****             {
 1002              		.loc 1 131 13 view .LVU328
 1003 01ce 01D4     		bmi	.L49
 133:GFX.cpp       ****                 error += errorInc;
 1004              		.loc 1 133 19 view .LVU329
 1005 01d0 4244     		add	r2, r2, r8
 1006              	.LVL95:
 134:GFX.cpp       ****             }
 1007              		.loc 1 134 17 is_stmt 1 view .LVU330
 134:GFX.cpp       ****             }
 1008              		.loc 1 134 23 is_stmt 0 view .LVU331
 1009 01d2 A644     		add	lr, lr, r4
 1010              	.LVL96:
 1011              	.L49:
 126:GFX.cpp       ****         {
 1012              		.loc 1 126 9 is_stmt 1 discriminator 2 view .LVU332
 126:GFX.cpp       ****         {
 1013              		.loc 1 126 28 is_stmt 0 discriminator 2 view .LVU333
 1014 01d4 8A45     		cmp	r10, r1
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 33


 126:GFX.cpp       ****         {
 1015              		.loc 1 126 44 discriminator 2 view .LVU334
 1016 01d6 07EB0103 		add	r3, r7, r1
 1017              	.LVL97:
 126:GFX.cpp       ****         {
 1018              		.loc 1 126 28 is_stmt 1 discriminator 2 view .LVU335
 1019 01da DBD1     		bne	.L60
 126:GFX.cpp       ****         {
 1020              		.loc 1 126 28 is_stmt 0 discriminator 2 view .LVU336
 1021              	.LBE182:
 1022              	.LBE167:
 1023              	.LBE166:
 1024              	.LBE201:
 1025              	.LBE207:
 1026              		.loc 1 157 1 view .LVU337
 1027 01dc 05B0     		add	sp, sp, #20
 1028              		.cfi_remember_state
 1029              		.cfi_def_cfa_offset 36
 1030              		@ sp needed
 1031 01de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1032              	.LVL98:
 1033              	.L47:
 1034              		.cfi_restore_state
 1035              	.LBB208:
 1036              	.LBB202:
 1037              	.LBB198:
 1038              	.LBB183:
 140:GFX.cpp       ****         int error = -dy;
 1039              		.loc 1 140 9 is_stmt 1 view .LVU338
 142:GFX.cpp       ****         int x = x0;
 1040              		.loc 1 142 13 is_stmt 0 view .LVU339
 1041 01e2 CCEBCC73 		rsb	r3, ip, ip, lsl #31
 1042              	.LVL99:
 141:GFX.cpp       ****         int errorInc = -2 * dy;
 1043              		.loc 1 141 13 view .LVU340
 1044 01e6 CCF1000C 		rsb	ip, ip, #0
 1045              	.LVL100:
 140:GFX.cpp       ****         int error = -dy;
 1046              		.loc 1 140 13 view .LVU341
 1047 01ea 4FEA4E0E 		lsl	lr, lr, #1
 1048              	.LVL101:
 141:GFX.cpp       ****         int errorInc = -2 * dy;
 1049              		.loc 1 141 9 is_stmt 1 view .LVU342
 142:GFX.cpp       ****         int x = x0;
 1050              		.loc 1 142 9 view .LVU343
 143:GFX.cpp       **** 
 1051              		.loc 1 143 9 view .LVU344
 145:GFX.cpp       ****         {
 1052              		.loc 1 145 9 view .LVU345
 1053              	.LBB184:
 145:GFX.cpp       ****         {
 1054              		.loc 1 145 28 view .LVU346
 1055              	.LBE184:
 142:GFX.cpp       ****         int x = x0;
 1056              		.loc 1 142 13 is_stmt 0 view .LVU347
 1057 01ee 5B00     		lsls	r3, r3, #1
 1058 01f0 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 34


 1059              	.LVL102:
 1060              	.LBB197:
 145:GFX.cpp       ****         {
 1061              		.loc 1 145 34 view .LVU348
 1062 01f2 09EB0803 		add	r3, r9, r8
 145:GFX.cpp       ****         {
 1063              		.loc 1 145 28 view .LVU349
 1064 01f6 9A42     		cmp	r2, r3
 1065 01f8 3FF463AF 		beq	.L26
 1066              	.LBB185:
 1067              	.LBB186:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1068              		.loc 2 216 15 view .LVU350
 1069 01fc B0F85CB0 		ldrh	fp, [r0, #92]
 1070 0200 CDE90145 		strd	r4, r5, [sp, #4]
 1071 0204 039C     		ldr	r4, [sp, #12]
 1072              	.LVL103:
 1073              	.L53:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1074              		.loc 2 216 15 view .LVU351
 1075              	.LBE186:
 1076              	.LBE185:
 147:GFX.cpp       ****             error += slope;
 1077              		.loc 1 147 13 is_stmt 1 view .LVU352
 1078              	.LBB195:
 1079              	.LBI185:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1080              		.loc 2 215 17 view .LVU353
 1081              	.LBB193:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1082              		.loc 2 216 9 view .LVU354
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1083              		.loc 2 216 9 is_stmt 0 view .LVU355
 1084              	.LBE193:
 1085              	.LBE195:
 148:GFX.cpp       **** 
 1086              		.loc 1 148 13 is_stmt 1 view .LVU356
 150:GFX.cpp       ****             {
 1087              		.loc 1 150 13 view .LVU357
 152:GFX.cpp       ****                 error += errorInc;
 1088              		.loc 1 152 17 view .LVU358
 1089              	.LBB196:
 1090              	.LBB194:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1091              		.loc 2 216 9 is_stmt 0 view .LVU359
 1092 0206 8BB2     		uxth	r3, r1
 1093 0208 5B45     		cmp	r3, fp
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1094              		.loc 2 216 24 view .LVU360
 1095 020a 93B2     		uxth	r3, r2
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1096              		.loc 2 216 9 view .LVU361
 1097 020c 15D2     		bcs	.L51
 217:Frame.h       ****         }
 1098              		.loc 2 217 13 is_stmt 1 view .LVU362
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1099              		.loc 2 216 24 is_stmt 0 view .LVU363
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 35


 1100 020e B0F85EA0 		ldrh	r10, [r0, #94]
 1101 0212 9A45     		cmp	r10, r3
 1102 0214 11D9     		bls	.L51
 217:Frame.h       ****         }
 1103              		.loc 2 217 26 view .LVU364
 1104 0216 9A46     		mov	r10, r3
 217:Frame.h       ****         }
 1105              		.loc 2 217 23 view .LVU365
 1106 0218 8BB2     		uxth	r3, r1
 1107              	.LBB187:
 1108              	.LBB188:
 132:Frame.h       ****         B = Color.m_B;
 1109              		.loc 2 132 11 view .LVU366
 1110 021a 029D     		ldr	r5, [sp, #8]
 1111              	.LBE188:
 1112              	.LBE187:
 217:Frame.h       ****         }
 1113              		.loc 2 217 23 view .LVU367
 1114 021c 0BFB0A3A 		mla	r10, fp, r10, r3
 217:Frame.h       ****         }
 1115              		.loc 2 217 40 view .LVU368
 1116 0220 436D     		ldr	r3, [r0, #84]
 1117              	.LBB191:
 1118              	.LBB189:
 131:Frame.h       ****         G = Color.m_G;
 1119              		.loc 2 131 11 view .LVU369
 1120 0222 03F83A60 		strb	r6, [r3, r10, lsl #3]
 1121              	.LBE189:
 1122              	.LBE191:
 217:Frame.h       ****         }
 1123              		.loc 2 217 40 view .LVU370
 1124 0226 03EBCA03 		add	r3, r3, r10, lsl #3
 1125              	.LVL104:
 1126              	.LBB192:
 1127              	.LBI187:
 130:Frame.h       ****         R = Color.m_R;
 1128              		.loc 2 130 17 is_stmt 1 view .LVU371
 1129              	.LBB190:
 131:Frame.h       ****         G = Color.m_G;
 1130              		.loc 2 131 9 view .LVU372
 132:Frame.h       ****         B = Color.m_B;
 1131              		.loc 2 132 9 view .LVU373
 134:Frame.h       ****     }
 1132              		.loc 2 134 20 is_stmt 0 view .LVU374
 1133 022a 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1134              		.loc 2 132 11 view .LVU375
 1135 022e 5D70     		strb	r5, [r3, #1]
 133:Frame.h       ****         *m_pChange = true;
 1136              		.loc 2 133 9 is_stmt 1 view .LVU376
 133:Frame.h       ****         *m_pChange = true;
 1137              		.loc 2 133 11 is_stmt 0 view .LVU377
 1138 0230 019D     		ldr	r5, [sp, #4]
 1139 0232 9D70     		strb	r5, [r3, #2]
 134:Frame.h       ****     }
 1140              		.loc 2 134 9 is_stmt 1 view .LVU378
 134:Frame.h       ****     }
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 36


 1141              		.loc 2 134 20 is_stmt 0 view .LVU379
 1142 0234 5B68     		ldr	r3, [r3, #4]
 1143              	.LVL105:
 134:Frame.h       ****     }
 1144              		.loc 2 134 20 view .LVU380
 1145 0236 83F800A0 		strb	r10, [r3]
 1146              	.LVL106:
 1147              	.L51:
 134:Frame.h       ****     }
 1148              		.loc 2 134 20 view .LVU381
 1149              	.LBE190:
 1150              	.LBE192:
 1151              	.LBE194:
 1152              	.LBE196:
 150:GFX.cpp       ****             {
 1153              		.loc 1 150 13 view .LVU382
 1154 023a 1CEB0E0C 		adds	ip, ip, lr
 1155              	.LVL107:
 150:GFX.cpp       ****             {
 1156              		.loc 1 150 13 view .LVU383
 1157 023e 01D4     		bmi	.L52
 152:GFX.cpp       ****                 error += errorInc;
 1158              		.loc 1 152 19 view .LVU384
 1159 0240 3944     		add	r1, r1, r7
 1160              	.LVL108:
 153:GFX.cpp       ****             }
 1161              		.loc 1 153 17 is_stmt 1 view .LVU385
 153:GFX.cpp       ****             }
 1162              		.loc 1 153 23 is_stmt 0 view .LVU386
 1163 0242 A444     		add	ip, ip, r4
 1164              	.LVL109:
 1165              	.L52:
 145:GFX.cpp       ****         {
 1166              		.loc 1 145 9 is_stmt 1 discriminator 2 view .LVU387
 145:GFX.cpp       ****         {
 1167              		.loc 1 145 44 is_stmt 0 discriminator 2 view .LVU388
 1168 0244 08EB0203 		add	r3, r8, r2
 1169              	.LVL110:
 145:GFX.cpp       ****         {
 1170              		.loc 1 145 28 is_stmt 1 discriminator 2 view .LVU389
 1171 0248 9145     		cmp	r9, r2
 145:GFX.cpp       ****         {
 1172              		.loc 1 145 44 is_stmt 0 discriminator 2 view .LVU390
 1173 024a 1A46     		mov	r2, r3
 145:GFX.cpp       ****         {
 1174              		.loc 1 145 28 discriminator 2 view .LVU391
 1175 024c DBD1     		bne	.L53
 145:GFX.cpp       ****         {
 1176              		.loc 1 145 28 discriminator 2 view .LVU392
 1177              	.LBE197:
 1178              	.LBE183:
 1179              	.LBE198:
 1180              	.LBE202:
 1181              	.LBE208:
 1182              		.loc 1 157 1 view .LVU393
 1183 024e 05B0     		add	sp, sp, #20
 1184              		.cfi_remember_state
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 37


 1185              		.cfi_def_cfa_offset 36
 1186              		@ sp needed
 1187 0250 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1188              	.LVL111:
 1189              	.L59:
 1190              		.cfi_restore_state
 1191              	.LBB209:
 1192              	.LBB203:
 1193              	.LBB199:
 1194              	.LBB164:
 1195              	.LBB157:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1196              		.loc 2 209 25 is_stmt 1 view .LVU394
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1197              		.loc 2 209 27 is_stmt 0 view .LVU395
 1198 0254 0138     		subs	r0, r0, #1
 1199 0256 1FFA80F9 		uxth	r9, r0
 1200              	.LVL112:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1201              		.loc 2 209 27 view .LVU396
 1202 025a 61E7     		b	.L45
 1203              	.LBE157:
 1204              	.LBE164:
 1205              	.LBE199:
 1206              	.LBE203:
 1207              	.LBE209:
 1208              		.cfi_endproc
 1209              	.LFE2633:
 1211              		.section	.text._ZN4cGFX8drawRectEttss6cColor,"ax",%progbits
 1212              		.align	1
 1213              		.p2align 2,,3
 1214              		.global	_ZN4cGFX8drawRectEttss6cColor
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu fpv5-d16
 1220              	_ZN4cGFX8drawRectEttss6cColor:
 1221              	.LVL113:
 1222              	.LFB2631:
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1223              		.loc 1 52 82 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 8, pretend = 0, frame = 8
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1227              		.loc 1 53 5 view .LVU398
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1228              		.loc 1 52 82 is_stmt 0 view .LVU399
 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1236              		.loc 1 53 5 view .LVU400
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 38


 1237 0002 002B     		cmp	r3, #0
 1238              	.LVL114:
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1239              		.loc 1 52 82 view .LVU401
 1240 0004 85B0     		sub	sp, sp, #20
 1241              		.cfi_def_cfa_offset 40
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1242              		.loc 1 52 82 view .LVU402
 1243 0006 0D46     		mov	r5, r1
 1244 0008 1446     		mov	r4, r2
 1245 000a BDF92860 		ldrsh	r6, [sp, #40]
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1246              		.loc 1 53 5 view .LVU403
 1247 000e 2ADB     		blt	.L62
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1248              		.loc 1 56 13 view .LVU404
 1249 0010 0B44     		add	r3, r3, r1
  54:GFX.cpp       **** 
 1250              		.loc 1 54 5 view .LVU405
 1251 0012 002E     		cmp	r6, #0
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1252              		.loc 1 56 13 view .LVU406
 1253 0014 9FB2     		uxth	r7, r3
 1254              	.LVL115:
  54:GFX.cpp       **** 
 1255              		.loc 1 54 5 is_stmt 1 view .LVU407
 1256 0016 2BDB     		blt	.L64
 1257              	.L67:
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1258              		.loc 1 57 13 is_stmt 0 view .LVU408
 1259 0018 2644     		add	r6, r6, r4
 1260 001a B6B2     		uxth	r6, r6
 1261              	.LVL116:
 1262              	.L65:
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1263              		.loc 1 56 5 is_stmt 1 view .LVU409
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1264              		.loc 1 56 13 is_stmt 0 view .LVU410
 1265 001c 0B9B     		ldr	r3, [sp, #44]
 1266 001e 2246     		mov	r2, r4
 1267 0020 2946     		mov	r1, r5
 1268 0022 0390     		str	r0, [sp, #12]
 1269 0024 0193     		str	r3, [sp, #4]
 1270 0026 3B46     		mov	r3, r7
 1271 0028 0094     		str	r4, [sp]
 1272 002a FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1273              	.LVL117:
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1274              		.loc 1 57 5 is_stmt 1 view .LVU411
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1275              		.loc 1 57 13 is_stmt 0 view .LVU412
 1276 002e 0B9B     		ldr	r3, [sp, #44]
 1277 0030 2246     		mov	r2, r4
 1278 0032 3946     		mov	r1, r7
 1279 0034 0398     		ldr	r0, [sp, #12]
 1280 0036 0193     		str	r3, [sp, #4]
 1281 0038 3B46     		mov	r3, r7
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 39


 1282 003a 0096     		str	r6, [sp]
 1283 003c FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1284              	.LVL118:
  58:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
 1285              		.loc 1 58 5 is_stmt 1 view .LVU413
  58:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
 1286              		.loc 1 58 13 is_stmt 0 view .LVU414
 1287 0040 0B9B     		ldr	r3, [sp, #44]
 1288 0042 3946     		mov	r1, r7
 1289 0044 3246     		mov	r2, r6
 1290 0046 0398     		ldr	r0, [sp, #12]
 1291 0048 0193     		str	r3, [sp, #4]
 1292 004a 2B46     		mov	r3, r5
 1293 004c 0096     		str	r6, [sp]
 1294 004e FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1295              	.LVL119:
  59:GFX.cpp       **** }
 1296              		.loc 1 59 5 is_stmt 1 view .LVU415
  59:GFX.cpp       **** }
 1297              		.loc 1 59 13 is_stmt 0 view .LVU416
 1298 0052 2B46     		mov	r3, r5
 1299 0054 3246     		mov	r2, r6
 1300 0056 2946     		mov	r1, r5
 1301 0058 0398     		ldr	r0, [sp, #12]
 1302 005a 0A94     		str	r4, [sp, #40]
  60:GFX.cpp       **** 
 1303              		.loc 1 60 1 view .LVU417
 1304 005c 05B0     		add	sp, sp, #20
 1305              		.cfi_remember_state
 1306              		.cfi_def_cfa_offset 20
 1307              		@ sp needed
 1308 005e BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1309              		.cfi_restore 14
 1310              		.cfi_restore 7
 1311              		.cfi_restore 6
 1312              		.cfi_restore 5
 1313              		.cfi_restore 4
 1314              		.cfi_def_cfa_offset 0
 1315              	.LVL120:
  59:GFX.cpp       **** }
 1316              		.loc 1 59 13 view .LVU418
 1317 0062 FFF7FEBF 		b	_ZN4cGFX8drawLineEtttt6cColor
 1318              	.LVL121:
 1319              	.L62:
 1320              		.cfi_restore_state
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1321              		.loc 1 53 17 is_stmt 1 discriminator 1 view .LVU419
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1322              		.loc 1 53 19 is_stmt 0 discriminator 1 view .LVU420
 1323 0066 1944     		add	r1, r1, r3
 1324              	.LVL122:
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1325              		.loc 1 53 26 is_stmt 1 discriminator 1 view .LVU421
  54:GFX.cpp       **** 
 1326              		.loc 1 54 5 is_stmt 0 discriminator 1 view .LVU422
 1327 0068 002E     		cmp	r6, #0
 1328 006a 2F46     		mov	r7, r5
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 40


  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1329              		.loc 1 53 19 discriminator 1 view .LVU423
 1330 006c 8DB2     		uxth	r5, r1
 1331              	.LVL123:
  54:GFX.cpp       **** 
 1332              		.loc 1 54 5 is_stmt 1 discriminator 1 view .LVU424
 1333 006e D3DA     		bge	.L67
 1334              	.L64:
  54:GFX.cpp       **** 
 1335              		.loc 1 54 17 discriminator 1 view .LVU425
  54:GFX.cpp       **** 
 1336              		.loc 1 54 19 is_stmt 0 discriminator 1 view .LVU426
 1337 0070 A319     		adds	r3, r4, r6
 1338              	.LVL124:
  54:GFX.cpp       **** 
 1339              		.loc 1 54 26 is_stmt 1 discriminator 1 view .LVU427
  54:GFX.cpp       **** 
 1340              		.loc 1 54 26 is_stmt 0 discriminator 1 view .LVU428
 1341 0072 2646     		mov	r6, r4
 1342              	.LVL125:
  54:GFX.cpp       **** 
 1343              		.loc 1 54 19 discriminator 1 view .LVU429
 1344 0074 9CB2     		uxth	r4, r3
 1345 0076 D1E7     		b	.L65
 1346              		.cfi_endproc
 1347              	.LFE2631:
 1349              		.section	.text._ZN4cGFX10drawCircleEttt6cColor,"ax",%progbits
 1350              		.align	1
 1351              		.p2align 2,,3
 1352              		.global	_ZN4cGFX10drawCircleEttt6cColor
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu fpv5-d16
 1358              	_ZN4cGFX10drawCircleEttt6cColor:
 1359              	.LVL126:
 1360              	.LFB2634:
 158:GFX.cpp       **** 
 159:GFX.cpp       **** //-----------------------------------------------------------------------------------
 160:GFX.cpp       **** // Dessin d'un cercle
 161:GFX.cpp       **** // Merci a Frédéric Goset http://fredericgoset.ovh/
 162:GFX.cpp       **** // L'algorithme de cercle de Bresenham 
 163:GFX.cpp       **** void cGFX::drawCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color)
 164:GFX.cpp       **** {
 1361              		.loc 1 164 1 is_stmt 1 view -0
 1362              		.cfi_startproc
 1363              		@ args = 4, pretend = 0, frame = 24
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 165:GFX.cpp       ****     int16_t x = 0;
 1365              		.loc 1 165 5 view .LVU431
 166:GFX.cpp       ****     int16_t y = radius;
 1366              		.loc 1 166 5 view .LVU432
 164:GFX.cpp       ****     int16_t x = 0;
 1367              		.loc 1 164 1 is_stmt 0 view .LVU433
 1368 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1369              		.cfi_def_cfa_offset 36
 1370              		.cfi_offset 4, -36
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 41


 1371              		.cfi_offset 5, -32
 1372              		.cfi_offset 6, -28
 1373              		.cfi_offset 7, -24
 1374              		.cfi_offset 8, -20
 1375              		.cfi_offset 9, -16
 1376              		.cfi_offset 10, -12
 1377              		.cfi_offset 11, -8
 1378              		.cfi_offset 14, -4
 1379              		.loc 1 166 13 view .LVU434
 1380 0004 1CB2     		sxth	r4, r3
 164:GFX.cpp       ****     int16_t x = 0;
 1381              		.loc 1 164 1 view .LVU435
 1382 0006 87B0     		sub	sp, sp, #28
 1383              		.cfi_def_cfa_offset 64
 167:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 168:GFX.cpp       **** 
 169:GFX.cpp       ****     while (x <= y)
 1384              		.loc 1 169 14 view .LVU436
 1385 0008 002C     		cmp	r4, #0
 166:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 1386              		.loc 1 166 13 view .LVU437
 1387 000a 0194     		str	r4, [sp, #4]
 1388              	.LVL127:
 167:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 1389              		.loc 1 167 5 is_stmt 1 view .LVU438
 1390              		.loc 1 169 5 view .LVU439
 1391              		.loc 1 169 14 view .LVU440
 1392 000c C0F2F680 		blt	.L68
 1393 0010 9DF84040 		ldrb	r4, [sp, #64]	@ zero_extendqisi2
 1394              	.LVL128:
 1395              		.loc 1 169 14 is_stmt 0 view .LVU441
 1396 0014 9B00     		lsls	r3, r3, #2
 1397              	.LVL129:
 1398              	.LBB242:
 1399              	.LBB243:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1400              		.loc 2 216 15 view .LVU442
 1401 0016 B0F85CE0 		ldrh	lr, [r0, #92]
 217:Frame.h       ****         }
 1402              		.loc 2 217 27 view .LVU443
 1403 001a 4FF00008 		mov	r8, #0
 1404 001e C3F10503 		rsb	r3, r3, #5
 1405              	.LVL130:
 217:Frame.h       ****         }
 1406              		.loc 2 217 27 view .LVU444
 1407 0022 0394     		str	r4, [sp, #12]
 1408 0024 9DF84140 		ldrb	r4, [sp, #65]	@ zero_extendqisi2
 1409 0028 1BB2     		sxth	r3, r3
 1410 002a 0494     		str	r4, [sp, #16]
 1411 002c 9DF84240 		ldrb	r4, [sp, #66]	@ zero_extendqisi2
 1412 0030 0293     		str	r3, [sp, #8]
 1413 0032 0594     		str	r4, [sp, #20]
 1414 0034 1446     		mov	r4, r2
 1415 0036 D0E0     		b	.L83
 1416              	.LVL131:
 1417              	.L93:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 42


 1418              		.loc 2 216 30 view .LVU445
 1419 0038 B0F85EA0 		ldrh	r10, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1420              		.loc 2 216 24 view .LVU446
 1421 003c 5645     		cmp	r6, r10
 1422 003e 14D2     		bcs	.L71
 217:Frame.h       ****         }
 1423              		.loc 2 217 13 is_stmt 1 view .LVU447
 217:Frame.h       ****         }
 1424              		.loc 2 217 40 is_stmt 0 view .LVU448
 1425 0040 D0F85490 		ldr	r9, [r0, #84]
 217:Frame.h       ****         }
 1426              		.loc 2 217 23 view .LVU449
 1427 0044 0EFB067B 		mla	fp, lr, r6, r7
 1428              	.LBB244:
 1429              	.LBB245:
 131:Frame.h       ****         G = Color.m_G;
 1430              		.loc 2 131 11 view .LVU450
 1431 0048 039B     		ldr	r3, [sp, #12]
 1432 004a 09F83B30 		strb	r3, [r9, fp, lsl #3]
 1433              	.LBE245:
 1434              	.LBE244:
 217:Frame.h       ****         }
 1435              		.loc 2 217 40 view .LVU451
 1436 004e 09EBCB09 		add	r9, r9, fp, lsl #3
 1437              	.LVL132:
 1438              	.LBB247:
 1439              	.LBI244:
 130:Frame.h       ****         R = Color.m_R;
 1440              		.loc 2 130 17 is_stmt 1 view .LVU452
 1441              	.LBB246:
 131:Frame.h       ****         G = Color.m_G;
 1442              		.loc 2 131 9 view .LVU453
 132:Frame.h       ****         B = Color.m_B;
 1443              		.loc 2 132 9 view .LVU454
 132:Frame.h       ****         B = Color.m_B;
 1444              		.loc 2 132 11 is_stmt 0 view .LVU455
 1445 0052 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1446              		.loc 2 134 20 view .LVU456
 1447 0054 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1448              		.loc 2 132 11 view .LVU457
 1449 0058 89F80130 		strb	r3, [r9, #1]
 133:Frame.h       ****         *m_pChange = true;
 1450              		.loc 2 133 9 is_stmt 1 view .LVU458
 133:Frame.h       ****         *m_pChange = true;
 1451              		.loc 2 133 11 is_stmt 0 view .LVU459
 1452 005c 059B     		ldr	r3, [sp, #20]
 1453 005e 89F80230 		strb	r3, [r9, #2]
 134:Frame.h       ****     }
 1454              		.loc 2 134 9 is_stmt 1 view .LVU460
 134:Frame.h       ****     }
 1455              		.loc 2 134 20 is_stmt 0 view .LVU461
 1456 0062 D9F80490 		ldr	r9, [r9, #4]
 1457              	.LVL133:
 134:Frame.h       ****     }
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 43


 1458              		.loc 2 134 20 view .LVU462
 1459 0066 89F800B0 		strb	fp, [r9]
 1460              	.LVL134:
 1461              	.L71:
 134:Frame.h       ****     }
 1462              		.loc 2 134 20 view .LVU463
 1463              	.LBE246:
 1464              	.LBE247:
 1465              	.LBE243:
 1466              	.LBE242:
 170:GFX.cpp       ****     {
 171:GFX.cpp       ****         setPixel(centerX + x, centerY + y, Color);
 172:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1467              		.loc 1 172 9 is_stmt 1 view .LVU464
 1468              		.loc 1 172 17 is_stmt 0 view .LVU465
 1469 006a A2EB0509 		sub	r9, r2, r5
 1470 006e 1FFA89F9 		uxth	r9, r9
 1471              	.LVL135:
 1472              	.LBB249:
 1473              	.LBI249:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1474              		.loc 2 215 17 is_stmt 1 view .LVU466
 1475              	.LBB250:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1476              		.loc 2 216 9 view .LVU467
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1477              		.loc 2 216 24 is_stmt 0 view .LVU468
 1478 0072 CA45     		cmp	r10, r9
 1479 0074 10D9     		bls	.L90
 217:Frame.h       ****         }
 1480              		.loc 2 217 13 is_stmt 1 view .LVU469
 217:Frame.h       ****         }
 1481              		.loc 2 217 23 is_stmt 0 view .LVU470
 1482 0076 0EFB097A 		mla	r10, lr, r9, r7
 1483              	.LBB251:
 1484              	.LBB252:
 131:Frame.h       ****         G = Color.m_G;
 1485              		.loc 2 131 11 view .LVU471
 1486 007a 039B     		ldr	r3, [sp, #12]
 1487              	.LBE252:
 1488              	.LBE251:
 217:Frame.h       ****         }
 1489              		.loc 2 217 40 view .LVU472
 1490 007c 476D     		ldr	r7, [r0, #84]
 1491              	.LVL136:
 1492              	.LBB255:
 1493              	.LBB253:
 131:Frame.h       ****         G = Color.m_G;
 1494              		.loc 2 131 11 view .LVU473
 1495 007e 07F83A30 		strb	r3, [r7, r10, lsl #3]
 1496              	.LBE253:
 1497              	.LBE255:
 217:Frame.h       ****         }
 1498              		.loc 2 217 40 view .LVU474
 1499 0082 07EBCA07 		add	r7, r7, r10, lsl #3
 1500              	.LVL137:
 1501              	.LBB256:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 44


 1502              	.LBI251:
 130:Frame.h       ****         R = Color.m_R;
 1503              		.loc 2 130 17 is_stmt 1 view .LVU475
 1504              	.LBB254:
 131:Frame.h       ****         G = Color.m_G;
 1505              		.loc 2 131 9 view .LVU476
 132:Frame.h       ****         B = Color.m_B;
 1506              		.loc 2 132 9 view .LVU477
 132:Frame.h       ****         B = Color.m_B;
 1507              		.loc 2 132 11 is_stmt 0 view .LVU478
 1508 0086 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1509              		.loc 2 134 20 view .LVU479
 1510 0088 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1511              		.loc 2 132 11 view .LVU480
 1512 008c 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1513              		.loc 2 133 9 is_stmt 1 view .LVU481
 133:Frame.h       ****         *m_pChange = true;
 1514              		.loc 2 133 11 is_stmt 0 view .LVU482
 1515 008e 059B     		ldr	r3, [sp, #20]
 1516 0090 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1517              		.loc 2 134 9 is_stmt 1 view .LVU483
 134:Frame.h       ****     }
 1518              		.loc 2 134 20 is_stmt 0 view .LVU484
 1519 0092 7F68     		ldr	r7, [r7, #4]
 1520              	.LVL138:
 134:Frame.h       ****     }
 1521              		.loc 2 134 20 view .LVU485
 1522 0094 87F800A0 		strb	r10, [r7]
 1523              	.LVL139:
 1524              	.L90:
 134:Frame.h       ****     }
 1525              		.loc 2 134 20 view .LVU486
 1526              	.LBE254:
 1527              	.LBE256:
 1528              	.LBE250:
 1529              	.LBE249:
 173:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
 1530              		.loc 1 173 9 is_stmt 1 view .LVU487
 1531 0098 A1EB0C07 		sub	r7, r1, ip
 1532 009c BFB2     		uxth	r7, r7
 1533              	.LVL140:
 1534              	.LBB258:
 1535              	.LBI258:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1536              		.loc 2 215 17 view .LVU488
 1537              	.LBB259:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1538              		.loc 2 216 9 view .LVU489
 1539 009e 7745     		cmp	r7, lr
 1540 00a0 25D2     		bcs	.L73
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1541              		.loc 2 216 30 is_stmt 0 view .LVU490
 1542 00a2 B0F85EA0 		ldrh	r10, [r0, #94]
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 45


 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1543              		.loc 2 216 24 view .LVU491
 1544 00a6 5645     		cmp	r6, r10
 1545 00a8 10D2     		bcs	.L74
 217:Frame.h       ****         }
 1546              		.loc 2 217 13 is_stmt 1 view .LVU492
 217:Frame.h       ****         }
 1547              		.loc 2 217 23 is_stmt 0 view .LVU493
 1548 00aa 0EFB067B 		mla	fp, lr, r6, r7
 1549              	.LBB260:
 1550              	.LBB261:
 131:Frame.h       ****         G = Color.m_G;
 1551              		.loc 2 131 11 view .LVU494
 1552 00ae 039B     		ldr	r3, [sp, #12]
 1553              	.LBE261:
 1554              	.LBE260:
 217:Frame.h       ****         }
 1555              		.loc 2 217 40 view .LVU495
 1556 00b0 466D     		ldr	r6, [r0, #84]
 1557              	.LVL141:
 1558              	.LBB264:
 1559              	.LBB262:
 131:Frame.h       ****         G = Color.m_G;
 1560              		.loc 2 131 11 view .LVU496
 1561 00b2 06F83B30 		strb	r3, [r6, fp, lsl #3]
 1562              	.LBE262:
 1563              	.LBE264:
 217:Frame.h       ****         }
 1564              		.loc 2 217 40 view .LVU497
 1565 00b6 06EBCB06 		add	r6, r6, fp, lsl #3
 1566              	.LVL142:
 1567              	.LBB265:
 1568              	.LBI260:
 130:Frame.h       ****         R = Color.m_R;
 1569              		.loc 2 130 17 is_stmt 1 view .LVU498
 1570              	.LBB263:
 131:Frame.h       ****         G = Color.m_G;
 1571              		.loc 2 131 9 view .LVU499
 132:Frame.h       ****         B = Color.m_B;
 1572              		.loc 2 132 9 view .LVU500
 132:Frame.h       ****         B = Color.m_B;
 1573              		.loc 2 132 11 is_stmt 0 view .LVU501
 1574 00ba 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1575              		.loc 2 134 20 view .LVU502
 1576 00bc 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1577              		.loc 2 132 11 view .LVU503
 1578 00c0 7370     		strb	r3, [r6, #1]
 133:Frame.h       ****         *m_pChange = true;
 1579              		.loc 2 133 9 is_stmt 1 view .LVU504
 133:Frame.h       ****         *m_pChange = true;
 1580              		.loc 2 133 11 is_stmt 0 view .LVU505
 1581 00c2 059B     		ldr	r3, [sp, #20]
 1582 00c4 B370     		strb	r3, [r6, #2]
 134:Frame.h       ****     }
 1583              		.loc 2 134 9 is_stmt 1 view .LVU506
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 46


 134:Frame.h       ****     }
 1584              		.loc 2 134 20 is_stmt 0 view .LVU507
 1585 00c6 7668     		ldr	r6, [r6, #4]
 1586              	.LVL143:
 134:Frame.h       ****     }
 1587              		.loc 2 134 20 view .LVU508
 1588 00c8 86F800B0 		strb	fp, [r6]
 1589              	.LVL144:
 1590              	.L74:
 134:Frame.h       ****     }
 1591              		.loc 2 134 20 view .LVU509
 1592              	.LBE263:
 1593              	.LBE265:
 1594              	.LBE259:
 1595              	.LBE258:
 174:GFX.cpp       ****         setPixel(centerX - x, centerY - y, Color);
 1596              		.loc 1 174 9 is_stmt 1 view .LVU510
 1597              	.LBB266:
 1598              	.LBI266:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1599              		.loc 2 215 17 view .LVU511
 1600              	.LBB267:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1601              		.loc 2 216 9 view .LVU512
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1602              		.loc 2 216 24 is_stmt 0 view .LVU513
 1603 00cc CA45     		cmp	r10, r9
 1604 00ce 0ED9     		bls	.L73
 217:Frame.h       ****         }
 1605              		.loc 2 217 13 is_stmt 1 view .LVU514
 217:Frame.h       ****         }
 1606              		.loc 2 217 40 is_stmt 0 view .LVU515
 1607 00d0 466D     		ldr	r6, [r0, #84]
 217:Frame.h       ****         }
 1608              		.loc 2 217 23 view .LVU516
 1609 00d2 0EFB0977 		mla	r7, lr, r9, r7
 1610              	.LVL145:
 1611              	.LBB268:
 1612              	.LBB269:
 131:Frame.h       ****         G = Color.m_G;
 1613              		.loc 2 131 11 view .LVU517
 1614 00d6 039B     		ldr	r3, [sp, #12]
 1615 00d8 06F83730 		strb	r3, [r6, r7, lsl #3]
 1616              	.LBE269:
 1617              	.LBE268:
 217:Frame.h       ****         }
 1618              		.loc 2 217 40 view .LVU518
 1619 00dc 06EBC707 		add	r7, r6, r7, lsl #3
 1620              	.LVL146:
 1621              	.LBB271:
 1622              	.LBI268:
 130:Frame.h       ****         R = Color.m_R;
 1623              		.loc 2 130 17 is_stmt 1 view .LVU519
 1624              	.LBB270:
 131:Frame.h       ****         G = Color.m_G;
 1625              		.loc 2 131 9 view .LVU520
 132:Frame.h       ****         B = Color.m_B;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 47


 1626              		.loc 2 132 9 view .LVU521
 132:Frame.h       ****         B = Color.m_B;
 1627              		.loc 2 132 11 is_stmt 0 view .LVU522
 1628 00e0 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1629              		.loc 2 134 20 view .LVU523
 1630 00e2 7E68     		ldr	r6, [r7, #4]
 132:Frame.h       ****         B = Color.m_B;
 1631              		.loc 2 132 11 view .LVU524
 1632 00e4 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1633              		.loc 2 133 9 is_stmt 1 view .LVU525
 133:Frame.h       ****         *m_pChange = true;
 1634              		.loc 2 133 11 is_stmt 0 view .LVU526
 1635 00e6 059B     		ldr	r3, [sp, #20]
 1636 00e8 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1637              		.loc 2 134 9 is_stmt 1 view .LVU527
 134:Frame.h       ****     }
 1638              		.loc 2 134 20 is_stmt 0 view .LVU528
 1639 00ea 0127     		movs	r7, #1
 1640              	.LVL147:
 134:Frame.h       ****     }
 1641              		.loc 2 134 20 view .LVU529
 1642 00ec 3770     		strb	r7, [r6]
 1643              	.LVL148:
 1644              	.L73:
 134:Frame.h       ****     }
 1645              		.loc 2 134 20 view .LVU530
 1646              	.LBE270:
 1647              	.LBE271:
 1648              	.LBE267:
 1649              	.LBE266:
 175:GFX.cpp       ****         setPixel(centerX + y, centerY + x, Color);
 1650              		.loc 1 175 9 is_stmt 1 view .LVU531
 1651              		.loc 1 175 17 is_stmt 0 view .LVU532
 1652 00ee 6F18     		adds	r7, r5, r1
 1653 00f0 0CEB0206 		add	r6, ip, r2
 1654 00f4 BFB2     		uxth	r7, r7
 1655 00f6 B6B2     		uxth	r6, r6
 1656              	.LVL149:
 1657              	.LBB272:
 1658              	.LBI272:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1659              		.loc 2 215 17 is_stmt 1 view .LVU533
 1660              	.LBB273:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1661              		.loc 2 216 9 view .LVU534
 1662 00f8 7745     		cmp	r7, lr
 1663 00fa 2BD2     		bcs	.L75
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1664              		.loc 2 216 30 is_stmt 0 view .LVU535
 1665 00fc B0F85EA0 		ldrh	r10, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1666              		.loc 2 216 24 view .LVU536
 1667 0100 5645     		cmp	r6, r10
 1668 0102 14D2     		bcs	.L76
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 48


 217:Frame.h       ****         }
 1669              		.loc 2 217 13 is_stmt 1 view .LVU537
 217:Frame.h       ****         }
 1670              		.loc 2 217 40 is_stmt 0 view .LVU538
 1671 0104 D0F85490 		ldr	r9, [r0, #84]
 217:Frame.h       ****         }
 1672              		.loc 2 217 23 view .LVU539
 1673 0108 0EFB067B 		mla	fp, lr, r6, r7
 1674              	.LBB274:
 1675              	.LBB275:
 131:Frame.h       ****         G = Color.m_G;
 1676              		.loc 2 131 11 view .LVU540
 1677 010c 039B     		ldr	r3, [sp, #12]
 1678 010e 09F83B30 		strb	r3, [r9, fp, lsl #3]
 1679              	.LBE275:
 1680              	.LBE274:
 217:Frame.h       ****         }
 1681              		.loc 2 217 40 view .LVU541
 1682 0112 09EBCB09 		add	r9, r9, fp, lsl #3
 1683              	.LVL150:
 1684              	.LBB277:
 1685              	.LBI274:
 130:Frame.h       ****         R = Color.m_R;
 1686              		.loc 2 130 17 is_stmt 1 view .LVU542
 1687              	.LBB276:
 131:Frame.h       ****         G = Color.m_G;
 1688              		.loc 2 131 9 view .LVU543
 132:Frame.h       ****         B = Color.m_B;
 1689              		.loc 2 132 9 view .LVU544
 132:Frame.h       ****         B = Color.m_B;
 1690              		.loc 2 132 11 is_stmt 0 view .LVU545
 1691 0116 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1692              		.loc 2 134 20 view .LVU546
 1693 0118 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1694              		.loc 2 132 11 view .LVU547
 1695 011c 89F80130 		strb	r3, [r9, #1]
 133:Frame.h       ****         *m_pChange = true;
 1696              		.loc 2 133 9 is_stmt 1 view .LVU548
 133:Frame.h       ****         *m_pChange = true;
 1697              		.loc 2 133 11 is_stmt 0 view .LVU549
 1698 0120 059B     		ldr	r3, [sp, #20]
 1699 0122 89F80230 		strb	r3, [r9, #2]
 134:Frame.h       ****     }
 1700              		.loc 2 134 9 is_stmt 1 view .LVU550
 134:Frame.h       ****     }
 1701              		.loc 2 134 20 is_stmt 0 view .LVU551
 1702 0126 D9F80490 		ldr	r9, [r9, #4]
 1703              	.LVL151:
 134:Frame.h       ****     }
 1704              		.loc 2 134 20 view .LVU552
 1705 012a 89F800B0 		strb	fp, [r9]
 1706              	.LVL152:
 1707              	.L76:
 134:Frame.h       ****     }
 1708              		.loc 2 134 20 view .LVU553
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 49


 1709              	.LBE276:
 1710              	.LBE277:
 1711              	.LBE273:
 1712              	.LBE272:
 176:GFX.cpp       ****         setPixel(centerX + y, centerY - x, Color);
 1713              		.loc 1 176 9 is_stmt 1 view .LVU554
 1714              	.LBB278:
 1715              	.LBI278:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1716              		.loc 2 215 17 view .LVU555
 1717              	.LBB279:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1718              		.loc 2 216 9 view .LVU556
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1719              		.loc 2 216 24 is_stmt 0 view .LVU557
 1720 012e 5445     		cmp	r4, r10
 1721 0130 10D2     		bcs	.L75
 217:Frame.h       ****         }
 1722              		.loc 2 217 13 is_stmt 1 view .LVU558
 217:Frame.h       ****         }
 1723              		.loc 2 217 23 is_stmt 0 view .LVU559
 1724 0132 0EFB0479 		mla	r9, lr, r4, r7
 1725              	.LBB280:
 1726              	.LBB281:
 131:Frame.h       ****         G = Color.m_G;
 1727              		.loc 2 131 11 view .LVU560
 1728 0136 039B     		ldr	r3, [sp, #12]
 1729              	.LBE281:
 1730              	.LBE280:
 217:Frame.h       ****         }
 1731              		.loc 2 217 40 view .LVU561
 1732 0138 476D     		ldr	r7, [r0, #84]
 1733              	.LVL153:
 1734              	.LBB284:
 1735              	.LBB282:
 131:Frame.h       ****         G = Color.m_G;
 1736              		.loc 2 131 11 view .LVU562
 1737 013a 07F83930 		strb	r3, [r7, r9, lsl #3]
 1738              	.LBE282:
 1739              	.LBE284:
 217:Frame.h       ****         }
 1740              		.loc 2 217 40 view .LVU563
 1741 013e 07EBC907 		add	r7, r7, r9, lsl #3
 1742              	.LVL154:
 1743              	.LBB285:
 1744              	.LBI280:
 130:Frame.h       ****         R = Color.m_R;
 1745              		.loc 2 130 17 is_stmt 1 view .LVU564
 1746              	.LBB283:
 131:Frame.h       ****         G = Color.m_G;
 1747              		.loc 2 131 9 view .LVU565
 132:Frame.h       ****         B = Color.m_B;
 1748              		.loc 2 132 9 view .LVU566
 132:Frame.h       ****         B = Color.m_B;
 1749              		.loc 2 132 11 is_stmt 0 view .LVU567
 1750 0142 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 50


 1751              		.loc 2 134 20 view .LVU568
 1752 0144 4FF00109 		mov	r9, #1
 132:Frame.h       ****         B = Color.m_B;
 1753              		.loc 2 132 11 view .LVU569
 1754 0148 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1755              		.loc 2 133 9 is_stmt 1 view .LVU570
 133:Frame.h       ****         *m_pChange = true;
 1756              		.loc 2 133 11 is_stmt 0 view .LVU571
 1757 014a 059B     		ldr	r3, [sp, #20]
 1758 014c BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1759              		.loc 2 134 9 is_stmt 1 view .LVU572
 134:Frame.h       ****     }
 1760              		.loc 2 134 20 is_stmt 0 view .LVU573
 1761 014e 7F68     		ldr	r7, [r7, #4]
 1762              	.LVL155:
 134:Frame.h       ****     }
 1763              		.loc 2 134 20 view .LVU574
 1764 0150 87F80090 		strb	r9, [r7]
 1765              	.LVL156:
 1766              	.L75:
 134:Frame.h       ****     }
 1767              		.loc 2 134 20 view .LVU575
 1768              	.LBE283:
 1769              	.LBE285:
 1770              	.LBE279:
 1771              	.LBE278:
 177:GFX.cpp       ****         setPixel(centerX - y, centerY + x, Color);
 1772              		.loc 1 177 9 is_stmt 1 view .LVU576
 1773              		.loc 1 177 17 is_stmt 0 view .LVU577
 1774 0154 4F1B     		subs	r7, r1, r5
 1775 0156 BFB2     		uxth	r7, r7
 1776              	.LVL157:
 1777              	.LBB286:
 1778              	.LBI286:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1779              		.loc 2 215 17 is_stmt 1 view .LVU578
 1780              	.LBB287:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1781              		.loc 2 216 9 view .LVU579
 1782 0158 7745     		cmp	r7, lr
 1783 015a 25D2     		bcs	.L78
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1784              		.loc 2 216 30 is_stmt 0 view .LVU580
 1785 015c B0F85E90 		ldrh	r9, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1786              		.loc 2 216 24 view .LVU581
 1787 0160 4E45     		cmp	r6, r9
 1788 0162 10D2     		bcs	.L79
 217:Frame.h       ****         }
 1789              		.loc 2 217 13 is_stmt 1 view .LVU582
 217:Frame.h       ****         }
 1790              		.loc 2 217 23 is_stmt 0 view .LVU583
 1791 0164 0EFB067A 		mla	r10, lr, r6, r7
 1792              	.LBB288:
 1793              	.LBB289:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 51


 131:Frame.h       ****         G = Color.m_G;
 1794              		.loc 2 131 11 view .LVU584
 1795 0168 039B     		ldr	r3, [sp, #12]
 1796              	.LBE289:
 1797              	.LBE288:
 217:Frame.h       ****         }
 1798              		.loc 2 217 40 view .LVU585
 1799 016a 466D     		ldr	r6, [r0, #84]
 1800              	.LVL158:
 1801              	.LBB292:
 1802              	.LBB290:
 131:Frame.h       ****         G = Color.m_G;
 1803              		.loc 2 131 11 view .LVU586
 1804 016c 06F83A30 		strb	r3, [r6, r10, lsl #3]
 1805              	.LBE290:
 1806              	.LBE292:
 217:Frame.h       ****         }
 1807              		.loc 2 217 40 view .LVU587
 1808 0170 06EBCA06 		add	r6, r6, r10, lsl #3
 1809              	.LVL159:
 1810              	.LBB293:
 1811              	.LBI288:
 130:Frame.h       ****         R = Color.m_R;
 1812              		.loc 2 130 17 is_stmt 1 view .LVU588
 1813              	.LBB291:
 131:Frame.h       ****         G = Color.m_G;
 1814              		.loc 2 131 9 view .LVU589
 132:Frame.h       ****         B = Color.m_B;
 1815              		.loc 2 132 9 view .LVU590
 132:Frame.h       ****         B = Color.m_B;
 1816              		.loc 2 132 11 is_stmt 0 view .LVU591
 1817 0174 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1818              		.loc 2 134 20 view .LVU592
 1819 0176 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1820              		.loc 2 132 11 view .LVU593
 1821 017a 7370     		strb	r3, [r6, #1]
 133:Frame.h       ****         *m_pChange = true;
 1822              		.loc 2 133 9 is_stmt 1 view .LVU594
 133:Frame.h       ****         *m_pChange = true;
 1823              		.loc 2 133 11 is_stmt 0 view .LVU595
 1824 017c 059B     		ldr	r3, [sp, #20]
 1825 017e B370     		strb	r3, [r6, #2]
 134:Frame.h       ****     }
 1826              		.loc 2 134 9 is_stmt 1 view .LVU596
 134:Frame.h       ****     }
 1827              		.loc 2 134 20 is_stmt 0 view .LVU597
 1828 0180 7668     		ldr	r6, [r6, #4]
 1829              	.LVL160:
 134:Frame.h       ****     }
 1830              		.loc 2 134 20 view .LVU598
 1831 0182 86F800A0 		strb	r10, [r6]
 1832              	.LVL161:
 1833              	.L79:
 134:Frame.h       ****     }
 1834              		.loc 2 134 20 view .LVU599
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 52


 1835              	.LBE291:
 1836              	.LBE293:
 1837              	.LBE287:
 1838              	.LBE286:
 178:GFX.cpp       ****         setPixel(centerX - y, centerY - x, Color);
 1839              		.loc 1 178 9 is_stmt 1 view .LVU600
 1840              	.LBB294:
 1841              	.LBI294:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1842              		.loc 2 215 17 view .LVU601
 1843              	.LBB295:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1844              		.loc 2 216 9 view .LVU602
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1845              		.loc 2 216 24 is_stmt 0 view .LVU603
 1846 0186 4C45     		cmp	r4, r9
 1847 0188 0ED2     		bcs	.L78
 217:Frame.h       ****         }
 1848              		.loc 2 217 13 is_stmt 1 view .LVU604
 217:Frame.h       ****         }
 1849              		.loc 2 217 40 is_stmt 0 view .LVU605
 1850 018a 466D     		ldr	r6, [r0, #84]
 217:Frame.h       ****         }
 1851              		.loc 2 217 23 view .LVU606
 1852 018c 0EFB0477 		mla	r7, lr, r4, r7
 1853              	.LVL162:
 1854              	.LBB296:
 1855              	.LBB297:
 131:Frame.h       ****         G = Color.m_G;
 1856              		.loc 2 131 11 view .LVU607
 1857 0190 039B     		ldr	r3, [sp, #12]
 1858 0192 06F83730 		strb	r3, [r6, r7, lsl #3]
 1859              	.LBE297:
 1860              	.LBE296:
 217:Frame.h       ****         }
 1861              		.loc 2 217 40 view .LVU608
 1862 0196 06EBC707 		add	r7, r6, r7, lsl #3
 1863              	.LVL163:
 1864              	.LBB299:
 1865              	.LBI296:
 130:Frame.h       ****         R = Color.m_R;
 1866              		.loc 2 130 17 is_stmt 1 view .LVU609
 1867              	.LBB298:
 131:Frame.h       ****         G = Color.m_G;
 1868              		.loc 2 131 9 view .LVU610
 132:Frame.h       ****         B = Color.m_B;
 1869              		.loc 2 132 9 view .LVU611
 132:Frame.h       ****         B = Color.m_B;
 1870              		.loc 2 132 11 is_stmt 0 view .LVU612
 1871 019a 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1872              		.loc 2 134 20 view .LVU613
 1873 019c 7E68     		ldr	r6, [r7, #4]
 132:Frame.h       ****         B = Color.m_B;
 1874              		.loc 2 132 11 view .LVU614
 1875 019e 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 53


 1876              		.loc 2 133 9 is_stmt 1 view .LVU615
 133:Frame.h       ****         *m_pChange = true;
 1877              		.loc 2 133 11 is_stmt 0 view .LVU616
 1878 01a0 059B     		ldr	r3, [sp, #20]
 1879 01a2 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1880              		.loc 2 134 9 is_stmt 1 view .LVU617
 134:Frame.h       ****     }
 1881              		.loc 2 134 20 is_stmt 0 view .LVU618
 1882 01a4 0127     		movs	r7, #1
 1883              	.LVL164:
 134:Frame.h       ****     }
 1884              		.loc 2 134 20 view .LVU619
 1885 01a6 3770     		strb	r7, [r6]
 1886              	.LVL165:
 1887              	.L78:
 134:Frame.h       ****     }
 1888              		.loc 2 134 20 view .LVU620
 1889              	.LBE298:
 1890              	.LBE299:
 1891              	.LBE295:
 1892              	.LBE294:
 179:GFX.cpp       **** 
 180:GFX.cpp       ****         if (m > 0)
 1893              		.loc 1 180 9 is_stmt 1 view .LVU621
 1894 01a8 029B     		ldr	r3, [sp, #8]
 1895 01aa 002B     		cmp	r3, #0
 1896 01ac 06DD     		ble	.L92
 181:GFX.cpp       ****         {
 182:GFX.cpp       ****             y--;
 1897              		.loc 1 182 13 view .LVU622
 1898              		.loc 1 182 14 is_stmt 0 view .LVU623
 1899 01ae 013D     		subs	r5, r5, #1
 183:GFX.cpp       ****             m -= 8 * y;
 1900              		.loc 1 183 15 view .LVU624
 1901 01b0 029B     		ldr	r3, [sp, #8]
 182:GFX.cpp       ****             m -= 8 * y;
 1902              		.loc 1 182 14 view .LVU625
 1903 01b2 AEB2     		uxth	r6, r5
 1904 01b4 2DB2     		sxth	r5, r5
 1905              		.loc 1 183 15 view .LVU626
 1906 01b6 A3EBC603 		sub	r3, r3, r6, lsl #3
 182:GFX.cpp       ****             m -= 8 * y;
 1907              		.loc 1 182 14 view .LVU627
 1908 01ba 0195     		str	r5, [sp, #4]
 1909              	.LVL166:
 1910              	.L92:
 1911              		.loc 1 183 13 is_stmt 1 view .LVU628
 1912              		.loc 1 183 15 is_stmt 0 view .LVU629
 1913 01bc 9BB2     		uxth	r3, r3
 1914              	.LVL167:
 184:GFX.cpp       ****         }
 185:GFX.cpp       ****         x++;
 1915              		.loc 1 185 9 is_stmt 1 view .LVU630
 186:GFX.cpp       ****         m += 8 * x + 4;
 1916              		.loc 1 186 9 view .LVU631
 169:GFX.cpp       ****     {
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 54


 1917              		.loc 1 169 14 is_stmt 0 view .LVU632
 1918 01be 08F10108 		add	r8, r8, #1
 1919              	.LVL168:
 169:GFX.cpp       ****     {
 1920              		.loc 1 169 14 view .LVU633
 1921 01c2 019E     		ldr	r6, [sp, #4]
 1922 01c4 013C     		subs	r4, r4, #1
 1923              		.loc 1 186 11 view .LVU634
 1924 01c6 03EBCC03 		add	r3, r3, ip, lsl #3
 169:GFX.cpp       ****     {
 1925              		.loc 1 169 14 view .LVU635
 1926 01ca 0FFA88F5 		sxth	r5, r8
 1927              		.loc 1 186 11 view .LVU636
 1928 01ce 0C33     		adds	r3, r3, #12
 169:GFX.cpp       ****     {
 1929              		.loc 1 169 14 view .LVU637
 1930 01d0 A4B2     		uxth	r4, r4
 1931 01d2 B542     		cmp	r5, r6
 1932              		.loc 1 186 11 view .LVU638
 1933 01d4 1BB2     		sxth	r3, r3
 1934 01d6 0293     		str	r3, [sp, #8]
 1935              	.LVL169:
 169:GFX.cpp       ****     {
 1936              		.loc 1 169 5 is_stmt 1 view .LVU639
 169:GFX.cpp       ****     {
 1937              		.loc 1 169 14 view .LVU640
 1938 01d8 10DC     		bgt	.L68
 1939              	.LVL170:
 1940              	.L83:
 171:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1941              		.loc 1 171 9 view .LVU641
 1942 01da 1FFA88FC 		uxth	ip, r8
 171:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1943              		.loc 1 171 17 is_stmt 0 view .LVU642
 1944 01de BDF80450 		ldrh	r5, [sp, #4]
 1945 01e2 0CEB0107 		add	r7, ip, r1
 1946 01e6 AE18     		adds	r6, r5, r2
 1947 01e8 BFB2     		uxth	r7, r7
 1948 01ea B6B2     		uxth	r6, r6
 1949              	.LVL171:
 1950              	.LBB300:
 1951              	.LBI242:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1952              		.loc 2 215 17 is_stmt 1 view .LVU643
 1953              	.LBB248:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1954              		.loc 2 216 9 view .LVU644
 1955 01ec 7745     		cmp	r7, lr
 1956 01ee FFF423AF 		bcc	.L93
 1957              	.LVL172:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1958              		.loc 2 216 9 is_stmt 0 view .LVU645
 1959              	.LBE248:
 1960              	.LBE300:
 172:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
 1961              		.loc 1 172 9 is_stmt 1 view .LVU646
 172:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 55


 1962              		.loc 1 172 17 is_stmt 0 view .LVU647
 1963 01f2 A2EB0509 		sub	r9, r2, r5
 1964 01f6 1FFA89F9 		uxth	r9, r9
 1965              	.LVL173:
 1966              	.LBB301:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1967              		.loc 2 215 17 is_stmt 1 view .LVU648
 1968              	.LBB257:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1969              		.loc 2 216 9 view .LVU649
 1970 01fa 4DE7     		b	.L90
 1971              	.LVL174:
 1972              	.L68:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1973              		.loc 2 216 9 is_stmt 0 view .LVU650
 1974              	.LBE257:
 1975              	.LBE301:
 187:GFX.cpp       ****     }
 188:GFX.cpp       **** }
 1976              		.loc 1 188 1 view .LVU651
 1977 01fc 07B0     		add	sp, sp, #28
 1978              		.cfi_def_cfa_offset 36
 1979              		@ sp needed
 1980 01fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1981              		.cfi_endproc
 1982              	.LFE2634:
 1984 0202 00BF     		.section	.text._ZN4cGFX14drawFillCircleEttt6cColor,"ax",%progbits
 1985              		.align	1
 1986              		.p2align 2,,3
 1987              		.global	_ZN4cGFX14drawFillCircleEttt6cColor
 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1991              		.fpu fpv5-d16
 1993              	_ZN4cGFX14drawFillCircleEttt6cColor:
 1994              	.LVL175:
 1995              	.LFB2635:
 189:GFX.cpp       **** 
 190:GFX.cpp       **** //-----------------------------------------------------------------------------------
 191:GFX.cpp       **** // Dessin d'un cercle plein
 192:GFX.cpp       **** void cGFX::drawFillCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color)
 193:GFX.cpp       **** {
 1996              		.loc 1 193 1 is_stmt 1 view -0
 1997              		.cfi_startproc
 1998              		@ args = 4, pretend = 0, frame = 48
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000              		.loc 1 193 1 is_stmt 0 view .LVU653
 2001 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2002              		.cfi_def_cfa_offset 36
 2003              		.cfi_offset 4, -36
 2004              		.cfi_offset 5, -32
 2005              		.cfi_offset 6, -28
 2006              		.cfi_offset 7, -24
 2007              		.cfi_offset 8, -20
 2008              		.cfi_offset 9, -16
 2009              		.cfi_offset 10, -12
 2010              		.cfi_offset 11, -8
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 56


 2011              		.cfi_offset 14, -4
 2012 0004 8DB0     		sub	sp, sp, #52
 2013              		.cfi_def_cfa_offset 88
 2014 0006 B0F85C50 		ldrh	r5, [r0, #92]
 2015 000a 8B46     		mov	fp, r1
 194:GFX.cpp       ****     int x = 0;
 2016              		.loc 1 194 9 view .LVU654
 2017 000c 4FF00008 		mov	r8, #0
 193:GFX.cpp       ****     int x = 0;
 2018              		.loc 1 193 1 view .LVU655
 2019 0010 0492     		str	r2, [sp, #16]
 2020 0012 B0F85E20 		ldrh	r2, [r0, #94]
 2021              	.LVL176:
 193:GFX.cpp       ****     int x = 0;
 2022              		.loc 1 193 1 view .LVU656
 2023 0016 406D     		ldr	r0, [r0, #84]
 2024              	.LVL177:
 193:GFX.cpp       ****     int x = 0;
 2025              		.loc 1 193 1 view .LVU657
 2026 0018 0392     		str	r2, [sp, #12]
 2027              	.LBB325:
 2028              	.LBB326:
 2029              	.LBB327:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2030              		.loc 2 209 27 view .LVU658
 2031 001a 013A     		subs	r2, r2, #1
 2032 001c 0290     		str	r0, [sp, #8]
 2033 001e 90B2     		uxth	r0, r2
 2034 0020 9DF85840 		ldrb	r4, [sp, #88]	@ zero_extendqisi2
 2035              	.LVL178:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2036              		.loc 2 209 27 view .LVU659
 2037              	.LBE327:
 2038              	.LBE326:
 2039              	.LBE325:
 195:GFX.cpp       ****     int y = radius;
 196:GFX.cpp       ****     int m = 5 - 4 * radius;
 2040              		.loc 1 196 19 view .LVU660
 2041 0024 9A00     		lsls	r2, r3, #2
 2042 0026 9DF859E0 		ldrb	lr, [sp, #89]	@ zero_extendqisi2
 2043              	.LVL179:
 2044              		.loc 1 196 19 view .LVU661
 2045 002a 9DF85AC0 		ldrb	ip, [sp, #90]	@ zero_extendqisi2
 2046              	.LVL180:
 194:GFX.cpp       ****     int y = radius;
 2047              		.loc 1 194 5 is_stmt 1 view .LVU662
 195:GFX.cpp       ****     int y = radius;
 2048              		.loc 1 195 5 view .LVU663
 2049              		.loc 1 196 5 view .LVU664
 197:GFX.cpp       **** 
 198:GFX.cpp       ****     while (x <= y)
 2050              		.loc 1 198 5 view .LVU665
 2051              		.loc 1 198 14 view .LVU666
 196:GFX.cpp       **** 
 2052              		.loc 1 196 9 is_stmt 0 view .LVU667
 2053 002e C2F10502 		rsb	r2, r2, #5
 193:GFX.cpp       ****     int x = 0;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 57


 2054              		.loc 1 193 1 view .LVU668
 2055 0032 0A91     		str	r1, [sp, #40]
 2056 0034 0695     		str	r5, [sp, #24]
 196:GFX.cpp       **** 
 2057              		.loc 1 196 9 view .LVU669
 2058 0036 0192     		str	r2, [sp, #4]
 2059              	.LVL181:
 2060              	.LBB400:
 2061              	.LBB335:
 2062              	.LBB328:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2063              		.loc 2 208 26 view .LVU670
 2064 0038 6A1E     		subs	r2, r5, #1
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2065              		.loc 2 209 27 view .LVU671
 2066 003a 0990     		str	r0, [sp, #36]
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2067              		.loc 2 208 26 view .LVU672
 2068 003c 92B2     		uxth	r2, r2
 2069              	.LBE328:
 2070              	.LBE335:
 2071              	.LBB336:
 199:GFX.cpp       ****     {
 200:GFX.cpp       ****         RGB *pFrame = getPtr(centerX - y, centerY - x);
 201:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2072              		.loc 1 201 23 view .LVU673
 2073 003e 0591     		str	r1, [sp, #20]
 2074              	.LBE336:
 2075              	.LBB341:
 2076              	.LBB329:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2077              		.loc 2 208 26 view .LVU674
 2078 0040 0892     		str	r2, [sp, #32]
 2079              	.LBE329:
 2080              	.LBE341:
 2081              	.LBB342:
 2082              	.LBB343:
 210:Frame.h       ****     } 
 2083              		.loc 2 210 30 view .LVU675
 2084 0042 05FB00F2 		mul	r2, r5, r0
 2085 0046 0B92     		str	r2, [sp, #44]
 2086              	.LVL182:
 2087              	.L109:
 210:Frame.h       ****     } 
 2088              		.loc 2 210 30 view .LVU676
 2089              	.LBE343:
 2090              	.LBE342:
 200:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2091              		.loc 1 200 9 is_stmt 1 view .LVU677
 2092              	.LBB347:
 2093              		.loc 1 201 18 is_stmt 0 view .LVU678
 2094 0048 0A9A     		ldr	r2, [sp, #40]
 2095              	.LBE347:
 200:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2096              		.loc 1 200 29 view .LVU679
 2097 004a 9DB2     		uxth	r5, r3
 2098              	.LBB348:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 58


 2099              	.LBB330:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2100              		.loc 2 208 26 view .LVU680
 2101 004c 069E     		ldr	r6, [sp, #24]
 2102 004e 1FFA88FA 		uxth	r10, r8
 2103              	.LBE330:
 2104              	.LBE348:
 200:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2105              		.loc 1 200 29 view .LVU681
 2106 0052 511B     		subs	r1, r2, r5
 2107              	.LBB349:
 2108              		.loc 1 201 18 view .LVU682
 2109 0054 D01A     		subs	r0, r2, r3
 2110              		.loc 1 201 50 view .LVU683
 2111 0056 02EB0309 		add	r9, r2, r3
 2112              	.LBE349:
 2113              	.LBB350:
 2114              	.LBB331:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2115              		.loc 2 208 26 view .LVU684
 2116 005a 089A     		ldr	r2, [sp, #32]
 2117              	.LBE331:
 2118              	.LBE350:
 200:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2119              		.loc 1 200 29 view .LVU685
 2120 005c 89B2     		uxth	r1, r1
 2121 005e 0795     		str	r5, [sp, #28]
 2122              	.LBB351:
 2123              	.LBB332:
 210:Frame.h       ****     } 
 2124              		.loc 2 210 29 view .LVU686
 2125 0060 039F     		ldr	r7, [sp, #12]
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2126              		.loc 2 208 26 view .LVU687
 2127 0062 B142     		cmp	r1, r6
 2128 0064 28BF     		it	cs
 2129 0066 1146     		movcs	r1, r2
 2130 0068 049A     		ldr	r2, [sp, #16]
 2131 006a A2EB0A05 		sub	r5, r2, r10
 210:Frame.h       ****     } 
 2132              		.loc 2 210 29 view .LVU688
 2133 006e 099A     		ldr	r2, [sp, #36]
 2134 0070 ADB2     		uxth	r5, r5
 2135              	.LVL183:
 210:Frame.h       ****     } 
 2136              		.loc 2 210 29 view .LVU689
 2137              	.LBE332:
 2138              	.LBI326:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2139              		.loc 2 207 17 is_stmt 1 view .LVU690
 2140              	.LBB333:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2141              		.loc 2 208 9 view .LVU691
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2142              		.loc 2 209 9 view .LVU692
 210:Frame.h       ****     } 
 2143              		.loc 2 210 29 is_stmt 0 view .LVU693
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 59


 2144 0072 BD42     		cmp	r5, r7
 2145 0074 38BF     		it	cc
 2146 0076 2A46     		movcc	r2, r5
 2147              	.LVL184:
 210:Frame.h       ****     } 
 2148              		.loc 2 210 9 is_stmt 1 view .LVU694
 210:Frame.h       ****     } 
 2149              		.loc 2 210 39 is_stmt 0 view .LVU695
 2150 0078 029D     		ldr	r5, [sp, #8]
 2151              	.LBE333:
 2152              	.LBE351:
 2153              	.LBB352:
 2154              		.loc 1 201 39 view .LVU696
 2155 007a 4845     		cmp	r0, r9
 2156              	.LBE352:
 2157              	.LBB353:
 2158              	.LBB334:
 210:Frame.h       ****     } 
 2159              		.loc 2 210 27 view .LVU697
 2160 007c 02FB0612 		mla	r2, r2, r6, r1
 210:Frame.h       ****     } 
 2161              		.loc 2 210 39 view .LVU698
 2162 0080 05EBC202 		add	r2, r5, r2, lsl #3
 2163              	.LVL185:
 210:Frame.h       ****     } 
 2164              		.loc 2 210 39 view .LVU699
 2165              	.LBE334:
 2166              	.LBE353:
 2167              		.loc 1 201 9 is_stmt 1 view .LVU700
 2168              	.LBB354:
 2169              		.loc 1 201 39 view .LVU701
 2170 0084 29DC     		bgt	.L97
 2171 0086 09F10107 		add	r7, r9, #1
 2172 008a 3F1A     		subs	r7, r7, r0
 2173 008c 02EBC707 		add	r7, r2, r7, lsl #3
 2174              	.LVL186:
 2175              	.L99:
 202:GFX.cpp       ****             pFrame++->set(Color);
 2176              		.loc 1 202 13 discriminator 2 view .LVU702
 2177              	.LBB337:
 2178              	.LBI337:
 130:Frame.h       ****         R = Color.m_R;
 2179              		.loc 2 130 17 discriminator 2 view .LVU703
 2180              	.LBB338:
 131:Frame.h       ****         G = Color.m_G;
 2181              		.loc 2 131 9 discriminator 2 view .LVU704
 131:Frame.h       ****         G = Color.m_G;
 2182              		.loc 2 131 11 is_stmt 0 discriminator 2 view .LVU705
 2183 0090 02F8084B 		strb	r4, [r2], #8
 2184              	.LVL187:
 132:Frame.h       ****         B = Color.m_B;
 2185              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU706
 134:Frame.h       ****     }
 2186              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU707
 2187 0094 0126     		movs	r6, #1
 2188 0096 52F8045C 		ldr	r5, [r2, #-4]
 2189              	.LBE338:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 60


 2190              	.LBE337:
 201:GFX.cpp       ****             pFrame++->set(Color);
 2191              		.loc 1 201 39 discriminator 2 view .LVU708
 2192 009a BA42     		cmp	r2, r7
 2193              	.LBB340:
 2194              	.LBB339:
 132:Frame.h       ****         B = Color.m_B;
 2195              		.loc 2 132 11 discriminator 2 view .LVU709
 2196 009c 02F807EC 		strb	lr, [r2, #-7]
 133:Frame.h       ****         *m_pChange = true;
 2197              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU710
 133:Frame.h       ****         *m_pChange = true;
 2198              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU711
 2199 00a0 02F806CC 		strb	ip, [r2, #-6]
 134:Frame.h       ****     }
 2200              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU712
 134:Frame.h       ****     }
 2201              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU713
 2202 00a4 2E70     		strb	r6, [r5]
 2203              	.LVL188:
 134:Frame.h       ****     }
 2204              		.loc 2 134 20 discriminator 2 view .LVU714
 2205              	.LBE339:
 2206              	.LBE340:
 201:GFX.cpp       ****             pFrame++->set(Color);
 2207              		.loc 1 201 9 is_stmt 1 discriminator 2 view .LVU715
 201:GFX.cpp       ****             pFrame++->set(Color);
 2208              		.loc 1 201 39 discriminator 2 view .LVU716
 2209 00a6 F3D1     		bne	.L99
 2210              	.LBE354:
 203:GFX.cpp       **** 
 204:GFX.cpp       ****         pFrame = getPtr(centerX - y, centerY + x);
 2211              		.loc 1 204 9 view .LVU717
 2212 00a8 049A     		ldr	r2, [sp, #16]
 2213              	.LVL189:
 2214              		.loc 1 204 9 is_stmt 0 view .LVU718
 2215 00aa 9244     		add	r10, r10, r2
 2216              	.LBB355:
 2217              	.LBB344:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2218              		.loc 2 209 9 view .LVU719
 2219 00ac 039A     		ldr	r2, [sp, #12]
 2220 00ae 1FFA8AFA 		uxth	r10, r10
 2221              	.LVL190:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2222              		.loc 2 209 9 view .LVU720
 2223              	.LBE344:
 2224              	.LBI342:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2225              		.loc 2 207 17 is_stmt 1 view .LVU721
 2226              	.LBB345:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2227              		.loc 2 208 9 view .LVU722
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2228              		.loc 2 209 9 view .LVU723
 2229 00b2 9245     		cmp	r10, r2
 2230 00b4 26D3     		bcc	.L129
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 61


 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2231              		.loc 2 209 25 view .LVU724
 2232              	.LVL191:
 210:Frame.h       ****     } 
 2233              		.loc 2 210 9 view .LVU725
 210:Frame.h       ****     } 
 2234              		.loc 2 210 27 is_stmt 0 view .LVU726
 2235 00b6 0B9A     		ldr	r2, [sp, #44]
 2236 00b8 1144     		add	r1, r1, r2
 210:Frame.h       ****     } 
 2237              		.loc 2 210 39 view .LVU727
 2238 00ba 029A     		ldr	r2, [sp, #8]
 2239 00bc 02EBC101 		add	r1, r2, r1, lsl #3
 2240              	.LVL192:
 210:Frame.h       ****     } 
 2241              		.loc 2 210 39 view .LVU728
 2242              	.LBE345:
 2243              	.LBE355:
 205:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 2244              		.loc 1 205 9 is_stmt 1 view .LVU729
 2245              	.LBB356:
 2246              		.loc 1 205 39 view .LVU730
 2247              	.L102:
 206:GFX.cpp       ****             pFrame++->set(Color);
 2248              		.loc 1 206 13 discriminator 2 view .LVU731
 2249              	.LBB357:
 2250              	.LBI357:
 130:Frame.h       ****         R = Color.m_R;
 2251              		.loc 2 130 17 discriminator 2 view .LVU732
 2252              	.LBB358:
 131:Frame.h       ****         G = Color.m_G;
 2253              		.loc 2 131 9 discriminator 2 view .LVU733
 2254              	.LBE358:
 2255              	.LBE357:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2256              		.loc 1 205 9 is_stmt 0 discriminator 2 view .LVU734
 2257 00c0 0130     		adds	r0, r0, #1
 2258              	.LVL193:
 2259              	.LBB361:
 2260              	.LBB359:
 131:Frame.h       ****         G = Color.m_G;
 2261              		.loc 2 131 11 discriminator 2 view .LVU735
 2262 00c2 01F8084B 		strb	r4, [r1], #8
 2263              	.LVL194:
 132:Frame.h       ****         B = Color.m_B;
 2264              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU736
 134:Frame.h       ****     }
 2265              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU737
 2266 00c6 0125     		movs	r5, #1
 2267 00c8 51F8042C 		ldr	r2, [r1, #-4]
 2268              	.LBE359:
 2269              	.LBE361:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2270              		.loc 1 205 39 discriminator 2 view .LVU738
 2271 00cc 4845     		cmp	r0, r9
 2272              	.LBB362:
 2273              	.LBB360:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 62


 132:Frame.h       ****         B = Color.m_B;
 2274              		.loc 2 132 11 discriminator 2 view .LVU739
 2275 00ce 01F807EC 		strb	lr, [r1, #-7]
 133:Frame.h       ****         *m_pChange = true;
 2276              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU740
 133:Frame.h       ****         *m_pChange = true;
 2277              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU741
 2278 00d2 01F806CC 		strb	ip, [r1, #-6]
 134:Frame.h       ****     }
 2279              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU742
 134:Frame.h       ****     }
 2280              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU743
 2281 00d6 1570     		strb	r5, [r2]
 2282              	.LVL195:
 134:Frame.h       ****     }
 2283              		.loc 2 134 20 discriminator 2 view .LVU744
 2284              	.LBE360:
 2285              	.LBE362:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2286              		.loc 1 205 9 is_stmt 1 discriminator 2 view .LVU745
 205:GFX.cpp       ****             pFrame++->set(Color);
 2287              		.loc 1 205 39 discriminator 2 view .LVU746
 2288 00d8 F2DD     		ble	.L102
 2289              	.LVL196:
 2290              	.L97:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2291              		.loc 1 205 39 is_stmt 0 discriminator 2 view .LVU747
 2292              	.LBE356:
 207:GFX.cpp       **** 
 208:GFX.cpp       ****         if (m > 0)
 2293              		.loc 1 208 9 is_stmt 1 view .LVU748
 2294              	.LBB363:
 2295 00da 019A     		ldr	r2, [sp, #4]
 2296 00dc 002A     		cmp	r2, #0
 2297 00de 18DC     		bgt	.L130
 2298              	.L101:
 2299              		.loc 1 208 9 is_stmt 0 view .LVU749
 2300              	.LBE363:
 209:GFX.cpp       ****         {
 210:GFX.cpp       ****             pFrame = getPtr(centerX - x, centerY - y);
 211:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 212:GFX.cpp       ****                 pFrame++->set(Color);
 213:GFX.cpp       **** 
 214:GFX.cpp       ****             pFrame = getPtr(centerX - x, centerY + y);
 215:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 216:GFX.cpp       ****                 pFrame++->set(Color);
 217:GFX.cpp       **** 
 218:GFX.cpp       ****             y--;
 219:GFX.cpp       ****             m -= 8 * y;
 220:GFX.cpp       ****         }
 221:GFX.cpp       **** 
 222:GFX.cpp       ****         x++;
 2301              		.loc 1 222 9 is_stmt 1 view .LVU750
 2302              	.LBE400:
 198:GFX.cpp       ****     {
 2303              		.loc 1 198 14 is_stmt 0 view .LVU751
 2304 00e0 059A     		ldr	r2, [sp, #20]
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 63


 2305              	.LBB401:
 2306              		.loc 1 222 10 view .LVU752
 2307 00e2 08F10108 		add	r8, r8, #1
 2308              	.LVL197:
 223:GFX.cpp       ****         m += 8 * x + 4;
 2309              		.loc 1 223 9 is_stmt 1 view .LVU753
 2310              	.LBE401:
 198:GFX.cpp       ****     {
 2311              		.loc 1 198 14 is_stmt 0 view .LVU754
 2312 00e6 0BF1010B 		add	fp, fp, #1
 2313 00ea 013A     		subs	r2, r2, #1
 2314 00ec 4345     		cmp	r3, r8
 2315 00ee 0592     		str	r2, [sp, #20]
 2316              	.LBB402:
 2317              		.loc 1 223 11 view .LVU755
 2318 00f0 019A     		ldr	r2, [sp, #4]
 2319 00f2 02EBC802 		add	r2, r2, r8, lsl #3
 2320 00f6 02F10402 		add	r2, r2, #4
 2321 00fa 0192     		str	r2, [sp, #4]
 2322              	.LVL198:
 2323              		.loc 1 223 11 view .LVU756
 2324              	.LBE402:
 198:GFX.cpp       ****     {
 2325              		.loc 1 198 5 is_stmt 1 view .LVU757
 198:GFX.cpp       ****     {
 2326              		.loc 1 198 14 view .LVU758
 2327 00fc A4DA     		bge	.L109
 224:GFX.cpp       ****     }
 225:GFX.cpp       **** }
 2328              		.loc 1 225 1 is_stmt 0 view .LVU759
 2329 00fe 0DB0     		add	sp, sp, #52
 2330              		.cfi_remember_state
 2331              		.cfi_def_cfa_offset 36
 2332              		@ sp needed
 2333 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2334              	.LVL199:
 2335              	.L129:
 2336              		.cfi_restore_state
 2337              	.LBB403:
 2338              	.LBB397:
 2339              	.LBB346:
 210:Frame.h       ****     } 
 2340              		.loc 2 210 9 is_stmt 1 view .LVU760
 210:Frame.h       ****     } 
 2341              		.loc 2 210 27 is_stmt 0 view .LVU761
 2342 0104 069A     		ldr	r2, [sp, #24]
 2343 0106 02FB0A11 		mla	r1, r2, r10, r1
 210:Frame.h       ****     } 
 2344              		.loc 2 210 39 view .LVU762
 2345 010a 029A     		ldr	r2, [sp, #8]
 2346 010c 02EBC101 		add	r1, r2, r1, lsl #3
 2347              	.LVL200:
 210:Frame.h       ****     } 
 2348              		.loc 2 210 39 view .LVU763
 2349              	.LBE346:
 2350              	.LBE397:
 205:GFX.cpp       ****             pFrame++->set(Color);
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 64


 2351              		.loc 1 205 9 is_stmt 1 view .LVU764
 2352              	.LBB398:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2353              		.loc 1 205 39 view .LVU765
 2354 0110 D6E7     		b	.L102
 2355              	.LVL201:
 2356              	.L130:
 205:GFX.cpp       ****             pFrame++->set(Color);
 2357              		.loc 1 205 39 is_stmt 0 view .LVU766
 2358              	.LBE398:
 2359              	.LBB399:
 2360              	.LBB364:
 210:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2361              		.loc 1 210 13 is_stmt 1 view .LVU767
 210:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2362              		.loc 1 210 28 is_stmt 0 view .LVU768
 2363 0112 0799     		ldr	r1, [sp, #28]
 2364 0114 049A     		ldr	r2, [sp, #16]
 2365              	.LBB365:
 2366              	.LBB366:
 210:Frame.h       ****     } 
 2367              		.loc 2 210 29 view .LVU769
 2368 0116 0398     		ldr	r0, [sp, #12]
 2369              	.LBE366:
 2370              	.LBE365:
 210:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2371              		.loc 1 210 28 view .LVU770
 2372 0118 521A     		subs	r2, r2, r1
 2373              	.LBB371:
 2374              	.LBB367:
 210:Frame.h       ****     } 
 2375              		.loc 2 210 29 view .LVU771
 2376 011a 0999     		ldr	r1, [sp, #36]
 2377 011c 059E     		ldr	r6, [sp, #20]
 2378              	.LBE367:
 2379              	.LBE371:
 210:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2380              		.loc 1 210 28 view .LVU772
 2381 011e 92B2     		uxth	r2, r2
 2382              	.LVL202:
 2383              	.LBB372:
 2384              	.LBI365:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2385              		.loc 2 207 17 is_stmt 1 view .LVU773
 2386              	.LBB368:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2387              		.loc 2 208 9 view .LVU774
 2388              	.LBE368:
 2389              	.LBE372:
 2390              	.LBB373:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2391              		.loc 1 211 22 is_stmt 0 view .LVU775
 2392 0120 3546     		mov	r5, r6
 2393              	.LBE373:
 2394              	.LBB378:
 2395              	.LBB369:
 210:Frame.h       ****     } 
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 65


 2396              		.loc 2 210 29 view .LVU776
 2397 0122 8242     		cmp	r2, r0
 2398 0124 38BF     		it	cc
 2399 0126 1146     		movcc	r1, r2
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2400              		.loc 2 208 26 view .LVU777
 2401 0128 089A     		ldr	r2, [sp, #32]
 2402              	.LVL203:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2403              		.loc 2 208 26 view .LVU778
 2404 012a B0B2     		uxth	r0, r6
 2405 012c 1746     		mov	r7, r2
 2406 012e 069A     		ldr	r2, [sp, #24]
 2407 0130 8242     		cmp	r2, r0
 2408 0132 98BF     		it	ls
 2409 0134 3846     		movls	r0, r7
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2410              		.loc 2 209 9 is_stmt 1 view .LVU779
 2411              	.LVL204:
 210:Frame.h       ****     } 
 2412              		.loc 2 210 9 view .LVU780
 2413              	.LBE369:
 2414              	.LBE378:
 2415              	.LBB379:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2416              		.loc 1 211 43 is_stmt 0 view .LVU781
 2417 0136 5E45     		cmp	r6, fp
 2418              	.LBE379:
 2419              	.LBB380:
 2420              	.LBB370:
 210:Frame.h       ****     } 
 2421              		.loc 2 210 27 view .LVU782
 2422 0138 02FB0101 		mla	r1, r2, r1, r0
 210:Frame.h       ****     } 
 2423              		.loc 2 210 39 view .LVU783
 2424 013c 029A     		ldr	r2, [sp, #8]
 2425 013e 02EBC101 		add	r1, r2, r1, lsl #3
 2426              	.LVL205:
 210:Frame.h       ****     } 
 2427              		.loc 2 210 39 view .LVU784
 2428              	.LBE370:
 2429              	.LBE380:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2430              		.loc 1 211 13 is_stmt 1 view .LVU785
 2431              	.LBB381:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2432              		.loc 1 211 43 view .LVU786
 2433 0142 27DC     		bgt	.L105
 2434 0144 01EB0817 		add	r7, r1, r8, lsl #4
 2435 0148 0837     		adds	r7, r7, #8
 2436              	.LVL206:
 2437              	.L107:
 212:GFX.cpp       **** 
 2438              		.loc 1 212 17 discriminator 2 view .LVU787
 2439              	.LBB374:
 2440              	.LBI374:
 130:Frame.h       ****         R = Color.m_R;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 66


 2441              		.loc 2 130 17 discriminator 2 view .LVU788
 2442              	.LBB375:
 131:Frame.h       ****         G = Color.m_G;
 2443              		.loc 2 131 9 discriminator 2 view .LVU789
 131:Frame.h       ****         G = Color.m_G;
 2444              		.loc 2 131 11 is_stmt 0 discriminator 2 view .LVU790
 2445 014a 01F8084B 		strb	r4, [r1], #8
 2446              	.LVL207:
 132:Frame.h       ****         B = Color.m_B;
 2447              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU791
 134:Frame.h       ****     }
 2448              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU792
 2449 014e 0126     		movs	r6, #1
 2450 0150 51F8042C 		ldr	r2, [r1, #-4]
 2451              	.LBE375:
 2452              	.LBE374:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2453              		.loc 1 211 43 discriminator 2 view .LVU793
 2454 0154 B942     		cmp	r1, r7
 2455              	.LBB377:
 2456              	.LBB376:
 132:Frame.h       ****         B = Color.m_B;
 2457              		.loc 2 132 11 discriminator 2 view .LVU794
 2458 0156 01F807EC 		strb	lr, [r1, #-7]
 133:Frame.h       ****         *m_pChange = true;
 2459              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU795
 133:Frame.h       ****         *m_pChange = true;
 2460              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU796
 2461 015a 01F806CC 		strb	ip, [r1, #-6]
 134:Frame.h       ****     }
 2462              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU797
 134:Frame.h       ****     }
 2463              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU798
 2464 015e 1670     		strb	r6, [r2]
 2465              	.LVL208:
 134:Frame.h       ****     }
 2466              		.loc 2 134 20 discriminator 2 view .LVU799
 2467              	.LBE376:
 2468              	.LBE377:
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2469              		.loc 1 211 13 is_stmt 1 discriminator 2 view .LVU800
 211:GFX.cpp       ****                 pFrame++->set(Color);
 2470              		.loc 1 211 43 discriminator 2 view .LVU801
 2471 0160 F3D1     		bne	.L107
 2472              	.LBE381:
 214:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2473              		.loc 1 214 13 view .LVU802
 214:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2474              		.loc 1 214 28 is_stmt 0 view .LVU803
 2475 0162 0499     		ldr	r1, [sp, #16]
 2476              	.LVL209:
 214:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2477              		.loc 1 214 28 view .LVU804
 2478 0164 079A     		ldr	r2, [sp, #28]
 2479 0166 0A44     		add	r2, r2, r1
 2480              	.LBB382:
 2481              	.LBB383:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 67


 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2482              		.loc 2 209 9 view .LVU805
 2483 0168 0399     		ldr	r1, [sp, #12]
 2484              	.LBE383:
 2485              	.LBE382:
 214:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 2486              		.loc 1 214 28 view .LVU806
 2487 016a 92B2     		uxth	r2, r2
 2488              	.LVL210:
 2489              	.LBB386:
 2490              	.LBI382:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2491              		.loc 2 207 17 is_stmt 1 view .LVU807
 2492              	.LBB384:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2493              		.loc 2 208 9 view .LVU808
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2494              		.loc 2 209 9 view .LVU809
 2495 016c 8A42     		cmp	r2, r1
 2496 016e 17D3     		bcc	.L126
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2497              		.loc 2 209 25 view .LVU810
 2498              	.LVL211:
 210:Frame.h       ****     } 
 2499              		.loc 2 210 9 view .LVU811
 210:Frame.h       ****     } 
 2500              		.loc 2 210 27 is_stmt 0 view .LVU812
 2501 0170 0B9A     		ldr	r2, [sp, #44]
 2502 0172 1044     		add	r0, r0, r2
 210:Frame.h       ****     } 
 2503              		.loc 2 210 39 view .LVU813
 2504 0174 029A     		ldr	r2, [sp, #8]
 2505 0176 02EBC000 		add	r0, r2, r0, lsl #3
 2506              	.LVL212:
 210:Frame.h       ****     } 
 2507              		.loc 2 210 39 view .LVU814
 2508              	.LBE384:
 2509              	.LBE386:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2510              		.loc 1 215 13 is_stmt 1 view .LVU815
 2511              	.LBB387:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2512              		.loc 1 215 43 view .LVU816
 2513              	.L108:
 216:GFX.cpp       **** 
 2514              		.loc 1 216 17 discriminator 2 view .LVU817
 2515              	.LBB388:
 2516              	.LBI388:
 130:Frame.h       ****         R = Color.m_R;
 2517              		.loc 2 130 17 discriminator 2 view .LVU818
 2518              	.LBB389:
 131:Frame.h       ****         G = Color.m_G;
 2519              		.loc 2 131 9 discriminator 2 view .LVU819
 2520              	.LBE389:
 2521              	.LBE388:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2522              		.loc 1 215 13 is_stmt 0 discriminator 2 view .LVU820
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 68


 2523 017a 0135     		adds	r5, r5, #1
 2524              	.LVL213:
 2525              	.LBB392:
 2526              	.LBB390:
 131:Frame.h       ****         G = Color.m_G;
 2527              		.loc 2 131 11 discriminator 2 view .LVU821
 2528 017c 00F8084B 		strb	r4, [r0], #8
 2529              	.LVL214:
 132:Frame.h       ****         B = Color.m_B;
 2530              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU822
 134:Frame.h       ****     }
 2531              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU823
 2532 0180 0121     		movs	r1, #1
 2533 0182 50F8042C 		ldr	r2, [r0, #-4]
 2534              	.LBE390:
 2535              	.LBE392:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2536              		.loc 1 215 43 discriminator 2 view .LVU824
 2537 0186 5D45     		cmp	r5, fp
 2538              	.LBB393:
 2539              	.LBB391:
 132:Frame.h       ****         B = Color.m_B;
 2540              		.loc 2 132 11 discriminator 2 view .LVU825
 2541 0188 00F807EC 		strb	lr, [r0, #-7]
 133:Frame.h       ****         *m_pChange = true;
 2542              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU826
 133:Frame.h       ****         *m_pChange = true;
 2543              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU827
 2544 018c 00F806CC 		strb	ip, [r0, #-6]
 134:Frame.h       ****     }
 2545              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU828
 134:Frame.h       ****     }
 2546              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU829
 2547 0190 1170     		strb	r1, [r2]
 2548              	.LVL215:
 134:Frame.h       ****     }
 2549              		.loc 2 134 20 discriminator 2 view .LVU830
 2550              	.LBE391:
 2551              	.LBE393:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2552              		.loc 1 215 13 is_stmt 1 discriminator 2 view .LVU831
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2553              		.loc 1 215 43 discriminator 2 view .LVU832
 2554 0192 F2DD     		ble	.L108
 2555              	.LVL216:
 2556              	.L105:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2557              		.loc 1 215 43 is_stmt 0 discriminator 2 view .LVU833
 2558              	.LBE387:
 218:GFX.cpp       ****             m -= 8 * y;
 2559              		.loc 1 218 13 is_stmt 1 view .LVU834
 219:GFX.cpp       ****         }
 2560              		.loc 1 219 15 is_stmt 0 view .LVU835
 2561 0194 019A     		ldr	r2, [sp, #4]
 218:GFX.cpp       ****             m -= 8 * y;
 2562              		.loc 1 218 14 view .LVU836
 2563 0196 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 69


 2564              	.LVL217:
 219:GFX.cpp       ****         }
 2565              		.loc 1 219 13 is_stmt 1 view .LVU837
 219:GFX.cpp       ****         }
 2566              		.loc 1 219 15 is_stmt 0 view .LVU838
 2567 0198 A2EBC302 		sub	r2, r2, r3, lsl #3
 2568 019c 0192     		str	r2, [sp, #4]
 2569              	.LVL218:
 219:GFX.cpp       ****         }
 2570              		.loc 1 219 15 view .LVU839
 2571              	.LBE364:
 2572 019e 9FE7     		b	.L101
 2573              	.LVL219:
 2574              	.L126:
 2575              	.LBB396:
 2576              	.LBB394:
 2577              	.LBB385:
 210:Frame.h       ****     } 
 2578              		.loc 2 210 9 is_stmt 1 view .LVU840
 210:Frame.h       ****     } 
 2579              		.loc 2 210 27 is_stmt 0 view .LVU841
 2580 01a0 0699     		ldr	r1, [sp, #24]
 2581 01a2 01FB0200 		mla	r0, r1, r2, r0
 210:Frame.h       ****     } 
 2582              		.loc 2 210 39 view .LVU842
 2583 01a6 029A     		ldr	r2, [sp, #8]
 2584              	.LVL220:
 210:Frame.h       ****     } 
 2585              		.loc 2 210 39 view .LVU843
 2586 01a8 02EBC000 		add	r0, r2, r0, lsl #3
 2587              	.LVL221:
 210:Frame.h       ****     } 
 2588              		.loc 2 210 39 view .LVU844
 2589              	.LBE385:
 2590              	.LBE394:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2591              		.loc 1 215 13 is_stmt 1 view .LVU845
 2592              	.LBB395:
 215:GFX.cpp       ****                 pFrame++->set(Color);
 2593              		.loc 1 215 43 view .LVU846
 2594 01ac E5E7     		b	.L108
 2595              	.LBE395:
 2596              	.LBE396:
 2597              	.LBE399:
 2598              	.LBE403:
 2599              		.cfi_endproc
 2600              	.LFE2635:
 2602 01ae 00BF     		.section	.text._ZN4cGFX15drawR8G8B8ImageEttttPKh,"ax",%progbits
 2603              		.align	1
 2604              		.p2align 2,,3
 2605              		.global	_ZN4cGFX15drawR8G8B8ImageEttttPKh
 2606              		.syntax unified
 2607              		.thumb
 2608              		.thumb_func
 2609              		.fpu fpv5-d16
 2611              	_ZN4cGFX15drawR8G8B8ImageEttttPKh:
 2612              	.LVL222:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 70


 2613              	.LFB2636:
 226:GFX.cpp       **** 
 227:GFX.cpp       **** //-----------------------------------------------------------------------------------
 228:GFX.cpp       **** // Tracer une image 8bits par couleurs
 229:GFX.cpp       **** void cGFX::drawR8G8B8Image(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, const uint8_t *pImg){
 2614              		.loc 1 229 98 view -0
 2615              		.cfi_startproc
 2616              		@ args = 8, pretend = 0, frame = 8
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              		.loc 1 229 98 is_stmt 0 view .LVU848
 2619 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              		.cfi_def_cfa_offset 36
 2621              		.cfi_offset 4, -36
 2622              		.cfi_offset 5, -32
 2623              		.cfi_offset 6, -28
 2624              		.cfi_offset 7, -24
 2625              		.cfi_offset 8, -20
 2626              		.cfi_offset 9, -16
 2627              		.cfi_offset 10, -12
 2628              		.cfi_offset 11, -8
 2629              		.cfi_offset 14, -4
 2630 0004 83B0     		sub	sp, sp, #12
 2631              		.cfi_def_cfa_offset 48
 2632              		.loc 1 229 98 view .LVU849
 2633 0006 BDF83080 		ldrh	r8, [sp, #48]
 230:GFX.cpp       ****     RGB *pFrame;
 2634              		.loc 1 230 5 is_stmt 1 view .LVU850
 231:GFX.cpp       ****     RGB *pEndLigne;
 2635              		.loc 1 231 5 view .LVU851
 232:GFX.cpp       ****     
 233:GFX.cpp       ****     for (uint16_t PosY = y; PosY < (y+dy); PosY++){
 2636              		.loc 1 233 5 view .LVU852
 2637              	.LVL223:
 229:GFX.cpp       ****     RGB *pFrame;
 2638              		.loc 1 229 98 is_stmt 0 view .LVU853
 2639 000a 0D9E     		ldr	r6, [sp, #52]
 2640              	.LVL224:
 2641              	.LBB412:
 2642              		.loc 1 233 34 is_stmt 1 view .LVU854
 2643              		.loc 1 233 38 is_stmt 0 view .LVU855
 2644 000c 9044     		add	r8, r8, r2
 2645              		.loc 1 233 34 view .LVU856
 2646 000e 9045     		cmp	r8, r2
 2647 0010 4CDD     		ble	.L131
 2648 0012 B0F85C90 		ldrh	r9, [r0, #92]
 234:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 235:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 2649              		.loc 1 235 27 view .LVU857
 2650 0016 0B44     		add	r3, r3, r1
 2651              	.LVL225:
 2652              		.loc 1 235 27 view .LVU858
 2653 0018 B0F85EA0 		ldrh	r10, [r0, #94]
 2654 001c 476D     		ldr	r7, [r0, #84]
 2655              	.LBB413:
 2656              	.LBB414:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2657              		.loc 2 208 26 view .LVU859
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 71


 2658 001e 09F1FF30 		add	r0, r9, #-1
 2659              	.LVL226:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2660              		.loc 2 208 26 view .LVU860
 2661              	.LBE414:
 2662              	.LBE413:
 2663              		.loc 1 235 27 view .LVU861
 2664 0022 9BB2     		uxth	r3, r3
 2665              	.LBB421:
 2666              	.LBB415:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2667              		.loc 2 208 26 view .LVU862
 2668 0024 80B2     		uxth	r0, r0
 2669              	.LBE415:
 2670              	.LBE421:
 2671              	.LBB422:
 2672              	.LBB423:
 210:Frame.h       ****     } 
 2673              		.loc 2 210 26 view .LVU863
 2674 0026 4B45     		cmp	r3, r9
 2675 0028 28BF     		it	cs
 2676 002a 0346     		movcs	r3, r0
 2677              	.LBE423:
 2678              	.LBE422:
 2679              	.LBB428:
 2680              	.LBB416:
 2681 002c 4945     		cmp	r1, r9
 2682 002e 34BF     		ite	cc
 2683 0030 8B46     		movcc	fp, r1
 2684 0032 8346     		movcs	fp, r0
 2685              	.LBE416:
 2686              	.LBE428:
 2687              	.LBB429:
 2688              	.LBB424:
 2689 0034 0093     		str	r3, [sp]
 2690              	.LBE424:
 2691              	.LBE429:
 2692              	.LBB430:
 2693              	.LBB417:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2694              		.loc 2 209 27 view .LVU864
 2695 0036 0AF1FF33 		add	r3, r10, #-1
 2696 003a 9BB2     		uxth	r3, r3
 2697 003c 0193     		str	r3, [sp, #4]
 2698              	.LVL227:
 2699              	.L137:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2700              		.loc 2 209 27 view .LVU865
 2701              	.LBE417:
 2702              	.LBE430:
 234:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 2703              		.loc 1 234 9 is_stmt 1 view .LVU866
 2704              	.LBB431:
 2705              	.LBI413:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2706              		.loc 2 207 17 view .LVU867
 2707              	.LBB418:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 72


 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2708              		.loc 2 208 9 view .LVU868
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2709              		.loc 2 209 9 view .LVU869
 2710 003e 019B     		ldr	r3, [sp, #4]
 2711              	.LBE418:
 2712              	.LBE431:
 2713              	.LBB432:
 2714              	.LBB425:
 210:Frame.h       ****     } 
 2715              		.loc 2 210 27 is_stmt 0 view .LVU870
 2716 0040 0098     		ldr	r0, [sp]
 2717              	.LBE425:
 2718              	.LBE432:
 2719              	.LBB433:
 2720              	.LBB419:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2721              		.loc 2 209 9 view .LVU871
 2722 0042 5245     		cmp	r2, r10
 2723 0044 38BF     		it	cc
 2724 0046 1346     		movcc	r3, r2
 2725              	.LVL228:
 210:Frame.h       ****     } 
 2726              		.loc 2 210 9 is_stmt 1 view .LVU872
 210:Frame.h       ****     } 
 2727              		.loc 2 210 30 is_stmt 0 view .LVU873
 2728 0048 09FB03F1 		mul	r1, r9, r3
 210:Frame.h       ****     } 
 2729              		.loc 2 210 27 view .LVU874
 2730 004c 0BEB0103 		add	r3, fp, r1
 2731              	.LBE419:
 2732              	.LBE433:
 2733              	.LBB434:
 2734              	.LBB426:
 2735 0050 0144     		add	r1, r1, r0
 2736              	.LBE426:
 2737              	.LBE434:
 2738              	.LBB435:
 2739              	.LBB420:
 210:Frame.h       ****     } 
 2740              		.loc 2 210 39 view .LVU875
 2741 0052 07EBC303 		add	r3, r7, r3, lsl #3
 2742              	.LVL229:
 210:Frame.h       ****     } 
 2743              		.loc 2 210 39 view .LVU876
 2744              	.LBE420:
 2745              	.LBE435:
 2746              		.loc 1 235 9 is_stmt 1 view .LVU877
 2747              	.LBB436:
 2748              	.LBI422:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 2749              		.loc 2 207 17 view .LVU878
 2750              	.LBB427:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 2751              		.loc 2 208 9 view .LVU879
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 2752              		.loc 2 209 9 view .LVU880
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 73


 210:Frame.h       ****     } 
 2753              		.loc 2 210 9 view .LVU881
 210:Frame.h       ****     } 
 2754              		.loc 2 210 39 is_stmt 0 view .LVU882
 2755 0056 07EBC101 		add	r1, r7, r1, lsl #3
 2756              	.LVL230:
 210:Frame.h       ****     } 
 2757              		.loc 2 210 39 view .LVU883
 2758              	.LBE427:
 2759              	.LBE436:
 236:GFX.cpp       ****         while (pFrame < pEndLigne){
 2760              		.loc 1 236 9 is_stmt 1 view .LVU884
 2761              		.loc 1 236 23 view .LVU885
 2762 005a 9942     		cmp	r1, r3
 2763 005c 22D9     		bls	.L134
 2764              		.loc 1 236 23 is_stmt 0 view .LVU886
 2765 005e 481E     		subs	r0, r1, #1
 2766 0060 06F1060E 		add	lr, r6, #6
 2767 0064 F11C     		adds	r1, r6, #3
 2768              	.LVL231:
 2769              		.loc 1 236 23 view .LVU887
 2770 0066 C01A     		subs	r0, r0, r3
 2771              	.LVL232:
 2772              		.loc 1 236 23 view .LVU888
 2773 0068 0833     		adds	r3, r3, #8
 2774              	.LVL233:
 2775              		.loc 1 236 23 view .LVU889
 2776 006a C008     		lsrs	r0, r0, #3
 2777 006c 00EB4004 		add	r4, r0, r0, lsl #1
 2778 0070 A644     		add	lr, lr, r4
 2779              	.LVL234:
 2780              	.L135:
 237:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 2781              		.loc 1 237 13 is_stmt 1 view .LVU890
 2782              		.loc 1 237 65 is_stmt 0 view .LVU891
 2783 0072 11F8025C 		ldrb	r5, [r1, #-2]	@ zero_extendqisi2
 236:GFX.cpp       ****         while (pFrame < pEndLigne){
 2784              		.loc 1 236 23 view .LVU892
 2785 0076 0331     		adds	r1, r1, #3
 2786              	.LVL235:
 2787              		.loc 1 237 65 view .LVU893
 2788 0078 11F8064C 		ldrb	r4, [r1, #-6]	@ zero_extendqisi2
 2789              	.LVL236:
 236:GFX.cpp       ****         while (pFrame < pEndLigne){
 2790              		.loc 1 236 23 view .LVU894
 2791 007c 0833     		adds	r3, r3, #8
 2792              	.LVL237:
 2793              		.loc 1 237 65 view .LVU895
 2794 007e 11F804CC 		ldrb	ip, [r1, #-4]	@ zero_extendqisi2
 2795              	.LVL238:
 2796              	.LBB437:
 2797              	.LBI437:
 109:Frame.h       ****         m_R = R;
 2798              		.loc 2 109 5 is_stmt 1 view .LVU896
 2799              	.LBE437:
 2800              	.LBE412:
 110:Frame.h       ****         m_G = G;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 74


 2801              		.loc 2 110 9 view .LVU897
 111:Frame.h       ****         m_B = B;
 2802              		.loc 2 111 9 view .LVU898
 112:Frame.h       ****         m_Trans = Trans;
 2803              		.loc 2 112 9 view .LVU899
 113:Frame.h       ****     }
 2804              		.loc 2 113 9 view .LVU900
 2805              	.LBB442:
 2806              	.LBB438:
 2807              	.LBI438:
 130:Frame.h       ****         R = Color.m_R;
 2808              		.loc 2 130 17 view .LVU901
 2809              	.LBB439:
 131:Frame.h       ****         G = Color.m_G;
 2810              		.loc 2 131 9 view .LVU902
 2811              	.LBE439:
 2812              	.LBE438:
 236:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 2813              		.loc 1 236 23 is_stmt 0 view .LVU903
 2814 0082 7145     		cmp	r1, lr
 2815              	.LBB441:
 2816              	.LBB440:
 132:Frame.h       ****         B = Color.m_B;
 2817              		.loc 2 132 11 view .LVU904
 2818 0084 03F80F5C 		strb	r5, [r3, #-15]
 134:Frame.h       ****     }
 2819              		.loc 2 134 20 view .LVU905
 2820 0088 4FF00105 		mov	r5, #1
 2821              	.LVL239:
 133:Frame.h       ****         *m_pChange = true;
 2822              		.loc 2 133 11 view .LVU906
 2823 008c 03F80E4C 		strb	r4, [r3, #-14]
 134:Frame.h       ****     }
 2824              		.loc 2 134 20 view .LVU907
 2825 0090 53F80C4C 		ldr	r4, [r3, #-12]
 2826              	.LVL240:
 131:Frame.h       ****         G = Color.m_G;
 2827              		.loc 2 131 11 view .LVU908
 2828 0094 03F810CC 		strb	ip, [r3, #-16]
 132:Frame.h       ****         B = Color.m_B;
 2829              		.loc 2 132 9 is_stmt 1 view .LVU909
 133:Frame.h       ****         *m_pChange = true;
 2830              		.loc 2 133 9 view .LVU910
 134:Frame.h       ****     }
 2831              		.loc 2 134 9 view .LVU911
 134:Frame.h       ****     }
 2832              		.loc 2 134 20 is_stmt 0 view .LVU912
 2833 0098 2570     		strb	r5, [r4]
 2834              	.LVL241:
 134:Frame.h       ****     }
 2835              		.loc 2 134 20 view .LVU913
 2836              	.LBE440:
 2837              	.LBE441:
 238:GFX.cpp       ****             pImg = pImg+3;
 2838              		.loc 1 238 13 is_stmt 1 view .LVU914
 239:GFX.cpp       ****             pFrame++;
 2839              		.loc 1 239 13 view .LVU915
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 75


 236:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 2840              		.loc 1 236 9 view .LVU916
 236:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 2841              		.loc 1 236 23 view .LVU917
 2842 009a EAD1     		bne	.L135
 238:GFX.cpp       ****             pImg = pImg+3;
 2843              		.loc 1 238 18 is_stmt 0 view .LVU918
 2844 009c 2844     		add	r0, r0, r5
 2845 009e 00EB4000 		add	r0, r0, r0, lsl #1
 2846 00a2 0644     		add	r6, r6, r0
 2847              	.LVL242:
 2848              	.L134:
 233:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 2849              		.loc 1 233 5 is_stmt 1 discriminator 2 view .LVU919
 2850 00a4 0132     		adds	r2, r2, #1
 2851              	.LVL243:
 233:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 2852              		.loc 1 233 5 is_stmt 0 discriminator 2 view .LVU920
 2853 00a6 92B2     		uxth	r2, r2
 2854              	.LVL244:
 233:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 2855              		.loc 1 233 34 is_stmt 1 discriminator 2 view .LVU921
 2856 00a8 4245     		cmp	r2, r8
 2857 00aa C8DB     		blt	.L137
 2858              	.L131:
 233:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 2859              		.loc 1 233 34 is_stmt 0 discriminator 2 view .LVU922
 2860              	.LBE442:
 240:GFX.cpp       ****         }
 241:GFX.cpp       ****     }
 242:GFX.cpp       **** }
 2861              		.loc 1 242 1 view .LVU923
 2862 00ac 03B0     		add	sp, sp, #12
 2863              		.cfi_def_cfa_offset 36
 2864              		@ sp needed
 2865 00ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2866              		.loc 1 242 1 view .LVU924
 2867              		.cfi_endproc
 2868              	.LFE2636:
 2870 00b2 00BF     		.section	.text._ZN4cGFX8drawCharEcb,"ax",%progbits
 2871              		.align	1
 2872              		.p2align 2,,3
 2873              		.global	_ZN4cGFX8drawCharEcb
 2874              		.syntax unified
 2875              		.thumb
 2876              		.thumb_func
 2877              		.fpu fpv5-d16
 2879              	_ZN4cGFX8drawCharEcb:
 2880              	.LVL245:
 2881              	.LFB2637:
 243:GFX.cpp       **** // ==========================================================================
 244:GFX.cpp       **** // Dessiner du texte
 245:GFX.cpp       **** 
 246:GFX.cpp       **** //-----------------------------------------------------------------------------------
 247:GFX.cpp       **** // Dessiner le caractère c
 248:GFX.cpp       **** void cGFX::drawChar(const char c, bool Erase){
 2882              		.loc 1 248 46 is_stmt 1 view -0
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 76


 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 40
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 249:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 2886              		.loc 1 249 5 view .LVU926
 248:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 2887              		.loc 1 248 46 is_stmt 0 view .LVU927
 2888 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2889              		.cfi_def_cfa_offset 36
 2890              		.cfi_offset 4, -36
 2891              		.cfi_offset 5, -32
 2892              		.cfi_offset 6, -28
 2893              		.cfi_offset 7, -24
 2894              		.cfi_offset 8, -20
 2895              		.cfi_offset 9, -16
 2896              		.cfi_offset 10, -12
 2897              		.cfi_offset 11, -8
 2898              		.cfi_offset 14, -4
 2899              		.loc 1 249 30 view .LVU928
 2900 0004 D0F8DC40 		ldr	r4, [r0, #220]
 2901              	.LVL246:
 2902              	.LBB454:
 2903              	.LBI454:
  99:GFX.h         ****     {
 2904              		.loc 3 99 28 is_stmt 1 view .LVU929
 2905              	.LBB455:
 101:GFX.h         ****     }
 2906              		.loc 3 101 9 view .LVU930
 2907              	.LBE455:
 2908              	.LBE454:
 248:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 2909              		.loc 1 248 46 is_stmt 0 view .LVU931
 2910 0008 8BB0     		sub	sp, sp, #44
 2911              		.cfi_def_cfa_offset 80
 2912              	.LBB459:
 2913              	.LBB456:
 101:GFX.h         ****     }
 2914              		.loc 3 101 46 view .LVU932
 2915 000a D4E90035 		ldrd	r3, r5, [r4]
 101:GFX.h         ****     }
 2916              		.loc 3 101 41 view .LVU933
 2917 000e 1C89     		ldrh	r4, [r3, #8]
 2918              	.LVL247:
 101:GFX.h         ****     }
 2919              		.loc 3 101 30 view .LVU934
 2920 0010 091B     		subs	r1, r1, r4
 2921              	.LVL248:
 101:GFX.h         ****     }
 2922              		.loc 3 101 30 view .LVU935
 2923              	.LBE456:
 2924              	.LBE459:
 2925              	.LBB460:
 2926              	.LBB461:
 108:GFX.h         ****     }
 2927              		.loc 3 108 74 view .LVU936
 2928 0012 1C68     		ldr	r4, [r3]
 2929              	.LBE461:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 77


 2930              	.LBE460:
 2931              	.LBB464:
 2932              	.LBB457:
 101:GFX.h         ****     }
 2933              		.loc 3 101 46 view .LVU937
 2934 0014 05EBC106 		add	r6, r5, r1, lsl #3
 2935              	.LBE457:
 2936              	.LBE464:
 2937              	.LBB465:
 2938              	.LBB462:
 108:GFX.h         ****     }
 2939              		.loc 3 108 62 view .LVU938
 2940 0018 35F83130 		ldrh	r3, [r5, r1, lsl #3]
 108:GFX.h         ****     }
 2941              		.loc 3 108 74 view .LVU939
 2942 001c 04EB030E 		add	lr, r4, r3
 2943              	.LBE462:
 2944              	.LBE465:
 250:GFX.cpp       ****     const uint8_t *pBitmap = m_pFont->getBitmap(c);
 251:GFX.cpp       ****     uint8_t BitMap = *pBitmap++;
 2945              		.loc 1 251 30 view .LVU940
 2946 0020 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2947              	.LBB466:
 252:GFX.cpp       ****     uint8_t numBit = 0;
 253:GFX.cpp       ****     uint8_t indexX;
 254:GFX.cpp       ****     RGB * pFrame;
 255:GFX.cpp       ****     
 256:GFX.cpp       ****     for (uint8_t indexY=0; indexY < pTable->height; indexY ++){
 2948              		.loc 1 256 45 view .LVU941
 2949 0022 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 2950              	.LBE466:
 2951              	.LBB481:
 2952              	.LBB458:
 101:GFX.h         ****     }
 2953              		.loc 3 101 46 view .LVU942
 2954 0024 0996     		str	r6, [sp, #36]
 2955              	.LVL249:
 101:GFX.h         ****     }
 2956              		.loc 3 101 46 view .LVU943
 2957              	.LBE458:
 2958              	.LBE481:
 250:GFX.cpp       ****     const uint8_t *pBitmap = m_pFont->getBitmap(c);
 2959              		.loc 1 250 5 is_stmt 1 view .LVU944
 2960              	.LBB482:
 2961              	.LBI460:
 106:GFX.h         ****     {
 2962              		.loc 3 106 27 view .LVU945
 2963              	.LBB463:
 108:GFX.h         ****     }
 2964              		.loc 3 108 9 view .LVU946
 108:GFX.h         ****     }
 2965              		.loc 3 108 9 is_stmt 0 view .LVU947
 2966              	.LBE463:
 2967              	.LBE482:
 251:GFX.cpp       ****     uint8_t numBit = 0;
 2968              		.loc 1 251 5 is_stmt 1 view .LVU948
 252:GFX.cpp       ****     uint8_t indexX;
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 78


 2969              		.loc 1 252 5 view .LVU949
 253:GFX.cpp       ****     RGB * pFrame;
 2970              		.loc 1 253 5 view .LVU950
 254:GFX.cpp       ****     
 2971              		.loc 1 254 5 view .LVU951
 2972              		.loc 1 256 5 view .LVU952
 2973              	.LBB483:
 2974              		.loc 1 256 35 view .LVU953
 2975 0026 002B     		cmp	r3, #0
 2976 0028 7FD0     		beq	.L142
 257:GFX.cpp       ****         indexX = 0;
 258:GFX.cpp       ****         pFrame = getPtr(m_xCursor+pTable->xOffset, indexY+m_yCursor+pTable->yOffset);
 2977              		.loc 1 258 77 is_stmt 0 view .LVU954
 2978 002a 96F90650 		ldrsb	r5, [r6, #6]
 2979 002e 013B     		subs	r3, r3, #1
 2980 0030 B0F8DA40 		ldrh	r4, [r0, #218]
 2981 0034 0EF1010E 		add	lr, lr, #1
 2982              	.LVL250:
 2983              		.loc 1 258 77 view .LVU955
 2984 0038 B0F85C80 		ldrh	r8, [r0, #92]
 2985              	.LBE483:
 252:GFX.cpp       ****     uint8_t indexX;
 2986              		.loc 1 252 13 view .LVU956
 2987 003c 4FF0000C 		mov	ip, #0
 2988 0040 2544     		add	r5, r5, r4
 2989              	.LBB484:
 2990              		.loc 1 258 25 view .LVU957
 2991 0042 B0F8D840 		ldrh	r4, [r0, #216]
 2992 0046 B0F85E70 		ldrh	r7, [r0, #94]
 2993 004a ADB2     		uxth	r5, r5
 2994 004c 0894     		str	r4, [sp, #32]
 2995 004e 0297     		str	r7, [sp, #8]
 2996 0050 55FA83F3 		uxtab	r3, r5, r3
 2997 0054 9BB2     		uxth	r3, r3
 2998 0056 0693     		str	r3, [sp, #24]
 2999              		.loc 1 258 43 view .LVU958
 3000 0058 96F90530 		ldrsb	r3, [r6, #5]
 259:GFX.cpp       ****         while (indexX < pTable->width){
 3001              		.loc 1 259 33 view .LVU959
 3002 005c B678     		ldrb	r6, [r6, #2]	@ zero_extendqisi2
 3003              	.LVL251:
 258:GFX.cpp       ****         while (indexX < pTable->width){
 3004              		.loc 1 258 24 view .LVU960
 3005 005e 2344     		add	r3, r3, r4
 3006              	.LBB467:
 3007              	.LBB468:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3008              		.loc 2 208 26 view .LVU961
 3009 0060 08F1FF34 		add	r4, r8, #-1
 3010              	.LBE468:
 3011              	.LBE467:
 3012              		.loc 1 259 33 view .LVU962
 3013 0064 0596     		str	r6, [sp, #20]
 258:GFX.cpp       ****         while (indexX < pTable->width){
 3014              		.loc 1 258 24 view .LVU963
 3015 0066 9BB2     		uxth	r3, r3
 3016              	.LBB471:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 79


 3017              	.LBB469:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3018              		.loc 2 208 26 view .LVU964
 3019 0068 A4B2     		uxth	r4, r4
 210:Frame.h       ****     } 
 3020              		.loc 2 210 26 view .LVU965
 3021 006a 4345     		cmp	r3, r8
 3022 006c 28BF     		it	cs
 3023 006e 2346     		movcs	r3, r4
 3024 0070 0493     		str	r3, [sp, #16]
 3025 0072 731E     		subs	r3, r6, #1
 3026 0074 DBB2     		uxtb	r3, r3
 3027 0076 DB00     		lsls	r3, r3, #3
 3028 0078 0793     		str	r3, [sp, #28]
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3029              		.loc 2 209 27 view .LVU966
 3030 007a 7B1E     		subs	r3, r7, #1
 3031 007c 9BB2     		uxth	r3, r3
 3032 007e 0393     		str	r3, [sp, #12]
 3033 0080 436D     		ldr	r3, [r0, #84]
 3034 0082 0193     		str	r3, [sp, #4]
 3035              	.LVL252:
 3036              	.L151:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3037              		.loc 2 209 27 view .LVU967
 3038              	.LBE469:
 3039              	.LBE471:
 257:GFX.cpp       ****         pFrame = getPtr(m_xCursor+pTable->xOffset, indexY+m_yCursor+pTable->yOffset);
 3040              		.loc 1 257 9 is_stmt 1 view .LVU968
 258:GFX.cpp       ****         while (indexX < pTable->width){
 3041              		.loc 1 258 9 view .LVU969
 3042              	.LBB472:
 3043              	.LBI467:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 3044              		.loc 2 207 17 view .LVU970
 3045              	.LBB470:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3046              		.loc 2 208 9 view .LVU971
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3047              		.loc 2 209 9 view .LVU972
 3048 0084 DDE90243 		ldrd	r4, r3, [sp, #8]
 3049 0088 A542     		cmp	r5, r4
 3050 008a 38BF     		it	cc
 3051 008c 2B46     		movcc	r3, r5
 3052              	.LVL253:
 210:Frame.h       ****     } 
 3053              		.loc 2 210 9 view .LVU973
 210:Frame.h       ****     } 
 3054              		.loc 2 210 27 is_stmt 0 view .LVU974
 3055 008e 049C     		ldr	r4, [sp, #16]
 3056 0090 08FB0343 		mla	r3, r8, r3, r4
 3057              	.LVL254:
 210:Frame.h       ****     } 
 3058              		.loc 2 210 39 view .LVU975
 3059 0094 019C     		ldr	r4, [sp, #4]
 3060 0096 04EBC303 		add	r3, r4, r3, lsl #3
 3061              	.LVL255:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 80


 210:Frame.h       ****     } 
 3062              		.loc 2 210 39 view .LVU976
 3063              	.LBE470:
 3064              	.LBE472:
 3065              		.loc 1 259 9 is_stmt 1 view .LVU977
 3066              		.loc 1 259 23 view .LVU978
 3067 009a 059C     		ldr	r4, [sp, #20]
 3068 009c 002C     		cmp	r4, #0
 3069 009e 3DD0     		beq	.L144
 3070              		.loc 1 259 23 is_stmt 0 view .LVU979
 3071 00a0 079C     		ldr	r4, [sp, #28]
 3072 00a2 1034     		adds	r4, r4, #16
 3073 00a4 1C44     		add	r4, r4, r3
 3074 00a6 0833     		adds	r3, r3, #8
 3075              	.LVL256:
 3076              		.loc 1 259 23 view .LVU980
 3077 00a8 11E0     		b	.L149
 3078              	.LVL257:
 3079              	.L145:
 260:GFX.cpp       ****             if((BitMap&0x80) != 0){
 261:GFX.cpp       ****                 if(Erase){
 262:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 263:GFX.cpp       ****                 }else{
 264:GFX.cpp       ****                     pFrame->set(m_TextFrontColor);
 265:GFX.cpp       ****                 }
 266:GFX.cpp       ****             }
 267:GFX.cpp       ****             pFrame++;
 3080              		.loc 1 267 13 is_stmt 1 view .LVU981
 268:GFX.cpp       ****             numBit++;
 3081              		.loc 1 268 13 view .LVU982
 269:GFX.cpp       ****             if(numBit > 7){
 270:GFX.cpp       ****                 numBit = 0;
 3082              		.loc 1 270 17 view .LVU983
 271:GFX.cpp       ****                 BitMap = *pBitmap++;
 3083              		.loc 1 271 17 view .LVU984
 272:GFX.cpp       ****             }else{
 273:GFX.cpp       ****                 BitMap <<= 1 ;
 3084              		.loc 1 273 17 view .LVU985
 268:GFX.cpp       ****             if(numBit > 7){
 3085              		.loc 1 268 19 is_stmt 0 view .LVU986
 3086 00aa 0CF1010C 		add	ip, ip, #1
 3087              		.loc 1 273 24 view .LVU987
 3088 00ae 4900     		lsls	r1, r1, #1
 3089              	.LVL258:
 271:GFX.cpp       ****                 BitMap = *pBitmap++;
 3090              		.loc 1 271 34 view .LVU988
 3091 00b0 7646     		mov	r6, lr
 3092              	.LVL259:
 268:GFX.cpp       ****             if(numBit > 7){
 3093              		.loc 1 268 19 view .LVU989
 3094 00b2 5FFA8CFC 		uxtb	ip, ip
 3095              	.LVL260:
 269:GFX.cpp       ****                 numBit = 0;
 3096              		.loc 1 269 13 is_stmt 1 view .LVU990
 3097              		.loc 1 273 24 is_stmt 0 view .LVU991
 3098 00b6 C9B2     		uxtb	r1, r1
 3099              	.LVL261:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 81


 269:GFX.cpp       ****                 numBit = 0;
 3100              		.loc 1 269 13 view .LVU992
 3101 00b8 BCF1070F 		cmp	ip, #7
 3102 00bc 04D9     		bls	.L148
 271:GFX.cpp       ****             }else{
 3103              		.loc 1 271 24 view .LVU993
 3104 00be 16F8011B 		ldrb	r1, [r6], #1	@ zero_extendqisi2
 3105              	.LVL262:
 270:GFX.cpp       ****                 BitMap = *pBitmap++;
 3106              		.loc 1 270 24 view .LVU994
 3107 00c2 4FF0000C 		mov	ip, #0
 3108              	.LVL263:
 271:GFX.cpp       ****             }else{
 3109              		.loc 1 271 34 view .LVU995
 3110 00c6 B646     		mov	lr, r6
 3111              	.LVL264:
 3112              	.L148:
 274:GFX.cpp       ****             }
 275:GFX.cpp       ****             indexX++;
 3113              		.loc 1 275 13 is_stmt 1 view .LVU996
 259:GFX.cpp       ****             if((BitMap&0x80) != 0){
 3114              		.loc 1 259 9 view .LVU997
 259:GFX.cpp       ****             if((BitMap&0x80) != 0){
 3115              		.loc 1 259 23 view .LVU998
 3116 00c8 0833     		adds	r3, r3, #8
 3117              	.LVL265:
 259:GFX.cpp       ****             if((BitMap&0x80) != 0){
 3118              		.loc 1 259 23 is_stmt 0 view .LVU999
 3119 00ca A342     		cmp	r3, r4
 3120 00cc 26D0     		beq	.L144
 3121              	.LVL266:
 3122              	.L149:
 260:GFX.cpp       ****                 if(Erase){
 3123              		.loc 1 260 13 is_stmt 1 view .LVU1000
 261:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 3124              		.loc 1 261 17 view .LVU1001
 260:GFX.cpp       ****                 if(Erase){
 3125              		.loc 1 260 13 is_stmt 0 view .LVU1002
 3126 00ce 0E06     		lsls	r6, r1, #24
 3127 00d0 EBD5     		bpl	.L145
 262:GFX.cpp       ****                 }else{
 3128              		.loc 1 262 21 is_stmt 1 view .LVU1003
 3129              	.LVL267:
 264:GFX.cpp       ****                 }
 3130              		.loc 1 264 21 view .LVU1004
 3131              	.LBB473:
 3132              	.LBB474:
 134:Frame.h       ****     }
 3133              		.loc 2 134 20 is_stmt 0 view .LVU1005
 3134 00d2 4FF00109 		mov	r9, #1
 3135              	.LBE474:
 3136              	.LBE473:
 3137              	.LBB476:
 3138              	.LBB477:
 3139 00d6 4F46     		mov	r7, r9
 3140              	.LBE477:
 3141              	.LBE476:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 82


 261:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 3142              		.loc 1 261 17 view .LVU1006
 3143 00d8 82B1     		cbz	r2, .L146
 3144 00da 90F8E4B0 		ldrb	fp, [r0, #228]	@ zero_extendqisi2
 3145              	.LVL268:
 261:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 3146              		.loc 1 261 17 view .LVU1007
 3147 00de 90F8E5A0 		ldrb	r10, [r0, #229]	@ zero_extendqisi2
 3148              	.LVL269:
 261:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 3149              		.loc 1 261 17 view .LVU1008
 3150 00e2 90F8E670 		ldrb	r7, [r0, #230]	@ zero_extendqisi2
 3151              	.LVL270:
 3152              	.LBB479:
 3153              	.LBI473:
 130:Frame.h       ****         R = Color.m_R;
 3154              		.loc 2 130 17 is_stmt 1 view .LVU1009
 3155              	.LBB475:
 131:Frame.h       ****         G = Color.m_G;
 3156              		.loc 2 131 9 view .LVU1010
 134:Frame.h       ****     }
 3157              		.loc 2 134 20 is_stmt 0 view .LVU1011
 3158 00e6 53F8046C 		ldr	r6, [r3, #-4]
 131:Frame.h       ****         G = Color.m_G;
 3159              		.loc 2 131 11 view .LVU1012
 3160 00ea 03F808BC 		strb	fp, [r3, #-8]
 132:Frame.h       ****         B = Color.m_B;
 3161              		.loc 2 132 9 is_stmt 1 view .LVU1013
 132:Frame.h       ****         B = Color.m_B;
 3162              		.loc 2 132 11 is_stmt 0 view .LVU1014
 3163 00ee 03F807AC 		strb	r10, [r3, #-7]
 133:Frame.h       ****         *m_pChange = true;
 3164              		.loc 2 133 9 is_stmt 1 view .LVU1015
 133:Frame.h       ****         *m_pChange = true;
 3165              		.loc 2 133 11 is_stmt 0 view .LVU1016
 3166 00f2 03F8067C 		strb	r7, [r3, #-6]
 134:Frame.h       ****     }
 3167              		.loc 2 134 9 is_stmt 1 view .LVU1017
 134:Frame.h       ****     }
 3168              		.loc 2 134 20 is_stmt 0 view .LVU1018
 3169 00f6 86F80090 		strb	r9, [r6]
 3170              	.LVL271:
 134:Frame.h       ****     }
 3171              		.loc 2 134 20 view .LVU1019
 3172              	.LBE475:
 3173              	.LBE479:
 3174 00fa D6E7     		b	.L145
 3175              	.LVL272:
 3176              	.L146:
 134:Frame.h       ****     }
 3177              		.loc 2 134 20 view .LVU1020
 3178 00fc 90F8E0B0 		ldrb	fp, [r0, #224]	@ zero_extendqisi2
 3179              	.LVL273:
 134:Frame.h       ****     }
 3180              		.loc 2 134 20 view .LVU1021
 3181 0100 90F8E1A0 		ldrb	r10, [r0, #225]	@ zero_extendqisi2
 3182              	.LVL274:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 83


 134:Frame.h       ****     }
 3183              		.loc 2 134 20 view .LVU1022
 3184 0104 90F8E290 		ldrb	r9, [r0, #226]	@ zero_extendqisi2
 3185              	.LVL275:
 3186              	.LBB480:
 3187              	.LBI476:
 130:Frame.h       ****         R = Color.m_R;
 3188              		.loc 2 130 17 is_stmt 1 view .LVU1023
 3189              	.LBB478:
 131:Frame.h       ****         G = Color.m_G;
 3190              		.loc 2 131 9 view .LVU1024
 134:Frame.h       ****     }
 3191              		.loc 2 134 20 is_stmt 0 view .LVU1025
 3192 0108 53F8046C 		ldr	r6, [r3, #-4]
 131:Frame.h       ****         G = Color.m_G;
 3193              		.loc 2 131 11 view .LVU1026
 3194 010c 03F808BC 		strb	fp, [r3, #-8]
 132:Frame.h       ****         B = Color.m_B;
 3195              		.loc 2 132 9 is_stmt 1 view .LVU1027
 132:Frame.h       ****         B = Color.m_B;
 3196              		.loc 2 132 11 is_stmt 0 view .LVU1028
 3197 0110 03F807AC 		strb	r10, [r3, #-7]
 133:Frame.h       ****         *m_pChange = true;
 3198              		.loc 2 133 9 is_stmt 1 view .LVU1029
 133:Frame.h       ****         *m_pChange = true;
 3199              		.loc 2 133 11 is_stmt 0 view .LVU1030
 3200 0114 03F8069C 		strb	r9, [r3, #-6]
 134:Frame.h       ****     }
 3201              		.loc 2 134 9 is_stmt 1 view .LVU1031
 134:Frame.h       ****     }
 3202              		.loc 2 134 20 is_stmt 0 view .LVU1032
 3203 0118 3770     		strb	r7, [r6]
 3204              	.LVL276:
 134:Frame.h       ****     }
 3205              		.loc 2 134 20 view .LVU1033
 3206 011a C6E7     		b	.L145
 3207              	.LVL277:
 3208              	.L144:
 134:Frame.h       ****     }
 3209              		.loc 2 134 20 view .LVU1034
 3210              	.LBE478:
 3211              	.LBE480:
 256:GFX.cpp       ****         indexX = 0;
 3212              		.loc 1 256 5 is_stmt 1 discriminator 2 view .LVU1035
 256:GFX.cpp       ****         indexX = 0;
 3213              		.loc 1 256 35 discriminator 2 view .LVU1036
 3214 011c 069C     		ldr	r4, [sp, #24]
 3215 011e 6B1C     		adds	r3, r5, #1
 3216 0120 A542     		cmp	r5, r4
 3217 0122 9BB2     		uxth	r3, r3
 3218 0124 04D0     		beq	.L150
 3219 0126 1D46     		mov	r5, r3
 3220 0128 ACE7     		b	.L151
 3221              	.LVL278:
 3222              	.L142:
 256:GFX.cpp       ****         indexX = 0;
 3223              		.loc 1 256 35 is_stmt 0 discriminator 2 view .LVU1037
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 84


 3224              	.LBE484:
 276:GFX.cpp       ****         }
 277:GFX.cpp       ****     }  
 278:GFX.cpp       ****     m_xCursor += pTable->xAdvance;
 3225              		.loc 1 278 15 view .LVU1038
 3226 012a B0F8D830 		ldrh	r3, [r0, #216]
 3227 012e 0893     		str	r3, [sp, #32]
 3228              	.LVL279:
 3229              	.L150:
 3230              		.loc 1 278 5 is_stmt 1 view .LVU1039
 3231              		.loc 1 278 26 is_stmt 0 view .LVU1040
 3232 0130 099B     		ldr	r3, [sp, #36]
 3233              		.loc 1 278 15 view .LVU1041
 3234 0132 089A     		ldr	r2, [sp, #32]
 3235              	.LVL280:
 3236              		.loc 1 278 26 view .LVU1042
 3237 0134 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3238              		.loc 1 278 15 view .LVU1043
 3239 0136 1A44     		add	r2, r2, r3
 3240 0138 A0F8D820 		strh	r2, [r0, #216]	@ movhi
 279:GFX.cpp       **** }
 3241              		.loc 1 279 1 view .LVU1044
 3242 013c 0BB0     		add	sp, sp, #44
 3243              		.cfi_def_cfa_offset 36
 3244              		@ sp needed
 3245 013e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3246              		.loc 1 279 1 view .LVU1045
 3247              		.cfi_endproc
 3248              	.LFE2637:
 3250 0142 00BF     		.section	.text._ZN4cGFX8drawTextEPKcb,"ax",%progbits
 3251              		.align	1
 3252              		.p2align 2,,3
 3253              		.global	_ZN4cGFX8drawTextEPKcb
 3254              		.syntax unified
 3255              		.thumb
 3256              		.thumb_func
 3257              		.fpu fpv5-d16
 3259              	_ZN4cGFX8drawTextEPKcb:
 3260              	.LVL281:
 3261              	.LFB2638:
 280:GFX.cpp       **** 
 281:GFX.cpp       **** //-----------------------------------------------------------------------------------
 282:GFX.cpp       **** // Dessiner le texte
 283:GFX.cpp       **** void cGFX::drawText(const char *Text, bool Erase){
 3262              		.loc 1 283 50 is_stmt 1 view -0
 3263              		.cfi_startproc
 3264              		@ args = 0, pretend = 0, frame = 0
 3265              		@ frame_needed = 0, uses_anonymous_args = 0
 284:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 3266              		.loc 1 284 5 view .LVU1047
 283:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 3267              		.loc 1 283 50 is_stmt 0 view .LVU1048
 3268 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3269              		.cfi_def_cfa_offset 36
 3270              		.cfi_offset 4, -36
 3271              		.cfi_offset 5, -32
 3272              		.cfi_offset 6, -28
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 85


 3273              		.cfi_offset 7, -24
 3274              		.cfi_offset 8, -20
 3275              		.cfi_offset 9, -16
 3276              		.cfi_offset 10, -12
 3277              		.cfi_offset 11, -8
 3278              		.cfi_offset 14, -4
 3279 0004 0646     		mov	r6, r0
 3280              		.loc 1 284 39 view .LVU1049
 3281 0006 D0F8DC00 		ldr	r0, [r0, #220]
 3282              	.LVL282:
 3283              	.LBB493:
 3284              	.LBI493:
  77:GFX.h         ****     {
 3285              		.loc 3 77 20 is_stmt 1 view .LVU1050
 3286              	.LBB494:
  79:GFX.h         ****     }
 3287              		.loc 3 79 9 view .LVU1051
 3288              	.LBE494:
 3289              	.LBE493:
 283:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 3290              		.loc 1 283 50 is_stmt 0 view .LVU1052
 3291 000a 0C46     		mov	r4, r1
 3292 000c 1746     		mov	r7, r2
 3293              	.LBB497:
 3294              	.LBB495:
  79:GFX.h         ****     }
 3295              		.loc 3 79 17 view .LVU1053
 3296 000e 90F80880 		ldrb	r8, [r0, #8]	@ zero_extendqisi2
 3297              	.LVL283:
  79:GFX.h         ****     }
 3298              		.loc 3 79 17 view .LVU1054
 3299              	.LBE495:
 3300              	.LBE497:
 283:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 3301              		.loc 1 283 50 view .LVU1055
 3302 0012 83B0     		sub	sp, sp, #12
 3303              		.cfi_def_cfa_offset 48
 3304              		.loc 1 284 17 view .LVU1056
 3305 0014 B6F8DA20 		ldrh	r2, [r6, #218]
 3306              	.LVL284:
 3307              	.LBB498:
 3308              	.LBB496:
  79:GFX.h         ****     }
 3309              		.loc 3 79 17 view .LVU1057
 3310 0018 C8F10005 		rsb	r5, r8, #0
 3311              	.LBE496:
 3312              	.LBE498:
 3313              	.LBB499:
 3314              	.LBB500:
  61:GFX.h         ****         {
 3315              		.loc 3 61 16 view .LVU1058
 3316 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3317              	.LBE500:
 3318              	.LBE499:
 3319              		.loc 1 284 17 view .LVU1059
 3320 001e B6F8D810 		ldrh	r1, [r6, #216]
 3321              	.LVL285:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 86


 3322              		.loc 1 284 60 view .LVU1060
 3323 0022 EDB2     		uxtb	r5, r5
 3324              		.loc 1 284 17 view .LVU1061
 3325 0024 521B     		subs	r2, r2, r5
 3326 0026 92B2     		uxth	r2, r2
 3327              	.LVL286:
 3328              	.LBB511:
 3329              	.LBI499:
  57:GFX.h         ****     {
 3330              		.loc 3 57 14 is_stmt 1 view .LVU1062
 3331              	.LBB509:
  59:GFX.h         ****         uint16_t result = 0;
 3332              		.loc 3 59 9 view .LVU1063
  60:GFX.h         ****         while (*pText != '\0')
 3333              		.loc 3 60 9 view .LVU1064
  61:GFX.h         ****         {
 3334              		.loc 3 61 9 view .LVU1065
  61:GFX.h         ****         {
 3335              		.loc 3 61 23 view .LVU1066
 3336 0028 BBB1     		cbz	r3, .L160
 3337              	.LBB501:
 3338              	.LBB502:
  52:GFX.h         ****     }
 3339              		.loc 3 52 18 is_stmt 0 view .LVU1067
 3340 002a D0F800C0 		ldr	ip, [r0]
  52:GFX.h         ****     }
 3341              		.loc 3 52 50 view .LVU1068
 3342 002e 2546     		mov	r5, r4
 3343              	.LBE502:
 3344              	.LBE501:
  60:GFX.h         ****         while (*pText != '\0')
 3345              		.loc 3 60 18 view .LVU1069
 3346 0030 4FF0000B 		mov	fp, #0
 3347              	.LBB506:
 3348              	.LBB503:
  52:GFX.h         ****     }
 3349              		.loc 3 52 27 view .LVU1070
 3350 0034 DCF804A0 		ldr	r10, [ip, #4]
  52:GFX.h         ****     }
 3351              		.loc 3 52 50 view .LVU1071
 3352 0038 BCF80890 		ldrh	r9, [ip, #8]
 3353              	.LVL287:
 3354              	.L161:
  52:GFX.h         ****     }
 3355              		.loc 3 52 50 view .LVU1072
 3356              	.LBE503:
 3357              	.LBE506:
  63:GFX.h         ****         }
 3358              		.loc 3 63 13 is_stmt 1 view .LVU1073
 3359              	.LBB507:
 3360              	.LBI501:
  50:GFX.h         ****     {
 3361              		.loc 3 50 13 view .LVU1074
 3362              	.LBB504:
  52:GFX.h         ****     }
 3363              		.loc 3 52 9 view .LVU1075
  52:GFX.h         ****     }
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 87


 3364              		.loc 3 52 39 is_stmt 0 view .LVU1076
 3365 003c A3EB090E 		sub	lr, r3, r9
 3366              	.LBE504:
 3367              	.LBE507:
  61:GFX.h         ****         {
 3368              		.loc 3 61 16 view .LVU1077
 3369 0040 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 3370              	.LVL288:
 3371              	.LBB508:
 3372              	.LBB505:
  52:GFX.h         ****     }
 3373              		.loc 3 52 59 view .LVU1078
 3374 0044 0AEBCE0E 		add	lr, r10, lr, lsl #3
 3375              	.LBE505:
 3376              	.LBE508:
  63:GFX.h         ****         }
 3377              		.loc 3 63 20 view .LVU1079
 3378 0048 9EF804C0 		ldrb	ip, [lr, #4]	@ zero_extendqisi2
 3379 004c DC44     		add	ip, ip, fp
 3380 004e 1FFA8CFB 		uxth	fp, ip
 3381              	.LVL289:
  61:GFX.h         ****         {
 3382              		.loc 3 61 9 is_stmt 1 view .LVU1080
  61:GFX.h         ****         {
 3383              		.loc 3 61 23 view .LVU1081
 3384 0052 002B     		cmp	r3, #0
 3385 0054 F2D1     		bne	.L161
 3386              	.LBE509:
 3387              	.LBE511:
 3388              		.loc 1 284 17 is_stmt 0 view .LVU1082
 3389 0056 0FFA8BF3 		sxth	r3, fp
 3390              	.LVL290:
 3391              	.L160:
 3392              	.LBB512:
 3393              	.LBB510:
  65:GFX.h         ****     }
 3394              		.loc 3 65 9 is_stmt 1 view .LVU1083
  65:GFX.h         ****     }
 3395              		.loc 3 65 9 is_stmt 0 view .LVU1084
 3396              	.LBE510:
 3397              	.LBE512:
 3398              	.LBB513:
 3399              	.LBI513:
  70:GFX.h         ****     {
 3400              		.loc 3 70 20 is_stmt 1 view .LVU1085
 3401              	.LBB514:
  72:GFX.h         ****     }
 3402              		.loc 3 72 9 view .LVU1086
  72:GFX.h         ****     }
 3403              		.loc 3 72 9 is_stmt 0 view .LVU1087
 3404              	.LBE514:
 3405              	.LBE513:
 3406              		.loc 1 284 17 view .LVU1088
 3407 005a D6F8E450 		ldr	r5, [r6, #228]
 3408 005e 0195     		str	r5, [sp, #4]
 3409              	.LBB516:
 3410              	.LBB515:
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 88


  72:GFX.h         ****     }
 3411              		.loc 3 72 30 view .LVU1089
 3412 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3413 0062 A0EB0808 		sub	r8, r0, r8
 3414              	.LBE515:
 3415              	.LBE516:
 3416              		.loc 1 284 17 view .LVU1090
 3417 0066 5FFA88F0 		uxtb	r0, r8
 3418 006a 0090     		str	r0, [sp]
 3419 006c 3046     		mov	r0, r6
 3420 006e FFF7FEFF 		bl	_ZN4cGFX12drawFillRectEttss6cColor
 3421              	.LVL291:
 285:GFX.cpp       ****     const char *pText = Text;
 3422              		.loc 1 285 5 is_stmt 1 view .LVU1091
 286:GFX.cpp       ****     while(*pText != '\0'){
 3423              		.loc 1 286 5 view .LVU1092
 3424              		.loc 1 286 18 view .LVU1093
 3425              		.loc 1 286 11 is_stmt 0 view .LVU1094
 3426 0072 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 3427              		.loc 1 286 18 view .LVU1095
 3428 0074 39B1     		cbz	r1, .L159
 3429              	.LVL292:
 3430              	.L162:
 287:GFX.cpp       ****         drawChar(*pText++, Erase);
 3431              		.loc 1 287 9 is_stmt 1 view .LVU1096
 3432              		.loc 1 287 17 is_stmt 0 view .LVU1097
 3433 0076 3A46     		mov	r2, r7
 3434 0078 3046     		mov	r0, r6
 3435 007a FFF7FEFF 		bl	_ZN4cGFX8drawCharEcb
 3436              	.LVL293:
 286:GFX.cpp       ****     while(*pText != '\0'){
 3437              		.loc 1 286 5 is_stmt 1 view .LVU1098
 286:GFX.cpp       ****     while(*pText != '\0'){
 3438              		.loc 1 286 18 view .LVU1099
 286:GFX.cpp       ****     while(*pText != '\0'){
 3439              		.loc 1 286 11 is_stmt 0 view .LVU1100
 3440 007e 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 3441              	.LVL294:
 286:GFX.cpp       ****     while(*pText != '\0'){
 3442              		.loc 1 286 18 view .LVU1101
 3443 0082 0029     		cmp	r1, #0
 3444 0084 F7D1     		bne	.L162
 3445              	.L159:
 288:GFX.cpp       ****     }
 289:GFX.cpp       **** }
 3446              		.loc 1 289 1 view .LVU1102
 3447 0086 03B0     		add	sp, sp, #12
 3448              		.cfi_def_cfa_offset 36
 3449              		@ sp needed
 3450 0088 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3451              		.loc 1 289 1 view .LVU1103
 3452              		.cfi_endproc
 3453              	.LFE2638:
 3455              		.section	.text._ZN4cGFX13drawTransTextEPKcb,"ax",%progbits
 3456              		.align	1
 3457              		.p2align 2,,3
 3458              		.global	_ZN4cGFX13drawTransTextEPKcb
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 89


 3459              		.syntax unified
 3460              		.thumb
 3461              		.thumb_func
 3462              		.fpu fpv5-d16
 3464              	_ZN4cGFX13drawTransTextEPKcb:
 3465              	.LVL295:
 3466              	.LFB2639:
 290:GFX.cpp       **** 
 291:GFX.cpp       **** //-----------------------------------------------------------------------------------
 292:GFX.cpp       **** // Dessiner le texte sans couleur d'arriere plan
 293:GFX.cpp       **** void cGFX::drawTransText(const char *Text, bool Erase){
 3467              		.loc 1 293 55 is_stmt 1 view -0
 3468              		.cfi_startproc
 3469              		@ args = 0, pretend = 0, frame = 0
 3470              		@ frame_needed = 0, uses_anonymous_args = 0
 294:GFX.cpp       ****     const char *pText = Text;
 3471              		.loc 1 294 5 view .LVU1105
 293:GFX.cpp       ****     const char *pText = Text;
 3472              		.loc 1 293 55 is_stmt 0 view .LVU1106
 3473 0000 38B5     		push	{r3, r4, r5, lr}
 3474              		.cfi_def_cfa_offset 16
 3475              		.cfi_offset 3, -16
 3476              		.cfi_offset 4, -12
 3477              		.cfi_offset 5, -8
 3478              		.cfi_offset 14, -4
 293:GFX.cpp       ****     const char *pText = Text;
 3479              		.loc 1 293 55 view .LVU1107
 3480 0002 0C46     		mov	r4, r1
 3481              	.LVL296:
 295:GFX.cpp       ****     while(*pText != '\0'){
 3482              		.loc 1 295 5 is_stmt 1 view .LVU1108
 3483              		.loc 1 295 18 view .LVU1109
 3484              		.loc 1 295 11 is_stmt 0 view .LVU1110
 3485 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3486              	.LVL297:
 3487              		.loc 1 295 18 view .LVU1111
 3488 0006 39B1     		cbz	r1, .L171
 3489 0008 1546     		mov	r5, r2
 3490              	.LVL298:
 3491              	.L173:
 296:GFX.cpp       ****         drawChar(*pText++, Erase);
 3492              		.loc 1 296 9 is_stmt 1 view .LVU1112
 3493              		.loc 1 296 17 is_stmt 0 view .LVU1113
 3494 000a 2A46     		mov	r2, r5
 3495 000c FFF7FEFF 		bl	_ZN4cGFX8drawCharEcb
 3496              	.LVL299:
 295:GFX.cpp       ****     while(*pText != '\0'){
 3497              		.loc 1 295 5 is_stmt 1 view .LVU1114
 295:GFX.cpp       ****     while(*pText != '\0'){
 3498              		.loc 1 295 18 view .LVU1115
 295:GFX.cpp       ****     while(*pText != '\0'){
 3499              		.loc 1 295 11 is_stmt 0 view .LVU1116
 3500 0010 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 3501              	.LVL300:
 295:GFX.cpp       ****     while(*pText != '\0'){
 3502              		.loc 1 295 18 view .LVU1117
 3503 0014 0029     		cmp	r1, #0
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 90


 3504 0016 F8D1     		bne	.L173
 3505              	.L171:
 297:GFX.cpp       ****     }
 298:GFX.cpp       **** }...
 3506              		.loc 1 298 1 view .LVU1118
 3507 0018 38BD     		pop	{r3, r4, r5, pc}
 3508              		.loc 1 298 1 view .LVU1119
 3509              		.cfi_endproc
 3510              	.LFE2639:
 3512 001a 00BF     		.text
 3513              	.Letext0:
 3514              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 3515              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 3516              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 3517              		.file 7 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 3518              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 3519              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 3520              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 3521              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 3522              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 3523              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 3524              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 3525              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 3526              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 3527              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 3528              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 3529              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 3530              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 3531              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 3532              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 3533              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 3534              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 3535              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 3536              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 3537              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 3538              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 3539              		.file 29 "../../../../Desktop/DaisyExamples/libDaisy//src/daisy_core.h"
 3540              		.file 30 "../../../../Desktop/DaisyExamples/libDaisy//src/per/gpio.h"
 3541              		.file 31 "../../../../Desktop/DaisyExamples/libDaisy//src/per/spi.h"
 3542              		.file 32 "../../../../Desktop/DaisyExamples/libDaisy//src/util/wav_format.h"
 3543              		.file 33 "../../../../Desktop/DaisyExamples/libDaisy//src/dev/max11300.h"
 3544              		.file 34 "../../../../Desktop/DaisyExamples/libDaisy//src/daisy_seed.h"
 3545              		.file 35 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 3546              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 3547              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 3548              		.file 38 "TFT_SPI.h"
 3549              		.file 39 "<built-in>"
 3550              		.file 40 "../../../../Desktop/DaisyExamples/libDaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s 			page 91


DEFINED SYMBOLS
                            *ABS*:00000000 GFX.cpp
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:17     .text._ZN5cFontC2EPK7GFXfont:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:26     .text._ZN5cFontC2EPK7GFXfont:00000000 _ZN5cFontC2EPK7GFXfont
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:26     .text._ZN5cFontC2EPK7GFXfont:00000000 _ZN5cFontC1EPK7GFXfont
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:137    .text._ZN4cGFX12drawFillRectEttss6cColor:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:145    .text._ZN4cGFX12drawFillRectEttss6cColor:00000000 _ZN4cGFX12drawFillRectEttss6cColor
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:397    .text._ZN4cGFX8drawLineEtttt6cColor:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:405    .text._ZN4cGFX8drawLineEtttt6cColor:00000000 _ZN4cGFX8drawLineEtttt6cColor
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1212   .text._ZN4cGFX8drawRectEttss6cColor:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1220   .text._ZN4cGFX8drawRectEttss6cColor:00000000 _ZN4cGFX8drawRectEttss6cColor
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1350   .text._ZN4cGFX10drawCircleEttt6cColor:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1358   .text._ZN4cGFX10drawCircleEttt6cColor:00000000 _ZN4cGFX10drawCircleEttt6cColor
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1985   .text._ZN4cGFX14drawFillCircleEttt6cColor:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:1993   .text._ZN4cGFX14drawFillCircleEttt6cColor:00000000 _ZN4cGFX14drawFillCircleEttt6cColor
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:2603   .text._ZN4cGFX15drawR8G8B8ImageEttttPKh:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:2611   .text._ZN4cGFX15drawR8G8B8ImageEttttPKh:00000000 _ZN4cGFX15drawR8G8B8ImageEttttPKh
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:2871   .text._ZN4cGFX8drawCharEcb:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:2879   .text._ZN4cGFX8drawCharEcb:00000000 _ZN4cGFX8drawCharEcb
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:3251   .text._ZN4cGFX8drawTextEPKcb:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:3259   .text._ZN4cGFX8drawTextEPKcb:00000000 _ZN4cGFX8drawTextEPKcb
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:3456   .text._ZN4cGFX13drawTransTextEPKcb:00000000 $t
C:\Users\pbant\AppData\Local\Temp\cczfsu4f.s:3464   .text._ZN4cGFX13drawTransTextEPKcb:00000000 _ZN4cGFX13drawTransTextEPKcb

NO UNDEFINED SYMBOLS
